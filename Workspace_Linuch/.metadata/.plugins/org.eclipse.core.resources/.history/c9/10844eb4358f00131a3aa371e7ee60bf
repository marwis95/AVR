
#include <avr/io.h>
#include <util/delay.h>
#include "HD44780.h"
//#define ADCIN PC5;
#define VREF 4.99

char str[17]="   Termometr    ";
char str_2[17]="   Termometr    ";

void main(void){
char wynik[]="           ";
char t_wynik[]="           ";
char adc_string[]="           ";
float adc;
double therm, temp_pt;

double temp, temp2;
unsigned char ds18b20_pad[9], ds18b20_pad_2[9];


LCD_Initalize();
LCD_GoTo(0, 0);
LCD_WriteText("ADC :)");

ADCSRA = (1<<ADEN) | (1<<ADPS2); //Init + presc
ADMUX  =    (1<<REFS0) | (1<<MUX2) | (1<<MUX0);  //kanal + v (5.0)
DDRC &=~ (1<<PC5);

for(;;)
 {
     ADCSRA |= (1<<ADSC);//ADSC: Uruchomienie pojedynczej konwersji
     while(ADCSRA & (1<<ADSC)); //czeka na zakończenie konwersji
    ADC;
    adc=ADC*VREF/1024;      //przeliczenie wartości na napięcie
    temp_pt=ADC;
    therm=temp_pt/3.41;

    if(ds18b20_ConvertT())
      {

         /* 750ms - czas konwersji */
         _delay_ms(750);

        /* Odczyt z układu ds18b20, dane zapisywane są w tablicy ds18b20_pad.
           Dwie pierwsze pozycje w tablicy to kolejno mniej znaczący bajt i bardziej
       znaczący bajt wartość zmierzonej temperatury */
         ds18b20_Read(ds18b20_pad);

        /* Składa dwa bajty wyniku pomiaru w całość. Cztery pierwsze bity mniej
           znaczącego bajtu to część ułamkowa wartości temperatury, więc całość
           dzielona jest przez 16 */
         temp = ((ds18b20_pad[1] << 8) + ds18b20_pad[0]) / 16.0 ;

        /* Formułuje komunikat w tablicy 'str' */
         sprintf(str,"DS1=%4.1f", temp);

         LCD_GoTo(0,1);
        /* Wysyła komunikat do wyświetlacza */
         LCD_WriteText(str);
      }




     sprintf(t_wynik, "PT100=%1.f", therm);
     LCD_GoTo(0,0);
     LCD_WriteText(t_wynik);
     _delay_ms(5000);
 }

}

//vcc/vmax*100 vcc=7,6
