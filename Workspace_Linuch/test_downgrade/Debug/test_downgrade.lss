
test_downgrade.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a2c  00000000  00000000  00000120  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000006eb  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 63 00 	jmp	0xc6	; 0xc6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 1000000L
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62

   DDRA = 0xFF;
  74:	8a e3       	ldi	r24, 0x3A	; 58
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	2f ef       	ldi	r18, 0xFF	; 255
  7a:	fc 01       	movw	r30, r24
  7c:	20 83       	st	Z, r18
   DDRB = 0xFF;
  7e:	87 e3       	ldi	r24, 0x37	; 55
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	2f ef       	ldi	r18, 0xFF	; 255
  84:	fc 01       	movw	r30, r24
  86:	20 83       	st	Z, r18
   DDRC = 0xFF;
  88:	84 e3       	ldi	r24, 0x34	; 52
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	fc 01       	movw	r30, r24
  90:	20 83       	st	Z, r18
   DDRD = 0xFF;
  92:	81 e3       	ldi	r24, 0x31	; 49
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	2f ef       	ldi	r18, 0xFF	; 255
  98:	fc 01       	movw	r30, r24
  9a:	20 83       	st	Z, r18

   /* Pocz¹tek nieskoñczonej pêtli */
   while(1)
   {
	PORTA=0xFF;
  9c:	8b e3       	ldi	r24, 0x3B	; 59
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	2f ef       	ldi	r18, 0xFF	; 255
  a2:	fc 01       	movw	r30, r24
  a4:	20 83       	st	Z, r18
	PORTB=0xFF;
  a6:	88 e3       	ldi	r24, 0x38	; 56
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	fc 01       	movw	r30, r24
  ae:	20 83       	st	Z, r18
	PORTC=0xFF;
  b0:	85 e3       	ldi	r24, 0x35	; 53
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
	PORTD=0xFF;
  ba:	82 e3       	ldi	r24, 0x32	; 50
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
   }
  c4:	eb cf       	rjmp	.-42     	; 0x9c <main+0x30>

000000c6 <_exit>:
  c6:	f8 94       	cli

000000c8 <__stop_program>:
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <__stop_program>
