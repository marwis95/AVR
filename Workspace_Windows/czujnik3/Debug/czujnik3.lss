
czujnik3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013ee  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  000013ee  00001462  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800168  000014f6  0000156a  2**0
                  ALLOC
  3 .stab         0000081c  00000000  00000000  0000156c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000007c3  00000000  00000000  00001d88  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 3c 02 	jmp	0x478	; 0x478 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ee       	ldi	r30, 0xEE	; 238
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 e6       	ldi	r26, 0x68	; 104
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 36       	cpi	r26, 0x6E	; 110
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 25 02 	call	0x44a	; 0x44a <main>
      8a:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <start>:

     #define RS_BAUD 9600
     #define RS_UBRR F_CPU / 16 / RS_BAUD - 1

    void start(uint16_t ubrr)
    {
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	00 d0       	rcall	.+0      	; 0x98 <start+0x6>
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
      9c:	9a 83       	std	Y+2, r25	; 0x02
      9e:	89 83       	std	Y+1, r24	; 0x01
        // Ustawienie prêdkoœci transmisji
        UBRRH = (uint8_t)(ubrr >> 8);
      a0:	e0 e4       	ldi	r30, 0x40	; 64
      a2:	f0 e0       	ldi	r31, 0x00	; 0
      a4:	89 81       	ldd	r24, Y+1	; 0x01
      a6:	9a 81       	ldd	r25, Y+2	; 0x02
      a8:	89 2f       	mov	r24, r25
      aa:	99 27       	eor	r25, r25
      ac:	80 83       	st	Z, r24
        UBRRL = (uint8_t)ubrr;
      ae:	e9 e2       	ldi	r30, 0x29	; 41
      b0:	f0 e0       	ldi	r31, 0x00	; 0
      b2:	89 81       	ldd	r24, Y+1	; 0x01
      b4:	80 83       	st	Z, r24

        // W³¹czenie nadajnika i odbiornika
        UCSRB = (1 << RXEN) | (1 << TXEN);
      b6:	ea e2       	ldi	r30, 0x2A	; 42
      b8:	f0 e0       	ldi	r31, 0x00	; 0
      ba:	88 e1       	ldi	r24, 0x18	; 24
      bc:	80 83       	st	Z, r24

        // Ustawienie formatu ramki:
        // 8 bitów danych, 1 bit stopu, brak parzystoœci
        UCSRC = (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);
      be:	e0 e4       	ldi	r30, 0x40	; 64
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	86 e8       	ldi	r24, 0x86	; 134
      c4:	80 83       	st	Z, r24
    }
      c6:	0f 90       	pop	r0
      c8:	0f 90       	pop	r0
      ca:	cf 91       	pop	r28
      cc:	df 91       	pop	r29
      ce:	08 95       	ret

000000d0 <nadaj>:
    void nadaj(uint8_t data)
    {
      d0:	df 93       	push	r29
      d2:	cf 93       	push	r28
      d4:	0f 92       	push	r0
      d6:	cd b7       	in	r28, 0x3d	; 61
      d8:	de b7       	in	r29, 0x3e	; 62
      da:	89 83       	std	Y+1, r24	; 0x01
        // Oczekiwanie na zakoñczenie nadawania
        while (!(UCSRA & (1 << UDRE)));
      dc:	eb e2       	ldi	r30, 0x2B	; 43
      de:	f0 e0       	ldi	r31, 0x00	; 0
      e0:	80 81       	ld	r24, Z
      e2:	88 2f       	mov	r24, r24
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	80 72       	andi	r24, 0x20	; 32
      e8:	90 70       	andi	r25, 0x00	; 0
      ea:	00 97       	sbiw	r24, 0x00	; 0
      ec:	b9 f3       	breq	.-18     	; 0xdc <nadaj+0xc>

        // Wys³anie danych
        UDR = data;
      ee:	ec e2       	ldi	r30, 0x2C	; 44
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	89 81       	ldd	r24, Y+1	; 0x01
      f4:	80 83       	st	Z, r24
    }
      f6:	0f 90       	pop	r0
      f8:	cf 91       	pop	r28
      fa:	df 91       	pop	r29
      fc:	08 95       	ret

000000fe <uart_ischar>:
    uint8_t uart_ischar()
    {
      fe:	df 93       	push	r29
     100:	cf 93       	push	r28
     102:	cd b7       	in	r28, 0x3d	; 61
     104:	de b7       	in	r29, 0x3e	; 62
        // Czy w buforze s¹ dane?
        return (UCSRA & (1 << RXC));
     106:	eb e2       	ldi	r30, 0x2B	; 43
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	80 78       	andi	r24, 0x80	; 128
    }
     10e:	cf 91       	pop	r28
     110:	df 91       	pop	r29
     112:	08 95       	ret

00000114 <uart_getc>:
    uint8_t uart_getc()
    {
     114:	df 93       	push	r29
     116:	cf 93       	push	r28
     118:	cd b7       	in	r28, 0x3d	; 61
     11a:	de b7       	in	r29, 0x3e	; 62
        // Czy w buforze s¹ dane?
        while(!uart_ischar());
     11c:	0e 94 7f 00 	call	0xfe	; 0xfe <uart_ischar>
     120:	88 23       	and	r24, r24
     122:	e1 f3       	breq	.-8      	; 0x11c <uart_getc+0x8>

        // Dane z bufora
        return UDR;
     124:	ec e2       	ldi	r30, 0x2C	; 44
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	80 81       	ld	r24, Z
    }
     12a:	cf 91       	pop	r28
     12c:	df 91       	pop	r29
     12e:	08 95       	ret

00000130 <InitInterrupt>:



     //F-cja inicjuj¹ca przerwania zawnêtrzne i timer2
       void InitInterrupt(void)
       {
     130:	df 93       	push	r29
     132:	cf 93       	push	r28
     134:	cd b7       	in	r28, 0x3d	; 61
     136:	de b7       	in	r29, 0x3e	; 62
       //PRZERWANIA ZEWNÊTRZNE

           DDRD = 0xFF;                            //PD2 - wejscie (Echo)
     138:	e1 e3       	ldi	r30, 0x31	; 49
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	8f ef       	ldi	r24, 0xFF	; 255
     13e:	80 83       	st	Z, r24

           MCUCR = (1<<ISC01) | (1<<ISC00);        //Przerwanie zostanie wywo³ane zboczem narastaj¹ym
     140:	e5 e5       	ldi	r30, 0x55	; 85
     142:	f0 e0       	ldi	r31, 0x00	; 0
     144:	83 e0       	ldi	r24, 0x03	; 3
     146:	80 83       	st	Z, r24
                                                   //na wejœciach INT0, INT1, INT2
       //TIMER2
           TCNT2 = 0x00;                           //Zerowanie rejestru TCNT2 (Rejestr jednostki zegara)
     148:	e4 e4       	ldi	r30, 0x44	; 68
     14a:	f0 e0       	ldi	r31, 0x00	; 0
     14c:	10 82       	st	Z, r1

           TCCR2 = (1<<WGM21)|(1<<CS20);           //Ustawia timer2 w tryb CTC bez preskalera
     14e:	e5 e4       	ldi	r30, 0x45	; 69
     150:	f0 e0       	ldi	r31, 0x00	; 0
     152:	89 e0       	ldi	r24, 0x09	; 9
     154:	80 83       	st	Z, r24
                                                   //Czestotliwoœæ 16Mhz/1=16MHz

           OCR2 = 0x01;                            //Górna wartoœæ licznika wynosi 16
     156:	e3 e4       	ldi	r30, 0x43	; 67
     158:	f0 e0       	ldi	r31, 0x00	; 0
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	80 83       	st	Z, r24
                                                   //Przerwania bêd¹ nastêpowaæ co 1us //
           //sei();
           SREG = 0x80;
     15e:	ef e5       	ldi	r30, 0x5F	; 95
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	80 e8       	ldi	r24, 0x80	; 128
     164:	80 83       	st	Z, r24
     }
     166:	cf 91       	pop	r28
     168:	df 91       	pop	r29
     16a:	08 95       	ret

0000016c <l_pomiar>:


       double l_pomiar(void)
       {
     16c:	df 93       	push	r29
     16e:	cf 93       	push	r28
     170:	cd b7       	in	r28, 0x3d	; 61
     172:	de b7       	in	r29, 0x3e	; 62
     174:	a6 97       	sbiw	r28, 0x26	; 38
     176:	0f b6       	in	r0, 0x3f	; 63
     178:	f8 94       	cli
     17a:	de bf       	out	0x3e, r29	; 62
     17c:	0f be       	out	0x3f, r0	; 63
     17e:	cd bf       	out	0x3d, r28	; 61
           SetBit(MCUCR, INT0);
     180:	a5 e5       	ldi	r26, 0x55	; 85
     182:	b0 e0       	ldi	r27, 0x00	; 0
     184:	e5 e5       	ldi	r30, 0x55	; 85
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	80 81       	ld	r24, Z
     18a:	80 64       	ori	r24, 0x40	; 64
     18c:	8c 93       	st	X, r24
           SetBit(PORTD, 3);
     18e:	a2 e3       	ldi	r26, 0x32	; 50
     190:	b0 e0       	ldi	r27, 0x00	; 0
     192:	e2 e3       	ldi	r30, 0x32	; 50
     194:	f0 e0       	ldi	r31, 0x00	; 0
     196:	80 81       	ld	r24, Z
     198:	88 60       	ori	r24, 0x08	; 8
     19a:	8c 93       	st	X, r24
     19c:	80 e0       	ldi	r24, 0x00	; 0
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	a0 ea       	ldi	r26, 0xA0	; 160
     1a2:	b1 e4       	ldi	r27, 0x41	; 65
     1a4:	8b a3       	std	Y+35, r24	; 0x23
     1a6:	9c a3       	std	Y+36, r25	; 0x24
     1a8:	ad a3       	std	Y+37, r26	; 0x25
     1aa:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     1ac:	2b ea       	ldi	r18, 0xAB	; 171
     1ae:	3a ea       	ldi	r19, 0xAA	; 170
     1b0:	4a ea       	ldi	r20, 0xAA	; 170
     1b2:	5e e3       	ldi	r21, 0x3E	; 62
     1b4:	6b a1       	ldd	r22, Y+35	; 0x23
     1b6:	7c a1       	ldd	r23, Y+36	; 0x24
     1b8:	8d a1       	ldd	r24, Y+37	; 0x25
     1ba:	9e a1       	ldd	r25, Y+38	; 0x26
     1bc:	0e 94 bc 04 	call	0x978	; 0x978 <__mulsf3>
     1c0:	dc 01       	movw	r26, r24
     1c2:	cb 01       	movw	r24, r22
     1c4:	8f 8f       	std	Y+31, r24	; 0x1f
     1c6:	98 a3       	std	Y+32, r25	; 0x20
     1c8:	a9 a3       	std	Y+33, r26	; 0x21
     1ca:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
     1cc:	20 e0       	ldi	r18, 0x00	; 0
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	40 e8       	ldi	r20, 0x80	; 128
     1d2:	5f e3       	ldi	r21, 0x3F	; 63
     1d4:	6f 8d       	ldd	r22, Y+31	; 0x1f
     1d6:	78 a1       	ldd	r23, Y+32	; 0x20
     1d8:	89 a1       	ldd	r24, Y+33	; 0x21
     1da:	9a a1       	ldd	r25, Y+34	; 0x22
     1dc:	0e 94 c0 06 	call	0xd80	; 0xd80 <__ltsf2>
     1e0:	88 23       	and	r24, r24
     1e2:	1c f4       	brge	.+6      	; 0x1ea <l_pomiar+0x7e>
		__ticks = 1;
     1e4:	81 e0       	ldi	r24, 0x01	; 1
     1e6:	8e 8f       	std	Y+30, r24	; 0x1e
     1e8:	91 c0       	rjmp	.+290    	; 0x30c <l_pomiar+0x1a0>
	else if (__tmp > 255)
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	4f e7       	ldi	r20, 0x7F	; 127
     1f0:	53 e4       	ldi	r21, 0x43	; 67
     1f2:	6f 8d       	ldd	r22, Y+31	; 0x1f
     1f4:	78 a1       	ldd	r23, Y+32	; 0x20
     1f6:	89 a1       	ldd	r24, Y+33	; 0x21
     1f8:	9a a1       	ldd	r25, Y+34	; 0x22
     1fa:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__gtsf2>
     1fe:	18 16       	cp	r1, r24
     200:	0c f0       	brlt	.+2      	; 0x204 <l_pomiar+0x98>
     202:	7b c0       	rjmp	.+246    	; 0x2fa <l_pomiar+0x18e>
	{
		_delay_ms(__us / 1000.0);
     204:	20 e0       	ldi	r18, 0x00	; 0
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	4a e7       	ldi	r20, 0x7A	; 122
     20a:	54 e4       	ldi	r21, 0x44	; 68
     20c:	6b a1       	ldd	r22, Y+35	; 0x23
     20e:	7c a1       	ldd	r23, Y+36	; 0x24
     210:	8d a1       	ldd	r24, Y+37	; 0x25
     212:	9e a1       	ldd	r25, Y+38	; 0x26
     214:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__divsf3>
     218:	dc 01       	movw	r26, r24
     21a:	cb 01       	movw	r24, r22
     21c:	8a 8f       	std	Y+26, r24	; 0x1a
     21e:	9b 8f       	std	Y+27, r25	; 0x1b
     220:	ac 8f       	std	Y+28, r26	; 0x1c
     222:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	4a e7       	ldi	r20, 0x7A	; 122
     22a:	53 e4       	ldi	r21, 0x43	; 67
     22c:	6a 8d       	ldd	r22, Y+26	; 0x1a
     22e:	7b 8d       	ldd	r23, Y+27	; 0x1b
     230:	8c 8d       	ldd	r24, Y+28	; 0x1c
     232:	9d 8d       	ldd	r25, Y+29	; 0x1d
     234:	0e 94 bc 04 	call	0x978	; 0x978 <__mulsf3>
     238:	dc 01       	movw	r26, r24
     23a:	cb 01       	movw	r24, r22
     23c:	8e 8b       	std	Y+22, r24	; 0x16
     23e:	9f 8b       	std	Y+23, r25	; 0x17
     240:	a8 8f       	std	Y+24, r26	; 0x18
     242:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
     244:	20 e0       	ldi	r18, 0x00	; 0
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	40 e8       	ldi	r20, 0x80	; 128
     24a:	5f e3       	ldi	r21, 0x3F	; 63
     24c:	6e 89       	ldd	r22, Y+22	; 0x16
     24e:	7f 89       	ldd	r23, Y+23	; 0x17
     250:	88 8d       	ldd	r24, Y+24	; 0x18
     252:	99 8d       	ldd	r25, Y+25	; 0x19
     254:	0e 94 c0 06 	call	0xd80	; 0xd80 <__ltsf2>
     258:	88 23       	and	r24, r24
     25a:	2c f4       	brge	.+10     	; 0x266 <l_pomiar+0xfa>
		__ticks = 1;
     25c:	81 e0       	ldi	r24, 0x01	; 1
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	9d 8b       	std	Y+21, r25	; 0x15
     262:	8c 8b       	std	Y+20, r24	; 0x14
     264:	3f c0       	rjmp	.+126    	; 0x2e4 <l_pomiar+0x178>
	else if (__tmp > 65535)
     266:	20 e0       	ldi	r18, 0x00	; 0
     268:	3f ef       	ldi	r19, 0xFF	; 255
     26a:	4f e7       	ldi	r20, 0x7F	; 127
     26c:	57 e4       	ldi	r21, 0x47	; 71
     26e:	6e 89       	ldd	r22, Y+22	; 0x16
     270:	7f 89       	ldd	r23, Y+23	; 0x17
     272:	88 8d       	ldd	r24, Y+24	; 0x18
     274:	99 8d       	ldd	r25, Y+25	; 0x19
     276:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__gtsf2>
     27a:	18 16       	cp	r1, r24
     27c:	4c f5       	brge	.+82     	; 0x2d0 <l_pomiar+0x164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     27e:	20 e0       	ldi	r18, 0x00	; 0
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	40 e2       	ldi	r20, 0x20	; 32
     284:	51 e4       	ldi	r21, 0x41	; 65
     286:	6a 8d       	ldd	r22, Y+26	; 0x1a
     288:	7b 8d       	ldd	r23, Y+27	; 0x1b
     28a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     28c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     28e:	0e 94 bc 04 	call	0x978	; 0x978 <__mulsf3>
     292:	dc 01       	movw	r26, r24
     294:	cb 01       	movw	r24, r22
     296:	bc 01       	movw	r22, r24
     298:	cd 01       	movw	r24, r26
     29a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     29e:	dc 01       	movw	r26, r24
     2a0:	cb 01       	movw	r24, r22
     2a2:	9d 8b       	std	Y+21, r25	; 0x15
     2a4:	8c 8b       	std	Y+20, r24	; 0x14
     2a6:	0f c0       	rjmp	.+30     	; 0x2c6 <l_pomiar+0x15a>
     2a8:	89 e1       	ldi	r24, 0x19	; 25
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	9b 8b       	std	Y+19, r25	; 0x13
     2ae:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2b0:	8a 89       	ldd	r24, Y+18	; 0x12
     2b2:	9b 89       	ldd	r25, Y+19	; 0x13
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <l_pomiar+0x148>
     2b8:	9b 8b       	std	Y+19, r25	; 0x13
     2ba:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2bc:	8c 89       	ldd	r24, Y+20	; 0x14
     2be:	9d 89       	ldd	r25, Y+21	; 0x15
     2c0:	01 97       	sbiw	r24, 0x01	; 1
     2c2:	9d 8b       	std	Y+21, r25	; 0x15
     2c4:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2c6:	8c 89       	ldd	r24, Y+20	; 0x14
     2c8:	9d 89       	ldd	r25, Y+21	; 0x15
     2ca:	00 97       	sbiw	r24, 0x00	; 0
     2cc:	69 f7       	brne	.-38     	; 0x2a8 <l_pomiar+0x13c>
     2ce:	24 c0       	rjmp	.+72     	; 0x318 <l_pomiar+0x1ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2d0:	6e 89       	ldd	r22, Y+22	; 0x16
     2d2:	7f 89       	ldd	r23, Y+23	; 0x17
     2d4:	88 8d       	ldd	r24, Y+24	; 0x18
     2d6:	99 8d       	ldd	r25, Y+25	; 0x19
     2d8:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     2dc:	dc 01       	movw	r26, r24
     2de:	cb 01       	movw	r24, r22
     2e0:	9d 8b       	std	Y+21, r25	; 0x15
     2e2:	8c 8b       	std	Y+20, r24	; 0x14
     2e4:	8c 89       	ldd	r24, Y+20	; 0x14
     2e6:	9d 89       	ldd	r25, Y+21	; 0x15
     2e8:	99 8b       	std	Y+17, r25	; 0x11
     2ea:	88 8b       	std	Y+16, r24	; 0x10
     2ec:	88 89       	ldd	r24, Y+16	; 0x10
     2ee:	99 89       	ldd	r25, Y+17	; 0x11
     2f0:	01 97       	sbiw	r24, 0x01	; 1
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <l_pomiar+0x184>
     2f4:	99 8b       	std	Y+17, r25	; 0x11
     2f6:	88 8b       	std	Y+16, r24	; 0x10
     2f8:	0f c0       	rjmp	.+30     	; 0x318 <l_pomiar+0x1ac>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2fa:	6f 8d       	ldd	r22, Y+31	; 0x1f
     2fc:	78 a1       	ldd	r23, Y+32	; 0x20
     2fe:	89 a1       	ldd	r24, Y+33	; 0x21
     300:	9a a1       	ldd	r25, Y+34	; 0x22
     302:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     306:	dc 01       	movw	r26, r24
     308:	cb 01       	movw	r24, r22
     30a:	8e 8f       	std	Y+30, r24	; 0x1e
     30c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     30e:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     310:	8f 85       	ldd	r24, Y+15	; 0x0f
     312:	8a 95       	dec	r24
     314:	f1 f7       	brne	.-4      	; 0x312 <l_pomiar+0x1a6>
     316:	8f 87       	std	Y+15, r24	; 0x0f
           _delay_us(20);
           ClrBit(PORTD, 3);
     318:	a2 e3       	ldi	r26, 0x32	; 50
     31a:	b0 e0       	ldi	r27, 0x00	; 0
     31c:	e2 e3       	ldi	r30, 0x32	; 50
     31e:	f0 e0       	ldi	r31, 0x00	; 0
     320:	80 81       	ld	r24, Z
     322:	87 7f       	andi	r24, 0xF7	; 247
     324:	8c 93       	st	X, r24
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	a0 e0       	ldi	r26, 0x00	; 0
     32c:	b1 e4       	ldi	r27, 0x41	; 65
     32e:	8b 87       	std	Y+11, r24	; 0x0b
     330:	9c 87       	std	Y+12, r25	; 0x0c
     332:	ad 87       	std	Y+13, r26	; 0x0d
     334:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	4a e7       	ldi	r20, 0x7A	; 122
     33c:	53 e4       	ldi	r21, 0x43	; 67
     33e:	6b 85       	ldd	r22, Y+11	; 0x0b
     340:	7c 85       	ldd	r23, Y+12	; 0x0c
     342:	8d 85       	ldd	r24, Y+13	; 0x0d
     344:	9e 85       	ldd	r25, Y+14	; 0x0e
     346:	0e 94 bc 04 	call	0x978	; 0x978 <__mulsf3>
     34a:	dc 01       	movw	r26, r24
     34c:	cb 01       	movw	r24, r22
     34e:	8f 83       	std	Y+7, r24	; 0x07
     350:	98 87       	std	Y+8, r25	; 0x08
     352:	a9 87       	std	Y+9, r26	; 0x09
     354:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	40 e8       	ldi	r20, 0x80	; 128
     35c:	5f e3       	ldi	r21, 0x3F	; 63
     35e:	6f 81       	ldd	r22, Y+7	; 0x07
     360:	78 85       	ldd	r23, Y+8	; 0x08
     362:	89 85       	ldd	r24, Y+9	; 0x09
     364:	9a 85       	ldd	r25, Y+10	; 0x0a
     366:	0e 94 c0 06 	call	0xd80	; 0xd80 <__ltsf2>
     36a:	88 23       	and	r24, r24
     36c:	2c f4       	brge	.+10     	; 0x378 <l_pomiar+0x20c>
		__ticks = 1;
     36e:	81 e0       	ldi	r24, 0x01	; 1
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	9e 83       	std	Y+6, r25	; 0x06
     374:	8d 83       	std	Y+5, r24	; 0x05
     376:	3f c0       	rjmp	.+126    	; 0x3f6 <l_pomiar+0x28a>
	else if (__tmp > 65535)
     378:	20 e0       	ldi	r18, 0x00	; 0
     37a:	3f ef       	ldi	r19, 0xFF	; 255
     37c:	4f e7       	ldi	r20, 0x7F	; 127
     37e:	57 e4       	ldi	r21, 0x47	; 71
     380:	6f 81       	ldd	r22, Y+7	; 0x07
     382:	78 85       	ldd	r23, Y+8	; 0x08
     384:	89 85       	ldd	r24, Y+9	; 0x09
     386:	9a 85       	ldd	r25, Y+10	; 0x0a
     388:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__gtsf2>
     38c:	18 16       	cp	r1, r24
     38e:	4c f5       	brge	.+82     	; 0x3e2 <l_pomiar+0x276>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	30 e0       	ldi	r19, 0x00	; 0
     394:	40 e2       	ldi	r20, 0x20	; 32
     396:	51 e4       	ldi	r21, 0x41	; 65
     398:	6b 85       	ldd	r22, Y+11	; 0x0b
     39a:	7c 85       	ldd	r23, Y+12	; 0x0c
     39c:	8d 85       	ldd	r24, Y+13	; 0x0d
     39e:	9e 85       	ldd	r25, Y+14	; 0x0e
     3a0:	0e 94 bc 04 	call	0x978	; 0x978 <__mulsf3>
     3a4:	dc 01       	movw	r26, r24
     3a6:	cb 01       	movw	r24, r22
     3a8:	bc 01       	movw	r22, r24
     3aa:	cd 01       	movw	r24, r26
     3ac:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     3b0:	dc 01       	movw	r26, r24
     3b2:	cb 01       	movw	r24, r22
     3b4:	9e 83       	std	Y+6, r25	; 0x06
     3b6:	8d 83       	std	Y+5, r24	; 0x05
     3b8:	0f c0       	rjmp	.+30     	; 0x3d8 <l_pomiar+0x26c>
     3ba:	89 e1       	ldi	r24, 0x19	; 25
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	9c 83       	std	Y+4, r25	; 0x04
     3c0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3c2:	8b 81       	ldd	r24, Y+3	; 0x03
     3c4:	9c 81       	ldd	r25, Y+4	; 0x04
     3c6:	01 97       	sbiw	r24, 0x01	; 1
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <l_pomiar+0x25a>
     3ca:	9c 83       	std	Y+4, r25	; 0x04
     3cc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3ce:	8d 81       	ldd	r24, Y+5	; 0x05
     3d0:	9e 81       	ldd	r25, Y+6	; 0x06
     3d2:	01 97       	sbiw	r24, 0x01	; 1
     3d4:	9e 83       	std	Y+6, r25	; 0x06
     3d6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3d8:	8d 81       	ldd	r24, Y+5	; 0x05
     3da:	9e 81       	ldd	r25, Y+6	; 0x06
     3dc:	00 97       	sbiw	r24, 0x00	; 0
     3de:	69 f7       	brne	.-38     	; 0x3ba <l_pomiar+0x24e>
     3e0:	14 c0       	rjmp	.+40     	; 0x40a <l_pomiar+0x29e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3e2:	6f 81       	ldd	r22, Y+7	; 0x07
     3e4:	78 85       	ldd	r23, Y+8	; 0x08
     3e6:	89 85       	ldd	r24, Y+9	; 0x09
     3e8:	9a 85       	ldd	r25, Y+10	; 0x0a
     3ea:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     3ee:	dc 01       	movw	r26, r24
     3f0:	cb 01       	movw	r24, r22
     3f2:	9e 83       	std	Y+6, r25	; 0x06
     3f4:	8d 83       	std	Y+5, r24	; 0x05
     3f6:	8d 81       	ldd	r24, Y+5	; 0x05
     3f8:	9e 81       	ldd	r25, Y+6	; 0x06
     3fa:	9a 83       	std	Y+2, r25	; 0x02
     3fc:	89 83       	std	Y+1, r24	; 0x01
     3fe:	89 81       	ldd	r24, Y+1	; 0x01
     400:	9a 81       	ldd	r25, Y+2	; 0x02
     402:	01 97       	sbiw	r24, 0x01	; 1
     404:	f1 f7       	brne	.-4      	; 0x402 <l_pomiar+0x296>
     406:	9a 83       	std	Y+2, r25	; 0x02
     408:	89 83       	std	Y+1, r24	; 0x01
           _delay_ms(8);
           ClrBit(MCUCR, INT0);
     40a:	a5 e5       	ldi	r26, 0x55	; 85
     40c:	b0 e0       	ldi	r27, 0x00	; 0
     40e:	e5 e5       	ldi	r30, 0x55	; 85
     410:	f0 e0       	ldi	r31, 0x00	; 0
     412:	80 81       	ld	r24, Z
     414:	8f 7b       	andi	r24, 0xBF	; 191
     416:	8c 93       	st	X, r24
           return odl0;
     418:	80 91 68 01 	lds	r24, 0x0168
     41c:	90 91 69 01 	lds	r25, 0x0169
     420:	aa 27       	eor	r26, r26
     422:	97 fd       	sbrc	r25, 7
     424:	a0 95       	com	r26
     426:	ba 2f       	mov	r27, r26
     428:	bc 01       	movw	r22, r24
     42a:	cd 01       	movw	r24, r26
     42c:	0e 94 f0 06 	call	0xde0	; 0xde0 <__floatsisf>
     430:	dc 01       	movw	r26, r24
     432:	cb 01       	movw	r24, r22
       }
     434:	bc 01       	movw	r22, r24
     436:	cd 01       	movw	r24, r26
     438:	a6 96       	adiw	r28, 0x26	; 38
     43a:	0f b6       	in	r0, 0x3f	; 63
     43c:	f8 94       	cli
     43e:	de bf       	out	0x3e, r29	; 62
     440:	0f be       	out	0x3f, r0	; 63
     442:	cd bf       	out	0x3d, r28	; 61
     444:	cf 91       	pop	r28
     446:	df 91       	pop	r29
     448:	08 95       	ret

0000044a <main>:

      int main(void)
      {
     44a:	df 93       	push	r29
     44c:	cf 93       	push	r28
     44e:	cd b7       	in	r28, 0x3d	; 61
     450:	de b7       	in	r29, 0x3e	; 62
        DDRD=0xFF;
     452:	e1 e3       	ldi	r30, 0x31	; 49
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	8f ef       	ldi	r24, 0xFF	; 255
     458:	80 83       	st	Z, r24
         while(1)
          {
            start(RS_UBRR);
     45a:	83 e3       	ldi	r24, 0x33	; 51
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 49 00 	call	0x92	; 0x92 <start>
             InitInterrupt();
     462:	0e 94 98 00 	call	0x130	; 0x130 <InitInterrupt>
            l_pomiar();
     466:	0e 94 b6 00 	call	0x16c	; 0x16c <l_pomiar>
             nadaj(odl0);
     46a:	80 91 68 01 	lds	r24, 0x0168
     46e:	90 91 69 01 	lds	r25, 0x0169
     472:	0e 94 68 00 	call	0xd0	; 0xd0 <nadaj>
     476:	f1 cf       	rjmp	.-30     	; 0x45a <main+0x10>

00000478 <__vector_3>:
         }
      }

     SIGNAL(TIMER2_COMP_vect)
       {
     478:	1f 92       	push	r1
     47a:	0f 92       	push	r0
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	0f 92       	push	r0
     480:	11 24       	eor	r1, r1
     482:	8f 93       	push	r24
     484:	9f 93       	push	r25
     486:	df 93       	push	r29
     488:	cf 93       	push	r28
     48a:	cd b7       	in	r28, 0x3d	; 61
     48c:	de b7       	in	r29, 0x3e	; 62
           licznik++;
     48e:	80 91 6c 01 	lds	r24, 0x016C
     492:	90 91 6d 01 	lds	r25, 0x016D
     496:	01 96       	adiw	r24, 0x01	; 1
     498:	90 93 6d 01 	sts	0x016D, r25
     49c:	80 93 6c 01 	sts	0x016C, r24
       }
     4a0:	cf 91       	pop	r28
     4a2:	df 91       	pop	r29
     4a4:	9f 91       	pop	r25
     4a6:	8f 91       	pop	r24
     4a8:	0f 90       	pop	r0
     4aa:	0f be       	out	0x3f, r0	; 63
     4ac:	0f 90       	pop	r0
     4ae:	1f 90       	pop	r1
     4b0:	18 95       	reti

000004b2 <__vector_1>:
       //F-cja przerwania zewnêtrznego INT0



       SIGNAL(INT0_vect)
       {
     4b2:	1f 92       	push	r1
     4b4:	0f 92       	push	r0
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	0f 92       	push	r0
     4ba:	11 24       	eor	r1, r1
     4bc:	2f 93       	push	r18
     4be:	3f 93       	push	r19
     4c0:	5f 93       	push	r21
     4c2:	6f 93       	push	r22
     4c4:	7f 93       	push	r23
     4c6:	8f 93       	push	r24
     4c8:	9f 93       	push	r25
     4ca:	af 93       	push	r26
     4cc:	bf 93       	push	r27
     4ce:	ef 93       	push	r30
     4d0:	ff 93       	push	r31
     4d2:	df 93       	push	r29
     4d4:	cf 93       	push	r28
     4d6:	cd b7       	in	r28, 0x3d	; 61
     4d8:	de b7       	in	r29, 0x3e	; 62
           if(flaga==0)
     4da:	80 91 6a 01 	lds	r24, 0x016A
     4de:	90 91 6b 01 	lds	r25, 0x016B
     4e2:	00 97       	sbiw	r24, 0x00	; 0
     4e4:	01 f5       	brne	.+64     	; 0x526 <__vector_1+0x74>
           {
               TIMSK = (1<<OCIE2);                //w³¹cza Timer2 w trybie dopasowania (START)
     4e6:	e9 e5       	ldi	r30, 0x59	; 89
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	80 e8       	ldi	r24, 0x80	; 128
     4ec:	80 83       	st	Z, r24
               ClrBit(MCUCR, INT0);
     4ee:	a5 e5       	ldi	r26, 0x55	; 85
     4f0:	b0 e0       	ldi	r27, 0x00	; 0
     4f2:	e5 e5       	ldi	r30, 0x55	; 85
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	80 81       	ld	r24, Z
     4f8:	8f 7b       	andi	r24, 0xBF	; 191
     4fa:	8c 93       	st	X, r24
               MCUCR = 0x00;                      //Przerwanie zostanie wywo³ane zboczem opadaj¹cym
     4fc:	e5 e5       	ldi	r30, 0x55	; 85
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	10 82       	st	Z, r1
               MCUCR = (1<<ISC01);                //na wejœciu INT0
     502:	e5 e5       	ldi	r30, 0x55	; 85
     504:	f0 e0       	ldi	r31, 0x00	; 0
     506:	82 e0       	ldi	r24, 0x02	; 2
     508:	80 83       	st	Z, r24
               SetBit(MCUCR, INT0);
     50a:	a5 e5       	ldi	r26, 0x55	; 85
     50c:	b0 e0       	ldi	r27, 0x00	; 0
     50e:	e5 e5       	ldi	r30, 0x55	; 85
     510:	f0 e0       	ldi	r31, 0x00	; 0
     512:	80 81       	ld	r24, Z
     514:	80 64       	ori	r24, 0x40	; 64
     516:	8c 93       	st	X, r24
               flaga=1;
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	90 93 6b 01 	sts	0x016B, r25
     520:	80 93 6a 01 	sts	0x016A, r24
     524:	41 c0       	rjmp	.+130    	; 0x5a8 <__vector_1+0xf6>
           }

           else if(flaga==1)
     526:	80 91 6a 01 	lds	r24, 0x016A
     52a:	90 91 6b 01 	lds	r25, 0x016B
     52e:	81 30       	cpi	r24, 0x01	; 1
     530:	91 05       	cpc	r25, r1
     532:	d1 f5       	brne	.+116    	; 0x5a8 <__vector_1+0xf6>
           {
               TIMSK &=~(1<<OCIE2);                //zatrzymuje Timer2 (STOP)
     534:	a9 e5       	ldi	r26, 0x59	; 89
     536:	b0 e0       	ldi	r27, 0x00	; 0
     538:	e9 e5       	ldi	r30, 0x59	; 89
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	80 81       	ld	r24, Z
     53e:	8f 77       	andi	r24, 0x7F	; 127
     540:	8c 93       	st	X, r24

               ClrBit(MCUCR, INT0);
     542:	a5 e5       	ldi	r26, 0x55	; 85
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	e5 e5       	ldi	r30, 0x55	; 85
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	80 81       	ld	r24, Z
     54c:	8f 7b       	andi	r24, 0xBF	; 191
     54e:	8c 93       	st	X, r24

               MCUCR = 0x00;                        //Przerwanie zostanie wywo³ane zboczem rosn¹cym
     550:	e5 e5       	ldi	r30, 0x55	; 85
     552:	f0 e0       	ldi	r31, 0x00	; 0
     554:	10 82       	st	Z, r1
               MCUCR = (1<<ISC01)|(1<<ISC00);        //na wejœciu INT0
     556:	e5 e5       	ldi	r30, 0x55	; 85
     558:	f0 e0       	ldi	r31, 0x00	; 0
     55a:	83 e0       	ldi	r24, 0x03	; 3
     55c:	80 83       	st	Z, r24

               SetBit(MCUCR, INT0);
     55e:	a5 e5       	ldi	r26, 0x55	; 85
     560:	b0 e0       	ldi	r27, 0x00	; 0
     562:	e5 e5       	ldi	r30, 0x55	; 85
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	80 81       	ld	r24, Z
     568:	80 64       	ori	r24, 0x40	; 64
     56a:	8c 93       	st	X, r24

               odl0=licznik;                        //Zapisuje wartoœæ licznika do zmiennej "odl"
     56c:	80 91 6c 01 	lds	r24, 0x016C
     570:	90 91 6d 01 	lds	r25, 0x016D
     574:	90 93 69 01 	sts	0x0169, r25
     578:	80 93 68 01 	sts	0x0168, r24
               odl0/=20;                            //oraz skaluje go
     57c:	80 91 68 01 	lds	r24, 0x0168
     580:	90 91 69 01 	lds	r25, 0x0169
     584:	24 e1       	ldi	r18, 0x14	; 20
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	b9 01       	movw	r22, r18
     58a:	0e 94 97 09 	call	0x132e	; 0x132e <__divmodhi4>
     58e:	cb 01       	movw	r24, r22
     590:	90 93 69 01 	sts	0x0169, r25
     594:	80 93 68 01 	sts	0x0168, r24

               licznik=0;                            //Zerowanie licznika
     598:	10 92 6d 01 	sts	0x016D, r1
     59c:	10 92 6c 01 	sts	0x016C, r1
               flaga=0;
     5a0:	10 92 6b 01 	sts	0x016B, r1
     5a4:	10 92 6a 01 	sts	0x016A, r1

           }
           }
     5a8:	cf 91       	pop	r28
     5aa:	df 91       	pop	r29
     5ac:	ff 91       	pop	r31
     5ae:	ef 91       	pop	r30
     5b0:	bf 91       	pop	r27
     5b2:	af 91       	pop	r26
     5b4:	9f 91       	pop	r25
     5b6:	8f 91       	pop	r24
     5b8:	7f 91       	pop	r23
     5ba:	6f 91       	pop	r22
     5bc:	5f 91       	pop	r21
     5be:	3f 91       	pop	r19
     5c0:	2f 91       	pop	r18
     5c2:	0f 90       	pop	r0
     5c4:	0f be       	out	0x3f, r0	; 63
     5c6:	0f 90       	pop	r0
     5c8:	1f 90       	pop	r1
     5ca:	18 95       	reti

000005cc <__fixunssfsi>:
     5cc:	ef 92       	push	r14
     5ce:	ff 92       	push	r15
     5d0:	0f 93       	push	r16
     5d2:	1f 93       	push	r17
     5d4:	7b 01       	movw	r14, r22
     5d6:	8c 01       	movw	r16, r24
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	5f e4       	ldi	r21, 0x4F	; 79
     5e0:	0e 94 90 06 	call	0xd20	; 0xd20 <__gesf2>
     5e4:	88 23       	and	r24, r24
     5e6:	8c f0       	brlt	.+34     	; 0x60a <__fixunssfsi+0x3e>
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	40 e0       	ldi	r20, 0x00	; 0
     5ee:	5f e4       	ldi	r21, 0x4F	; 79
     5f0:	c8 01       	movw	r24, r16
     5f2:	b7 01       	movw	r22, r14
     5f4:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__subsf3>
     5f8:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__fixsfsi>
     5fc:	9b 01       	movw	r18, r22
     5fe:	ac 01       	movw	r20, r24
     600:	20 50       	subi	r18, 0x00	; 0
     602:	30 40       	sbci	r19, 0x00	; 0
     604:	40 40       	sbci	r20, 0x00	; 0
     606:	50 48       	sbci	r21, 0x80	; 128
     608:	06 c0       	rjmp	.+12     	; 0x616 <__fixunssfsi+0x4a>
     60a:	c8 01       	movw	r24, r16
     60c:	b7 01       	movw	r22, r14
     60e:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__fixsfsi>
     612:	9b 01       	movw	r18, r22
     614:	ac 01       	movw	r20, r24
     616:	b9 01       	movw	r22, r18
     618:	ca 01       	movw	r24, r20
     61a:	1f 91       	pop	r17
     61c:	0f 91       	pop	r16
     61e:	ff 90       	pop	r15
     620:	ef 90       	pop	r14
     622:	08 95       	ret

00000624 <_fpadd_parts>:
     624:	a0 e0       	ldi	r26, 0x00	; 0
     626:	b0 e0       	ldi	r27, 0x00	; 0
     628:	e8 e1       	ldi	r30, 0x18	; 24
     62a:	f3 e0       	ldi	r31, 0x03	; 3
     62c:	0c 94 be 09 	jmp	0x137c	; 0x137c <__prologue_saves__>
     630:	dc 01       	movw	r26, r24
     632:	2b 01       	movw	r4, r22
     634:	fa 01       	movw	r30, r20
     636:	9c 91       	ld	r25, X
     638:	92 30       	cpi	r25, 0x02	; 2
     63a:	08 f4       	brcc	.+2      	; 0x63e <_fpadd_parts+0x1a>
     63c:	39 c1       	rjmp	.+626    	; 0x8b0 <_fpadd_parts+0x28c>
     63e:	eb 01       	movw	r28, r22
     640:	88 81       	ld	r24, Y
     642:	82 30       	cpi	r24, 0x02	; 2
     644:	08 f4       	brcc	.+2      	; 0x648 <_fpadd_parts+0x24>
     646:	33 c1       	rjmp	.+614    	; 0x8ae <_fpadd_parts+0x28a>
     648:	94 30       	cpi	r25, 0x04	; 4
     64a:	69 f4       	brne	.+26     	; 0x666 <_fpadd_parts+0x42>
     64c:	84 30       	cpi	r24, 0x04	; 4
     64e:	09 f0       	breq	.+2      	; 0x652 <_fpadd_parts+0x2e>
     650:	2f c1       	rjmp	.+606    	; 0x8b0 <_fpadd_parts+0x28c>
     652:	11 96       	adiw	r26, 0x01	; 1
     654:	9c 91       	ld	r25, X
     656:	11 97       	sbiw	r26, 0x01	; 1
     658:	89 81       	ldd	r24, Y+1	; 0x01
     65a:	98 17       	cp	r25, r24
     65c:	09 f4       	brne	.+2      	; 0x660 <_fpadd_parts+0x3c>
     65e:	28 c1       	rjmp	.+592    	; 0x8b0 <_fpadd_parts+0x28c>
     660:	a0 e6       	ldi	r26, 0x60	; 96
     662:	b0 e0       	ldi	r27, 0x00	; 0
     664:	25 c1       	rjmp	.+586    	; 0x8b0 <_fpadd_parts+0x28c>
     666:	84 30       	cpi	r24, 0x04	; 4
     668:	09 f4       	brne	.+2      	; 0x66c <_fpadd_parts+0x48>
     66a:	21 c1       	rjmp	.+578    	; 0x8ae <_fpadd_parts+0x28a>
     66c:	82 30       	cpi	r24, 0x02	; 2
     66e:	a9 f4       	brne	.+42     	; 0x69a <_fpadd_parts+0x76>
     670:	92 30       	cpi	r25, 0x02	; 2
     672:	09 f0       	breq	.+2      	; 0x676 <_fpadd_parts+0x52>
     674:	1d c1       	rjmp	.+570    	; 0x8b0 <_fpadd_parts+0x28c>
     676:	9a 01       	movw	r18, r20
     678:	ad 01       	movw	r20, r26
     67a:	88 e0       	ldi	r24, 0x08	; 8
     67c:	ea 01       	movw	r28, r20
     67e:	09 90       	ld	r0, Y+
     680:	ae 01       	movw	r20, r28
     682:	e9 01       	movw	r28, r18
     684:	09 92       	st	Y+, r0
     686:	9e 01       	movw	r18, r28
     688:	81 50       	subi	r24, 0x01	; 1
     68a:	c1 f7       	brne	.-16     	; 0x67c <_fpadd_parts+0x58>
     68c:	e2 01       	movw	r28, r4
     68e:	89 81       	ldd	r24, Y+1	; 0x01
     690:	11 96       	adiw	r26, 0x01	; 1
     692:	9c 91       	ld	r25, X
     694:	89 23       	and	r24, r25
     696:	81 83       	std	Z+1, r24	; 0x01
     698:	08 c1       	rjmp	.+528    	; 0x8aa <_fpadd_parts+0x286>
     69a:	92 30       	cpi	r25, 0x02	; 2
     69c:	09 f4       	brne	.+2      	; 0x6a0 <_fpadd_parts+0x7c>
     69e:	07 c1       	rjmp	.+526    	; 0x8ae <_fpadd_parts+0x28a>
     6a0:	12 96       	adiw	r26, 0x02	; 2
     6a2:	2d 90       	ld	r2, X+
     6a4:	3c 90       	ld	r3, X
     6a6:	13 97       	sbiw	r26, 0x03	; 3
     6a8:	eb 01       	movw	r28, r22
     6aa:	8a 81       	ldd	r24, Y+2	; 0x02
     6ac:	9b 81       	ldd	r25, Y+3	; 0x03
     6ae:	14 96       	adiw	r26, 0x04	; 4
     6b0:	ad 90       	ld	r10, X+
     6b2:	bd 90       	ld	r11, X+
     6b4:	cd 90       	ld	r12, X+
     6b6:	dc 90       	ld	r13, X
     6b8:	17 97       	sbiw	r26, 0x07	; 7
     6ba:	ec 80       	ldd	r14, Y+4	; 0x04
     6bc:	fd 80       	ldd	r15, Y+5	; 0x05
     6be:	0e 81       	ldd	r16, Y+6	; 0x06
     6c0:	1f 81       	ldd	r17, Y+7	; 0x07
     6c2:	91 01       	movw	r18, r2
     6c4:	28 1b       	sub	r18, r24
     6c6:	39 0b       	sbc	r19, r25
     6c8:	b9 01       	movw	r22, r18
     6ca:	37 ff       	sbrs	r19, 7
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <_fpadd_parts+0xb2>
     6ce:	66 27       	eor	r22, r22
     6d0:	77 27       	eor	r23, r23
     6d2:	62 1b       	sub	r22, r18
     6d4:	73 0b       	sbc	r23, r19
     6d6:	60 32       	cpi	r22, 0x20	; 32
     6d8:	71 05       	cpc	r23, r1
     6da:	0c f0       	brlt	.+2      	; 0x6de <_fpadd_parts+0xba>
     6dc:	61 c0       	rjmp	.+194    	; 0x7a0 <_fpadd_parts+0x17c>
     6de:	12 16       	cp	r1, r18
     6e0:	13 06       	cpc	r1, r19
     6e2:	6c f5       	brge	.+90     	; 0x73e <_fpadd_parts+0x11a>
     6e4:	37 01       	movw	r6, r14
     6e6:	48 01       	movw	r8, r16
     6e8:	06 2e       	mov	r0, r22
     6ea:	04 c0       	rjmp	.+8      	; 0x6f4 <_fpadd_parts+0xd0>
     6ec:	96 94       	lsr	r9
     6ee:	87 94       	ror	r8
     6f0:	77 94       	ror	r7
     6f2:	67 94       	ror	r6
     6f4:	0a 94       	dec	r0
     6f6:	d2 f7       	brpl	.-12     	; 0x6ec <_fpadd_parts+0xc8>
     6f8:	21 e0       	ldi	r18, 0x01	; 1
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	04 c0       	rjmp	.+8      	; 0x70a <_fpadd_parts+0xe6>
     702:	22 0f       	add	r18, r18
     704:	33 1f       	adc	r19, r19
     706:	44 1f       	adc	r20, r20
     708:	55 1f       	adc	r21, r21
     70a:	6a 95       	dec	r22
     70c:	d2 f7       	brpl	.-12     	; 0x702 <_fpadd_parts+0xde>
     70e:	21 50       	subi	r18, 0x01	; 1
     710:	30 40       	sbci	r19, 0x00	; 0
     712:	40 40       	sbci	r20, 0x00	; 0
     714:	50 40       	sbci	r21, 0x00	; 0
     716:	2e 21       	and	r18, r14
     718:	3f 21       	and	r19, r15
     71a:	40 23       	and	r20, r16
     71c:	51 23       	and	r21, r17
     71e:	21 15       	cp	r18, r1
     720:	31 05       	cpc	r19, r1
     722:	41 05       	cpc	r20, r1
     724:	51 05       	cpc	r21, r1
     726:	21 f0       	breq	.+8      	; 0x730 <_fpadd_parts+0x10c>
     728:	21 e0       	ldi	r18, 0x01	; 1
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e0       	ldi	r20, 0x00	; 0
     72e:	50 e0       	ldi	r21, 0x00	; 0
     730:	79 01       	movw	r14, r18
     732:	8a 01       	movw	r16, r20
     734:	e6 28       	or	r14, r6
     736:	f7 28       	or	r15, r7
     738:	08 29       	or	r16, r8
     73a:	19 29       	or	r17, r9
     73c:	3c c0       	rjmp	.+120    	; 0x7b6 <_fpadd_parts+0x192>
     73e:	23 2b       	or	r18, r19
     740:	d1 f1       	breq	.+116    	; 0x7b6 <_fpadd_parts+0x192>
     742:	26 0e       	add	r2, r22
     744:	37 1e       	adc	r3, r23
     746:	35 01       	movw	r6, r10
     748:	46 01       	movw	r8, r12
     74a:	06 2e       	mov	r0, r22
     74c:	04 c0       	rjmp	.+8      	; 0x756 <_fpadd_parts+0x132>
     74e:	96 94       	lsr	r9
     750:	87 94       	ror	r8
     752:	77 94       	ror	r7
     754:	67 94       	ror	r6
     756:	0a 94       	dec	r0
     758:	d2 f7       	brpl	.-12     	; 0x74e <_fpadd_parts+0x12a>
     75a:	21 e0       	ldi	r18, 0x01	; 1
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e0       	ldi	r20, 0x00	; 0
     760:	50 e0       	ldi	r21, 0x00	; 0
     762:	04 c0       	rjmp	.+8      	; 0x76c <_fpadd_parts+0x148>
     764:	22 0f       	add	r18, r18
     766:	33 1f       	adc	r19, r19
     768:	44 1f       	adc	r20, r20
     76a:	55 1f       	adc	r21, r21
     76c:	6a 95       	dec	r22
     76e:	d2 f7       	brpl	.-12     	; 0x764 <_fpadd_parts+0x140>
     770:	21 50       	subi	r18, 0x01	; 1
     772:	30 40       	sbci	r19, 0x00	; 0
     774:	40 40       	sbci	r20, 0x00	; 0
     776:	50 40       	sbci	r21, 0x00	; 0
     778:	2a 21       	and	r18, r10
     77a:	3b 21       	and	r19, r11
     77c:	4c 21       	and	r20, r12
     77e:	5d 21       	and	r21, r13
     780:	21 15       	cp	r18, r1
     782:	31 05       	cpc	r19, r1
     784:	41 05       	cpc	r20, r1
     786:	51 05       	cpc	r21, r1
     788:	21 f0       	breq	.+8      	; 0x792 <_fpadd_parts+0x16e>
     78a:	21 e0       	ldi	r18, 0x01	; 1
     78c:	30 e0       	ldi	r19, 0x00	; 0
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	50 e0       	ldi	r21, 0x00	; 0
     792:	59 01       	movw	r10, r18
     794:	6a 01       	movw	r12, r20
     796:	a6 28       	or	r10, r6
     798:	b7 28       	or	r11, r7
     79a:	c8 28       	or	r12, r8
     79c:	d9 28       	or	r13, r9
     79e:	0b c0       	rjmp	.+22     	; 0x7b6 <_fpadd_parts+0x192>
     7a0:	82 15       	cp	r24, r2
     7a2:	93 05       	cpc	r25, r3
     7a4:	2c f0       	brlt	.+10     	; 0x7b0 <_fpadd_parts+0x18c>
     7a6:	1c 01       	movw	r2, r24
     7a8:	aa 24       	eor	r10, r10
     7aa:	bb 24       	eor	r11, r11
     7ac:	65 01       	movw	r12, r10
     7ae:	03 c0       	rjmp	.+6      	; 0x7b6 <_fpadd_parts+0x192>
     7b0:	ee 24       	eor	r14, r14
     7b2:	ff 24       	eor	r15, r15
     7b4:	87 01       	movw	r16, r14
     7b6:	11 96       	adiw	r26, 0x01	; 1
     7b8:	9c 91       	ld	r25, X
     7ba:	d2 01       	movw	r26, r4
     7bc:	11 96       	adiw	r26, 0x01	; 1
     7be:	8c 91       	ld	r24, X
     7c0:	98 17       	cp	r25, r24
     7c2:	09 f4       	brne	.+2      	; 0x7c6 <_fpadd_parts+0x1a2>
     7c4:	45 c0       	rjmp	.+138    	; 0x850 <_fpadd_parts+0x22c>
     7c6:	99 23       	and	r25, r25
     7c8:	39 f0       	breq	.+14     	; 0x7d8 <_fpadd_parts+0x1b4>
     7ca:	a8 01       	movw	r20, r16
     7cc:	97 01       	movw	r18, r14
     7ce:	2a 19       	sub	r18, r10
     7d0:	3b 09       	sbc	r19, r11
     7d2:	4c 09       	sbc	r20, r12
     7d4:	5d 09       	sbc	r21, r13
     7d6:	06 c0       	rjmp	.+12     	; 0x7e4 <_fpadd_parts+0x1c0>
     7d8:	a6 01       	movw	r20, r12
     7da:	95 01       	movw	r18, r10
     7dc:	2e 19       	sub	r18, r14
     7de:	3f 09       	sbc	r19, r15
     7e0:	40 0b       	sbc	r20, r16
     7e2:	51 0b       	sbc	r21, r17
     7e4:	57 fd       	sbrc	r21, 7
     7e6:	08 c0       	rjmp	.+16     	; 0x7f8 <_fpadd_parts+0x1d4>
     7e8:	11 82       	std	Z+1, r1	; 0x01
     7ea:	33 82       	std	Z+3, r3	; 0x03
     7ec:	22 82       	std	Z+2, r2	; 0x02
     7ee:	24 83       	std	Z+4, r18	; 0x04
     7f0:	35 83       	std	Z+5, r19	; 0x05
     7f2:	46 83       	std	Z+6, r20	; 0x06
     7f4:	57 83       	std	Z+7, r21	; 0x07
     7f6:	1d c0       	rjmp	.+58     	; 0x832 <_fpadd_parts+0x20e>
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	81 83       	std	Z+1, r24	; 0x01
     7fc:	33 82       	std	Z+3, r3	; 0x03
     7fe:	22 82       	std	Z+2, r2	; 0x02
     800:	88 27       	eor	r24, r24
     802:	99 27       	eor	r25, r25
     804:	dc 01       	movw	r26, r24
     806:	82 1b       	sub	r24, r18
     808:	93 0b       	sbc	r25, r19
     80a:	a4 0b       	sbc	r26, r20
     80c:	b5 0b       	sbc	r27, r21
     80e:	84 83       	std	Z+4, r24	; 0x04
     810:	95 83       	std	Z+5, r25	; 0x05
     812:	a6 83       	std	Z+6, r26	; 0x06
     814:	b7 83       	std	Z+7, r27	; 0x07
     816:	0d c0       	rjmp	.+26     	; 0x832 <_fpadd_parts+0x20e>
     818:	22 0f       	add	r18, r18
     81a:	33 1f       	adc	r19, r19
     81c:	44 1f       	adc	r20, r20
     81e:	55 1f       	adc	r21, r21
     820:	24 83       	std	Z+4, r18	; 0x04
     822:	35 83       	std	Z+5, r19	; 0x05
     824:	46 83       	std	Z+6, r20	; 0x06
     826:	57 83       	std	Z+7, r21	; 0x07
     828:	82 81       	ldd	r24, Z+2	; 0x02
     82a:	93 81       	ldd	r25, Z+3	; 0x03
     82c:	01 97       	sbiw	r24, 0x01	; 1
     82e:	93 83       	std	Z+3, r25	; 0x03
     830:	82 83       	std	Z+2, r24	; 0x02
     832:	24 81       	ldd	r18, Z+4	; 0x04
     834:	35 81       	ldd	r19, Z+5	; 0x05
     836:	46 81       	ldd	r20, Z+6	; 0x06
     838:	57 81       	ldd	r21, Z+7	; 0x07
     83a:	da 01       	movw	r26, r20
     83c:	c9 01       	movw	r24, r18
     83e:	01 97       	sbiw	r24, 0x01	; 1
     840:	a1 09       	sbc	r26, r1
     842:	b1 09       	sbc	r27, r1
     844:	8f 5f       	subi	r24, 0xFF	; 255
     846:	9f 4f       	sbci	r25, 0xFF	; 255
     848:	af 4f       	sbci	r26, 0xFF	; 255
     84a:	bf 43       	sbci	r27, 0x3F	; 63
     84c:	28 f3       	brcs	.-54     	; 0x818 <_fpadd_parts+0x1f4>
     84e:	0b c0       	rjmp	.+22     	; 0x866 <_fpadd_parts+0x242>
     850:	91 83       	std	Z+1, r25	; 0x01
     852:	33 82       	std	Z+3, r3	; 0x03
     854:	22 82       	std	Z+2, r2	; 0x02
     856:	ea 0c       	add	r14, r10
     858:	fb 1c       	adc	r15, r11
     85a:	0c 1d       	adc	r16, r12
     85c:	1d 1d       	adc	r17, r13
     85e:	e4 82       	std	Z+4, r14	; 0x04
     860:	f5 82       	std	Z+5, r15	; 0x05
     862:	06 83       	std	Z+6, r16	; 0x06
     864:	17 83       	std	Z+7, r17	; 0x07
     866:	83 e0       	ldi	r24, 0x03	; 3
     868:	80 83       	st	Z, r24
     86a:	24 81       	ldd	r18, Z+4	; 0x04
     86c:	35 81       	ldd	r19, Z+5	; 0x05
     86e:	46 81       	ldd	r20, Z+6	; 0x06
     870:	57 81       	ldd	r21, Z+7	; 0x07
     872:	57 ff       	sbrs	r21, 7
     874:	1a c0       	rjmp	.+52     	; 0x8aa <_fpadd_parts+0x286>
     876:	c9 01       	movw	r24, r18
     878:	aa 27       	eor	r26, r26
     87a:	97 fd       	sbrc	r25, 7
     87c:	a0 95       	com	r26
     87e:	ba 2f       	mov	r27, r26
     880:	81 70       	andi	r24, 0x01	; 1
     882:	90 70       	andi	r25, 0x00	; 0
     884:	a0 70       	andi	r26, 0x00	; 0
     886:	b0 70       	andi	r27, 0x00	; 0
     888:	56 95       	lsr	r21
     88a:	47 95       	ror	r20
     88c:	37 95       	ror	r19
     88e:	27 95       	ror	r18
     890:	82 2b       	or	r24, r18
     892:	93 2b       	or	r25, r19
     894:	a4 2b       	or	r26, r20
     896:	b5 2b       	or	r27, r21
     898:	84 83       	std	Z+4, r24	; 0x04
     89a:	95 83       	std	Z+5, r25	; 0x05
     89c:	a6 83       	std	Z+6, r26	; 0x06
     89e:	b7 83       	std	Z+7, r27	; 0x07
     8a0:	82 81       	ldd	r24, Z+2	; 0x02
     8a2:	93 81       	ldd	r25, Z+3	; 0x03
     8a4:	01 96       	adiw	r24, 0x01	; 1
     8a6:	93 83       	std	Z+3, r25	; 0x03
     8a8:	82 83       	std	Z+2, r24	; 0x02
     8aa:	df 01       	movw	r26, r30
     8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <_fpadd_parts+0x28c>
     8ae:	d2 01       	movw	r26, r4
     8b0:	cd 01       	movw	r24, r26
     8b2:	cd b7       	in	r28, 0x3d	; 61
     8b4:	de b7       	in	r29, 0x3e	; 62
     8b6:	e2 e1       	ldi	r30, 0x12	; 18
     8b8:	0c 94 da 09 	jmp	0x13b4	; 0x13b4 <__epilogue_restores__>

000008bc <__subsf3>:
     8bc:	a0 e2       	ldi	r26, 0x20	; 32
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	e4 e6       	ldi	r30, 0x64	; 100
     8c2:	f4 e0       	ldi	r31, 0x04	; 4
     8c4:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__prologue_saves__+0x18>
     8c8:	69 83       	std	Y+1, r22	; 0x01
     8ca:	7a 83       	std	Y+2, r23	; 0x02
     8cc:	8b 83       	std	Y+3, r24	; 0x03
     8ce:	9c 83       	std	Y+4, r25	; 0x04
     8d0:	2d 83       	std	Y+5, r18	; 0x05
     8d2:	3e 83       	std	Y+6, r19	; 0x06
     8d4:	4f 83       	std	Y+7, r20	; 0x07
     8d6:	58 87       	std	Y+8, r21	; 0x08
     8d8:	e9 e0       	ldi	r30, 0x09	; 9
     8da:	ee 2e       	mov	r14, r30
     8dc:	f1 2c       	mov	r15, r1
     8de:	ec 0e       	add	r14, r28
     8e0:	fd 1e       	adc	r15, r29
     8e2:	b7 01       	movw	r22, r14
     8e4:	ce 01       	movw	r24, r28
     8e6:	01 96       	adiw	r24, 0x01	; 1
     8e8:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     8ec:	8e 01       	movw	r16, r28
     8ee:	0f 5e       	subi	r16, 0xEF	; 239
     8f0:	1f 4f       	sbci	r17, 0xFF	; 255
     8f2:	b8 01       	movw	r22, r16
     8f4:	ce 01       	movw	r24, r28
     8f6:	05 96       	adiw	r24, 0x05	; 5
     8f8:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     8fc:	8a 89       	ldd	r24, Y+18	; 0x12
     8fe:	91 e0       	ldi	r25, 0x01	; 1
     900:	89 27       	eor	r24, r25
     902:	8a 8b       	std	Y+18, r24	; 0x12
     904:	ae 01       	movw	r20, r28
     906:	47 5e       	subi	r20, 0xE7	; 231
     908:	5f 4f       	sbci	r21, 0xFF	; 255
     90a:	b8 01       	movw	r22, r16
     90c:	c7 01       	movw	r24, r14
     90e:	0e 94 12 03 	call	0x624	; 0x624 <_fpadd_parts>
     912:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__pack_f>
     916:	a0 96       	adiw	r28, 0x20	; 32
     918:	e6 e0       	ldi	r30, 0x06	; 6
     91a:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__epilogue_restores__+0x18>

0000091e <__addsf3>:
     91e:	a0 e2       	ldi	r26, 0x20	; 32
     920:	b0 e0       	ldi	r27, 0x00	; 0
     922:	e5 e9       	ldi	r30, 0x95	; 149
     924:	f4 e0       	ldi	r31, 0x04	; 4
     926:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__prologue_saves__+0x18>
     92a:	69 83       	std	Y+1, r22	; 0x01
     92c:	7a 83       	std	Y+2, r23	; 0x02
     92e:	8b 83       	std	Y+3, r24	; 0x03
     930:	9c 83       	std	Y+4, r25	; 0x04
     932:	2d 83       	std	Y+5, r18	; 0x05
     934:	3e 83       	std	Y+6, r19	; 0x06
     936:	4f 83       	std	Y+7, r20	; 0x07
     938:	58 87       	std	Y+8, r21	; 0x08
     93a:	f9 e0       	ldi	r31, 0x09	; 9
     93c:	ef 2e       	mov	r14, r31
     93e:	f1 2c       	mov	r15, r1
     940:	ec 0e       	add	r14, r28
     942:	fd 1e       	adc	r15, r29
     944:	b7 01       	movw	r22, r14
     946:	ce 01       	movw	r24, r28
     948:	01 96       	adiw	r24, 0x01	; 1
     94a:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     94e:	8e 01       	movw	r16, r28
     950:	0f 5e       	subi	r16, 0xEF	; 239
     952:	1f 4f       	sbci	r17, 0xFF	; 255
     954:	b8 01       	movw	r22, r16
     956:	ce 01       	movw	r24, r28
     958:	05 96       	adiw	r24, 0x05	; 5
     95a:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     95e:	ae 01       	movw	r20, r28
     960:	47 5e       	subi	r20, 0xE7	; 231
     962:	5f 4f       	sbci	r21, 0xFF	; 255
     964:	b8 01       	movw	r22, r16
     966:	c7 01       	movw	r24, r14
     968:	0e 94 12 03 	call	0x624	; 0x624 <_fpadd_parts>
     96c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__pack_f>
     970:	a0 96       	adiw	r28, 0x20	; 32
     972:	e6 e0       	ldi	r30, 0x06	; 6
     974:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__epilogue_restores__+0x18>

00000978 <__mulsf3>:
     978:	a0 e2       	ldi	r26, 0x20	; 32
     97a:	b0 e0       	ldi	r27, 0x00	; 0
     97c:	e2 ec       	ldi	r30, 0xC2	; 194
     97e:	f4 e0       	ldi	r31, 0x04	; 4
     980:	0c 94 be 09 	jmp	0x137c	; 0x137c <__prologue_saves__>
     984:	69 83       	std	Y+1, r22	; 0x01
     986:	7a 83       	std	Y+2, r23	; 0x02
     988:	8b 83       	std	Y+3, r24	; 0x03
     98a:	9c 83       	std	Y+4, r25	; 0x04
     98c:	2d 83       	std	Y+5, r18	; 0x05
     98e:	3e 83       	std	Y+6, r19	; 0x06
     990:	4f 83       	std	Y+7, r20	; 0x07
     992:	58 87       	std	Y+8, r21	; 0x08
     994:	be 01       	movw	r22, r28
     996:	67 5f       	subi	r22, 0xF7	; 247
     998:	7f 4f       	sbci	r23, 0xFF	; 255
     99a:	ce 01       	movw	r24, r28
     99c:	01 96       	adiw	r24, 0x01	; 1
     99e:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     9a2:	be 01       	movw	r22, r28
     9a4:	6f 5e       	subi	r22, 0xEF	; 239
     9a6:	7f 4f       	sbci	r23, 0xFF	; 255
     9a8:	ce 01       	movw	r24, r28
     9aa:	05 96       	adiw	r24, 0x05	; 5
     9ac:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     9b0:	99 85       	ldd	r25, Y+9	; 0x09
     9b2:	92 30       	cpi	r25, 0x02	; 2
     9b4:	88 f0       	brcs	.+34     	; 0x9d8 <__mulsf3+0x60>
     9b6:	89 89       	ldd	r24, Y+17	; 0x11
     9b8:	82 30       	cpi	r24, 0x02	; 2
     9ba:	c8 f0       	brcs	.+50     	; 0x9ee <__mulsf3+0x76>
     9bc:	94 30       	cpi	r25, 0x04	; 4
     9be:	19 f4       	brne	.+6      	; 0x9c6 <__mulsf3+0x4e>
     9c0:	82 30       	cpi	r24, 0x02	; 2
     9c2:	51 f4       	brne	.+20     	; 0x9d8 <__mulsf3+0x60>
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__mulsf3+0x56>
     9c6:	84 30       	cpi	r24, 0x04	; 4
     9c8:	29 f4       	brne	.+10     	; 0x9d4 <__mulsf3+0x5c>
     9ca:	92 30       	cpi	r25, 0x02	; 2
     9cc:	81 f4       	brne	.+32     	; 0x9ee <__mulsf3+0x76>
     9ce:	80 e6       	ldi	r24, 0x60	; 96
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	c6 c0       	rjmp	.+396    	; 0xb60 <__mulsf3+0x1e8>
     9d4:	92 30       	cpi	r25, 0x02	; 2
     9d6:	49 f4       	brne	.+18     	; 0x9ea <__mulsf3+0x72>
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	9a 85       	ldd	r25, Y+10	; 0x0a
     9dc:	8a 89       	ldd	r24, Y+18	; 0x12
     9de:	98 13       	cpse	r25, r24
     9e0:	21 e0       	ldi	r18, 0x01	; 1
     9e2:	2a 87       	std	Y+10, r18	; 0x0a
     9e4:	ce 01       	movw	r24, r28
     9e6:	09 96       	adiw	r24, 0x09	; 9
     9e8:	bb c0       	rjmp	.+374    	; 0xb60 <__mulsf3+0x1e8>
     9ea:	82 30       	cpi	r24, 0x02	; 2
     9ec:	49 f4       	brne	.+18     	; 0xa00 <__mulsf3+0x88>
     9ee:	20 e0       	ldi	r18, 0x00	; 0
     9f0:	9a 85       	ldd	r25, Y+10	; 0x0a
     9f2:	8a 89       	ldd	r24, Y+18	; 0x12
     9f4:	98 13       	cpse	r25, r24
     9f6:	21 e0       	ldi	r18, 0x01	; 1
     9f8:	2a 8b       	std	Y+18, r18	; 0x12
     9fa:	ce 01       	movw	r24, r28
     9fc:	41 96       	adiw	r24, 0x11	; 17
     9fe:	b0 c0       	rjmp	.+352    	; 0xb60 <__mulsf3+0x1e8>
     a00:	2d 84       	ldd	r2, Y+13	; 0x0d
     a02:	3e 84       	ldd	r3, Y+14	; 0x0e
     a04:	4f 84       	ldd	r4, Y+15	; 0x0f
     a06:	58 88       	ldd	r5, Y+16	; 0x10
     a08:	6d 88       	ldd	r6, Y+21	; 0x15
     a0a:	7e 88       	ldd	r7, Y+22	; 0x16
     a0c:	8f 88       	ldd	r8, Y+23	; 0x17
     a0e:	98 8c       	ldd	r9, Y+24	; 0x18
     a10:	ee 24       	eor	r14, r14
     a12:	ff 24       	eor	r15, r15
     a14:	87 01       	movw	r16, r14
     a16:	aa 24       	eor	r10, r10
     a18:	bb 24       	eor	r11, r11
     a1a:	65 01       	movw	r12, r10
     a1c:	40 e0       	ldi	r20, 0x00	; 0
     a1e:	50 e0       	ldi	r21, 0x00	; 0
     a20:	60 e0       	ldi	r22, 0x00	; 0
     a22:	70 e0       	ldi	r23, 0x00	; 0
     a24:	e0 e0       	ldi	r30, 0x00	; 0
     a26:	f0 e0       	ldi	r31, 0x00	; 0
     a28:	c1 01       	movw	r24, r2
     a2a:	81 70       	andi	r24, 0x01	; 1
     a2c:	90 70       	andi	r25, 0x00	; 0
     a2e:	89 2b       	or	r24, r25
     a30:	e9 f0       	breq	.+58     	; 0xa6c <__mulsf3+0xf4>
     a32:	e6 0c       	add	r14, r6
     a34:	f7 1c       	adc	r15, r7
     a36:	08 1d       	adc	r16, r8
     a38:	19 1d       	adc	r17, r9
     a3a:	9a 01       	movw	r18, r20
     a3c:	ab 01       	movw	r20, r22
     a3e:	2a 0d       	add	r18, r10
     a40:	3b 1d       	adc	r19, r11
     a42:	4c 1d       	adc	r20, r12
     a44:	5d 1d       	adc	r21, r13
     a46:	80 e0       	ldi	r24, 0x00	; 0
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	a0 e0       	ldi	r26, 0x00	; 0
     a4c:	b0 e0       	ldi	r27, 0x00	; 0
     a4e:	e6 14       	cp	r14, r6
     a50:	f7 04       	cpc	r15, r7
     a52:	08 05       	cpc	r16, r8
     a54:	19 05       	cpc	r17, r9
     a56:	20 f4       	brcc	.+8      	; 0xa60 <__mulsf3+0xe8>
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	a0 e0       	ldi	r26, 0x00	; 0
     a5e:	b0 e0       	ldi	r27, 0x00	; 0
     a60:	ba 01       	movw	r22, r20
     a62:	a9 01       	movw	r20, r18
     a64:	48 0f       	add	r20, r24
     a66:	59 1f       	adc	r21, r25
     a68:	6a 1f       	adc	r22, r26
     a6a:	7b 1f       	adc	r23, r27
     a6c:	aa 0c       	add	r10, r10
     a6e:	bb 1c       	adc	r11, r11
     a70:	cc 1c       	adc	r12, r12
     a72:	dd 1c       	adc	r13, r13
     a74:	97 fe       	sbrs	r9, 7
     a76:	08 c0       	rjmp	.+16     	; 0xa88 <__mulsf3+0x110>
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	a0 e0       	ldi	r26, 0x00	; 0
     a7e:	b0 e0       	ldi	r27, 0x00	; 0
     a80:	a8 2a       	or	r10, r24
     a82:	b9 2a       	or	r11, r25
     a84:	ca 2a       	or	r12, r26
     a86:	db 2a       	or	r13, r27
     a88:	31 96       	adiw	r30, 0x01	; 1
     a8a:	e0 32       	cpi	r30, 0x20	; 32
     a8c:	f1 05       	cpc	r31, r1
     a8e:	49 f0       	breq	.+18     	; 0xaa2 <__mulsf3+0x12a>
     a90:	66 0c       	add	r6, r6
     a92:	77 1c       	adc	r7, r7
     a94:	88 1c       	adc	r8, r8
     a96:	99 1c       	adc	r9, r9
     a98:	56 94       	lsr	r5
     a9a:	47 94       	ror	r4
     a9c:	37 94       	ror	r3
     a9e:	27 94       	ror	r2
     aa0:	c3 cf       	rjmp	.-122    	; 0xa28 <__mulsf3+0xb0>
     aa2:	fa 85       	ldd	r31, Y+10	; 0x0a
     aa4:	ea 89       	ldd	r30, Y+18	; 0x12
     aa6:	2b 89       	ldd	r18, Y+19	; 0x13
     aa8:	3c 89       	ldd	r19, Y+20	; 0x14
     aaa:	8b 85       	ldd	r24, Y+11	; 0x0b
     aac:	9c 85       	ldd	r25, Y+12	; 0x0c
     aae:	28 0f       	add	r18, r24
     ab0:	39 1f       	adc	r19, r25
     ab2:	2e 5f       	subi	r18, 0xFE	; 254
     ab4:	3f 4f       	sbci	r19, 0xFF	; 255
     ab6:	17 c0       	rjmp	.+46     	; 0xae6 <__mulsf3+0x16e>
     ab8:	ca 01       	movw	r24, r20
     aba:	81 70       	andi	r24, 0x01	; 1
     abc:	90 70       	andi	r25, 0x00	; 0
     abe:	89 2b       	or	r24, r25
     ac0:	61 f0       	breq	.+24     	; 0xada <__mulsf3+0x162>
     ac2:	16 95       	lsr	r17
     ac4:	07 95       	ror	r16
     ac6:	f7 94       	ror	r15
     ac8:	e7 94       	ror	r14
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	a0 e0       	ldi	r26, 0x00	; 0
     ad0:	b0 e8       	ldi	r27, 0x80	; 128
     ad2:	e8 2a       	or	r14, r24
     ad4:	f9 2a       	or	r15, r25
     ad6:	0a 2b       	or	r16, r26
     ad8:	1b 2b       	or	r17, r27
     ada:	76 95       	lsr	r23
     adc:	67 95       	ror	r22
     ade:	57 95       	ror	r21
     ae0:	47 95       	ror	r20
     ae2:	2f 5f       	subi	r18, 0xFF	; 255
     ae4:	3f 4f       	sbci	r19, 0xFF	; 255
     ae6:	77 fd       	sbrc	r23, 7
     ae8:	e7 cf       	rjmp	.-50     	; 0xab8 <__mulsf3+0x140>
     aea:	0c c0       	rjmp	.+24     	; 0xb04 <__mulsf3+0x18c>
     aec:	44 0f       	add	r20, r20
     aee:	55 1f       	adc	r21, r21
     af0:	66 1f       	adc	r22, r22
     af2:	77 1f       	adc	r23, r23
     af4:	17 fd       	sbrc	r17, 7
     af6:	41 60       	ori	r20, 0x01	; 1
     af8:	ee 0c       	add	r14, r14
     afa:	ff 1c       	adc	r15, r15
     afc:	00 1f       	adc	r16, r16
     afe:	11 1f       	adc	r17, r17
     b00:	21 50       	subi	r18, 0x01	; 1
     b02:	30 40       	sbci	r19, 0x00	; 0
     b04:	40 30       	cpi	r20, 0x00	; 0
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	59 07       	cpc	r21, r25
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	69 07       	cpc	r22, r25
     b0e:	90 e4       	ldi	r25, 0x40	; 64
     b10:	79 07       	cpc	r23, r25
     b12:	60 f3       	brcs	.-40     	; 0xaec <__mulsf3+0x174>
     b14:	2b 8f       	std	Y+27, r18	; 0x1b
     b16:	3c 8f       	std	Y+28, r19	; 0x1c
     b18:	db 01       	movw	r26, r22
     b1a:	ca 01       	movw	r24, r20
     b1c:	8f 77       	andi	r24, 0x7F	; 127
     b1e:	90 70       	andi	r25, 0x00	; 0
     b20:	a0 70       	andi	r26, 0x00	; 0
     b22:	b0 70       	andi	r27, 0x00	; 0
     b24:	80 34       	cpi	r24, 0x40	; 64
     b26:	91 05       	cpc	r25, r1
     b28:	a1 05       	cpc	r26, r1
     b2a:	b1 05       	cpc	r27, r1
     b2c:	61 f4       	brne	.+24     	; 0xb46 <__mulsf3+0x1ce>
     b2e:	47 fd       	sbrc	r20, 7
     b30:	0a c0       	rjmp	.+20     	; 0xb46 <__mulsf3+0x1ce>
     b32:	e1 14       	cp	r14, r1
     b34:	f1 04       	cpc	r15, r1
     b36:	01 05       	cpc	r16, r1
     b38:	11 05       	cpc	r17, r1
     b3a:	29 f0       	breq	.+10     	; 0xb46 <__mulsf3+0x1ce>
     b3c:	40 5c       	subi	r20, 0xC0	; 192
     b3e:	5f 4f       	sbci	r21, 0xFF	; 255
     b40:	6f 4f       	sbci	r22, 0xFF	; 255
     b42:	7f 4f       	sbci	r23, 0xFF	; 255
     b44:	40 78       	andi	r20, 0x80	; 128
     b46:	1a 8e       	std	Y+26, r1	; 0x1a
     b48:	fe 17       	cp	r31, r30
     b4a:	11 f0       	breq	.+4      	; 0xb50 <__mulsf3+0x1d8>
     b4c:	81 e0       	ldi	r24, 0x01	; 1
     b4e:	8a 8f       	std	Y+26, r24	; 0x1a
     b50:	4d 8f       	std	Y+29, r20	; 0x1d
     b52:	5e 8f       	std	Y+30, r21	; 0x1e
     b54:	6f 8f       	std	Y+31, r22	; 0x1f
     b56:	78 a3       	std	Y+32, r23	; 0x20
     b58:	83 e0       	ldi	r24, 0x03	; 3
     b5a:	89 8f       	std	Y+25, r24	; 0x19
     b5c:	ce 01       	movw	r24, r28
     b5e:	49 96       	adiw	r24, 0x19	; 25
     b60:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__pack_f>
     b64:	a0 96       	adiw	r28, 0x20	; 32
     b66:	e2 e1       	ldi	r30, 0x12	; 18
     b68:	0c 94 da 09 	jmp	0x13b4	; 0x13b4 <__epilogue_restores__>

00000b6c <__divsf3>:
     b6c:	a8 e1       	ldi	r26, 0x18	; 24
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	ec eb       	ldi	r30, 0xBC	; 188
     b72:	f5 e0       	ldi	r31, 0x05	; 5
     b74:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__prologue_saves__+0x10>
     b78:	69 83       	std	Y+1, r22	; 0x01
     b7a:	7a 83       	std	Y+2, r23	; 0x02
     b7c:	8b 83       	std	Y+3, r24	; 0x03
     b7e:	9c 83       	std	Y+4, r25	; 0x04
     b80:	2d 83       	std	Y+5, r18	; 0x05
     b82:	3e 83       	std	Y+6, r19	; 0x06
     b84:	4f 83       	std	Y+7, r20	; 0x07
     b86:	58 87       	std	Y+8, r21	; 0x08
     b88:	b9 e0       	ldi	r27, 0x09	; 9
     b8a:	eb 2e       	mov	r14, r27
     b8c:	f1 2c       	mov	r15, r1
     b8e:	ec 0e       	add	r14, r28
     b90:	fd 1e       	adc	r15, r29
     b92:	b7 01       	movw	r22, r14
     b94:	ce 01       	movw	r24, r28
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     b9c:	8e 01       	movw	r16, r28
     b9e:	0f 5e       	subi	r16, 0xEF	; 239
     ba0:	1f 4f       	sbci	r17, 0xFF	; 255
     ba2:	b8 01       	movw	r22, r16
     ba4:	ce 01       	movw	r24, r28
     ba6:	05 96       	adiw	r24, 0x05	; 5
     ba8:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     bac:	29 85       	ldd	r18, Y+9	; 0x09
     bae:	22 30       	cpi	r18, 0x02	; 2
     bb0:	08 f4       	brcc	.+2      	; 0xbb4 <__divsf3+0x48>
     bb2:	7c c0       	rjmp	.+248    	; 0xcac <__divsf3+0x140>
     bb4:	39 89       	ldd	r19, Y+17	; 0x11
     bb6:	32 30       	cpi	r19, 0x02	; 2
     bb8:	10 f4       	brcc	.+4      	; 0xbbe <__divsf3+0x52>
     bba:	b8 01       	movw	r22, r16
     bbc:	7a c0       	rjmp	.+244    	; 0xcb2 <__divsf3+0x146>
     bbe:	8a 85       	ldd	r24, Y+10	; 0x0a
     bc0:	9a 89       	ldd	r25, Y+18	; 0x12
     bc2:	89 27       	eor	r24, r25
     bc4:	8a 87       	std	Y+10, r24	; 0x0a
     bc6:	24 30       	cpi	r18, 0x04	; 4
     bc8:	11 f0       	breq	.+4      	; 0xbce <__divsf3+0x62>
     bca:	22 30       	cpi	r18, 0x02	; 2
     bcc:	31 f4       	brne	.+12     	; 0xbda <__divsf3+0x6e>
     bce:	23 17       	cp	r18, r19
     bd0:	09 f0       	breq	.+2      	; 0xbd4 <__divsf3+0x68>
     bd2:	6c c0       	rjmp	.+216    	; 0xcac <__divsf3+0x140>
     bd4:	60 e6       	ldi	r22, 0x60	; 96
     bd6:	70 e0       	ldi	r23, 0x00	; 0
     bd8:	6c c0       	rjmp	.+216    	; 0xcb2 <__divsf3+0x146>
     bda:	34 30       	cpi	r19, 0x04	; 4
     bdc:	39 f4       	brne	.+14     	; 0xbec <__divsf3+0x80>
     bde:	1d 86       	std	Y+13, r1	; 0x0d
     be0:	1e 86       	std	Y+14, r1	; 0x0e
     be2:	1f 86       	std	Y+15, r1	; 0x0f
     be4:	18 8a       	std	Y+16, r1	; 0x10
     be6:	1c 86       	std	Y+12, r1	; 0x0c
     be8:	1b 86       	std	Y+11, r1	; 0x0b
     bea:	04 c0       	rjmp	.+8      	; 0xbf4 <__divsf3+0x88>
     bec:	32 30       	cpi	r19, 0x02	; 2
     bee:	21 f4       	brne	.+8      	; 0xbf8 <__divsf3+0x8c>
     bf0:	84 e0       	ldi	r24, 0x04	; 4
     bf2:	89 87       	std	Y+9, r24	; 0x09
     bf4:	b7 01       	movw	r22, r14
     bf6:	5d c0       	rjmp	.+186    	; 0xcb2 <__divsf3+0x146>
     bf8:	2b 85       	ldd	r18, Y+11	; 0x0b
     bfa:	3c 85       	ldd	r19, Y+12	; 0x0c
     bfc:	8b 89       	ldd	r24, Y+19	; 0x13
     bfe:	9c 89       	ldd	r25, Y+20	; 0x14
     c00:	28 1b       	sub	r18, r24
     c02:	39 0b       	sbc	r19, r25
     c04:	3c 87       	std	Y+12, r19	; 0x0c
     c06:	2b 87       	std	Y+11, r18	; 0x0b
     c08:	ed 84       	ldd	r14, Y+13	; 0x0d
     c0a:	fe 84       	ldd	r15, Y+14	; 0x0e
     c0c:	0f 85       	ldd	r16, Y+15	; 0x0f
     c0e:	18 89       	ldd	r17, Y+16	; 0x10
     c10:	ad 88       	ldd	r10, Y+21	; 0x15
     c12:	be 88       	ldd	r11, Y+22	; 0x16
     c14:	cf 88       	ldd	r12, Y+23	; 0x17
     c16:	d8 8c       	ldd	r13, Y+24	; 0x18
     c18:	ea 14       	cp	r14, r10
     c1a:	fb 04       	cpc	r15, r11
     c1c:	0c 05       	cpc	r16, r12
     c1e:	1d 05       	cpc	r17, r13
     c20:	40 f4       	brcc	.+16     	; 0xc32 <__divsf3+0xc6>
     c22:	ee 0c       	add	r14, r14
     c24:	ff 1c       	adc	r15, r15
     c26:	00 1f       	adc	r16, r16
     c28:	11 1f       	adc	r17, r17
     c2a:	21 50       	subi	r18, 0x01	; 1
     c2c:	30 40       	sbci	r19, 0x00	; 0
     c2e:	3c 87       	std	Y+12, r19	; 0x0c
     c30:	2b 87       	std	Y+11, r18	; 0x0b
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	40 e0       	ldi	r20, 0x00	; 0
     c38:	50 e0       	ldi	r21, 0x00	; 0
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	a0 e0       	ldi	r26, 0x00	; 0
     c40:	b0 e4       	ldi	r27, 0x40	; 64
     c42:	6f e1       	ldi	r22, 0x1F	; 31
     c44:	70 e0       	ldi	r23, 0x00	; 0
     c46:	ea 14       	cp	r14, r10
     c48:	fb 04       	cpc	r15, r11
     c4a:	0c 05       	cpc	r16, r12
     c4c:	1d 05       	cpc	r17, r13
     c4e:	40 f0       	brcs	.+16     	; 0xc60 <__divsf3+0xf4>
     c50:	28 2b       	or	r18, r24
     c52:	39 2b       	or	r19, r25
     c54:	4a 2b       	or	r20, r26
     c56:	5b 2b       	or	r21, r27
     c58:	ea 18       	sub	r14, r10
     c5a:	fb 08       	sbc	r15, r11
     c5c:	0c 09       	sbc	r16, r12
     c5e:	1d 09       	sbc	r17, r13
     c60:	b6 95       	lsr	r27
     c62:	a7 95       	ror	r26
     c64:	97 95       	ror	r25
     c66:	87 95       	ror	r24
     c68:	ee 0c       	add	r14, r14
     c6a:	ff 1c       	adc	r15, r15
     c6c:	00 1f       	adc	r16, r16
     c6e:	11 1f       	adc	r17, r17
     c70:	61 50       	subi	r22, 0x01	; 1
     c72:	70 40       	sbci	r23, 0x00	; 0
     c74:	41 f7       	brne	.-48     	; 0xc46 <__divsf3+0xda>
     c76:	da 01       	movw	r26, r20
     c78:	c9 01       	movw	r24, r18
     c7a:	8f 77       	andi	r24, 0x7F	; 127
     c7c:	90 70       	andi	r25, 0x00	; 0
     c7e:	a0 70       	andi	r26, 0x00	; 0
     c80:	b0 70       	andi	r27, 0x00	; 0
     c82:	80 34       	cpi	r24, 0x40	; 64
     c84:	91 05       	cpc	r25, r1
     c86:	a1 05       	cpc	r26, r1
     c88:	b1 05       	cpc	r27, r1
     c8a:	61 f4       	brne	.+24     	; 0xca4 <__divsf3+0x138>
     c8c:	27 fd       	sbrc	r18, 7
     c8e:	0a c0       	rjmp	.+20     	; 0xca4 <__divsf3+0x138>
     c90:	e1 14       	cp	r14, r1
     c92:	f1 04       	cpc	r15, r1
     c94:	01 05       	cpc	r16, r1
     c96:	11 05       	cpc	r17, r1
     c98:	29 f0       	breq	.+10     	; 0xca4 <__divsf3+0x138>
     c9a:	20 5c       	subi	r18, 0xC0	; 192
     c9c:	3f 4f       	sbci	r19, 0xFF	; 255
     c9e:	4f 4f       	sbci	r20, 0xFF	; 255
     ca0:	5f 4f       	sbci	r21, 0xFF	; 255
     ca2:	20 78       	andi	r18, 0x80	; 128
     ca4:	2d 87       	std	Y+13, r18	; 0x0d
     ca6:	3e 87       	std	Y+14, r19	; 0x0e
     ca8:	4f 87       	std	Y+15, r20	; 0x0f
     caa:	58 8b       	std	Y+16, r21	; 0x10
     cac:	be 01       	movw	r22, r28
     cae:	67 5f       	subi	r22, 0xF7	; 247
     cb0:	7f 4f       	sbci	r23, 0xFF	; 255
     cb2:	cb 01       	movw	r24, r22
     cb4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__pack_f>
     cb8:	68 96       	adiw	r28, 0x18	; 24
     cba:	ea e0       	ldi	r30, 0x0A	; 10
     cbc:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__epilogue_restores__+0x10>

00000cc0 <__gtsf2>:
     cc0:	a8 e1       	ldi	r26, 0x18	; 24
     cc2:	b0 e0       	ldi	r27, 0x00	; 0
     cc4:	e6 e6       	ldi	r30, 0x66	; 102
     cc6:	f6 e0       	ldi	r31, 0x06	; 6
     cc8:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__prologue_saves__+0x18>
     ccc:	69 83       	std	Y+1, r22	; 0x01
     cce:	7a 83       	std	Y+2, r23	; 0x02
     cd0:	8b 83       	std	Y+3, r24	; 0x03
     cd2:	9c 83       	std	Y+4, r25	; 0x04
     cd4:	2d 83       	std	Y+5, r18	; 0x05
     cd6:	3e 83       	std	Y+6, r19	; 0x06
     cd8:	4f 83       	std	Y+7, r20	; 0x07
     cda:	58 87       	std	Y+8, r21	; 0x08
     cdc:	89 e0       	ldi	r24, 0x09	; 9
     cde:	e8 2e       	mov	r14, r24
     ce0:	f1 2c       	mov	r15, r1
     ce2:	ec 0e       	add	r14, r28
     ce4:	fd 1e       	adc	r15, r29
     ce6:	b7 01       	movw	r22, r14
     ce8:	ce 01       	movw	r24, r28
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     cf0:	8e 01       	movw	r16, r28
     cf2:	0f 5e       	subi	r16, 0xEF	; 239
     cf4:	1f 4f       	sbci	r17, 0xFF	; 255
     cf6:	b8 01       	movw	r22, r16
     cf8:	ce 01       	movw	r24, r28
     cfa:	05 96       	adiw	r24, 0x05	; 5
     cfc:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     d00:	89 85       	ldd	r24, Y+9	; 0x09
     d02:	82 30       	cpi	r24, 0x02	; 2
     d04:	40 f0       	brcs	.+16     	; 0xd16 <__gtsf2+0x56>
     d06:	89 89       	ldd	r24, Y+17	; 0x11
     d08:	82 30       	cpi	r24, 0x02	; 2
     d0a:	28 f0       	brcs	.+10     	; 0xd16 <__gtsf2+0x56>
     d0c:	b8 01       	movw	r22, r16
     d0e:	c7 01       	movw	r24, r14
     d10:	0e 94 3e 09 	call	0x127c	; 0x127c <__fpcmp_parts_f>
     d14:	01 c0       	rjmp	.+2      	; 0xd18 <__gtsf2+0x58>
     d16:	8f ef       	ldi	r24, 0xFF	; 255
     d18:	68 96       	adiw	r28, 0x18	; 24
     d1a:	e6 e0       	ldi	r30, 0x06	; 6
     d1c:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__epilogue_restores__+0x18>

00000d20 <__gesf2>:
     d20:	a8 e1       	ldi	r26, 0x18	; 24
     d22:	b0 e0       	ldi	r27, 0x00	; 0
     d24:	e6 e9       	ldi	r30, 0x96	; 150
     d26:	f6 e0       	ldi	r31, 0x06	; 6
     d28:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__prologue_saves__+0x18>
     d2c:	69 83       	std	Y+1, r22	; 0x01
     d2e:	7a 83       	std	Y+2, r23	; 0x02
     d30:	8b 83       	std	Y+3, r24	; 0x03
     d32:	9c 83       	std	Y+4, r25	; 0x04
     d34:	2d 83       	std	Y+5, r18	; 0x05
     d36:	3e 83       	std	Y+6, r19	; 0x06
     d38:	4f 83       	std	Y+7, r20	; 0x07
     d3a:	58 87       	std	Y+8, r21	; 0x08
     d3c:	89 e0       	ldi	r24, 0x09	; 9
     d3e:	e8 2e       	mov	r14, r24
     d40:	f1 2c       	mov	r15, r1
     d42:	ec 0e       	add	r14, r28
     d44:	fd 1e       	adc	r15, r29
     d46:	b7 01       	movw	r22, r14
     d48:	ce 01       	movw	r24, r28
     d4a:	01 96       	adiw	r24, 0x01	; 1
     d4c:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     d50:	8e 01       	movw	r16, r28
     d52:	0f 5e       	subi	r16, 0xEF	; 239
     d54:	1f 4f       	sbci	r17, 0xFF	; 255
     d56:	b8 01       	movw	r22, r16
     d58:	ce 01       	movw	r24, r28
     d5a:	05 96       	adiw	r24, 0x05	; 5
     d5c:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     d60:	89 85       	ldd	r24, Y+9	; 0x09
     d62:	82 30       	cpi	r24, 0x02	; 2
     d64:	40 f0       	brcs	.+16     	; 0xd76 <__gesf2+0x56>
     d66:	89 89       	ldd	r24, Y+17	; 0x11
     d68:	82 30       	cpi	r24, 0x02	; 2
     d6a:	28 f0       	brcs	.+10     	; 0xd76 <__gesf2+0x56>
     d6c:	b8 01       	movw	r22, r16
     d6e:	c7 01       	movw	r24, r14
     d70:	0e 94 3e 09 	call	0x127c	; 0x127c <__fpcmp_parts_f>
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <__gesf2+0x58>
     d76:	8f ef       	ldi	r24, 0xFF	; 255
     d78:	68 96       	adiw	r28, 0x18	; 24
     d7a:	e6 e0       	ldi	r30, 0x06	; 6
     d7c:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__epilogue_restores__+0x18>

00000d80 <__ltsf2>:
     d80:	a8 e1       	ldi	r26, 0x18	; 24
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e6 ec       	ldi	r30, 0xC6	; 198
     d86:	f6 e0       	ldi	r31, 0x06	; 6
     d88:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__prologue_saves__+0x18>
     d8c:	69 83       	std	Y+1, r22	; 0x01
     d8e:	7a 83       	std	Y+2, r23	; 0x02
     d90:	8b 83       	std	Y+3, r24	; 0x03
     d92:	9c 83       	std	Y+4, r25	; 0x04
     d94:	2d 83       	std	Y+5, r18	; 0x05
     d96:	3e 83       	std	Y+6, r19	; 0x06
     d98:	4f 83       	std	Y+7, r20	; 0x07
     d9a:	58 87       	std	Y+8, r21	; 0x08
     d9c:	89 e0       	ldi	r24, 0x09	; 9
     d9e:	e8 2e       	mov	r14, r24
     da0:	f1 2c       	mov	r15, r1
     da2:	ec 0e       	add	r14, r28
     da4:	fd 1e       	adc	r15, r29
     da6:	b7 01       	movw	r22, r14
     da8:	ce 01       	movw	r24, r28
     daa:	01 96       	adiw	r24, 0x01	; 1
     dac:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     db0:	8e 01       	movw	r16, r28
     db2:	0f 5e       	subi	r16, 0xEF	; 239
     db4:	1f 4f       	sbci	r17, 0xFF	; 255
     db6:	b8 01       	movw	r22, r16
     db8:	ce 01       	movw	r24, r28
     dba:	05 96       	adiw	r24, 0x05	; 5
     dbc:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     dc0:	89 85       	ldd	r24, Y+9	; 0x09
     dc2:	82 30       	cpi	r24, 0x02	; 2
     dc4:	40 f0       	brcs	.+16     	; 0xdd6 <__ltsf2+0x56>
     dc6:	89 89       	ldd	r24, Y+17	; 0x11
     dc8:	82 30       	cpi	r24, 0x02	; 2
     dca:	28 f0       	brcs	.+10     	; 0xdd6 <__ltsf2+0x56>
     dcc:	b8 01       	movw	r22, r16
     dce:	c7 01       	movw	r24, r14
     dd0:	0e 94 3e 09 	call	0x127c	; 0x127c <__fpcmp_parts_f>
     dd4:	01 c0       	rjmp	.+2      	; 0xdd8 <__ltsf2+0x58>
     dd6:	81 e0       	ldi	r24, 0x01	; 1
     dd8:	68 96       	adiw	r28, 0x18	; 24
     dda:	e6 e0       	ldi	r30, 0x06	; 6
     ddc:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__epilogue_restores__+0x18>

00000de0 <__floatsisf>:
     de0:	a8 e0       	ldi	r26, 0x08	; 8
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e6 ef       	ldi	r30, 0xF6	; 246
     de6:	f6 e0       	ldi	r31, 0x06	; 6
     de8:	0c 94 c7 09 	jmp	0x138e	; 0x138e <__prologue_saves__+0x12>
     dec:	9b 01       	movw	r18, r22
     dee:	ac 01       	movw	r20, r24
     df0:	83 e0       	ldi	r24, 0x03	; 3
     df2:	89 83       	std	Y+1, r24	; 0x01
     df4:	da 01       	movw	r26, r20
     df6:	c9 01       	movw	r24, r18
     df8:	88 27       	eor	r24, r24
     dfa:	b7 fd       	sbrc	r27, 7
     dfc:	83 95       	inc	r24
     dfe:	99 27       	eor	r25, r25
     e00:	aa 27       	eor	r26, r26
     e02:	bb 27       	eor	r27, r27
     e04:	b8 2e       	mov	r11, r24
     e06:	21 15       	cp	r18, r1
     e08:	31 05       	cpc	r19, r1
     e0a:	41 05       	cpc	r20, r1
     e0c:	51 05       	cpc	r21, r1
     e0e:	19 f4       	brne	.+6      	; 0xe16 <__floatsisf+0x36>
     e10:	82 e0       	ldi	r24, 0x02	; 2
     e12:	89 83       	std	Y+1, r24	; 0x01
     e14:	3a c0       	rjmp	.+116    	; 0xe8a <__floatsisf+0xaa>
     e16:	88 23       	and	r24, r24
     e18:	a9 f0       	breq	.+42     	; 0xe44 <__floatsisf+0x64>
     e1a:	20 30       	cpi	r18, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	38 07       	cpc	r19, r24
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	48 07       	cpc	r20, r24
     e24:	80 e8       	ldi	r24, 0x80	; 128
     e26:	58 07       	cpc	r21, r24
     e28:	29 f4       	brne	.+10     	; 0xe34 <__floatsisf+0x54>
     e2a:	60 e0       	ldi	r22, 0x00	; 0
     e2c:	70 e0       	ldi	r23, 0x00	; 0
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	9f ec       	ldi	r25, 0xCF	; 207
     e32:	30 c0       	rjmp	.+96     	; 0xe94 <__floatsisf+0xb4>
     e34:	ee 24       	eor	r14, r14
     e36:	ff 24       	eor	r15, r15
     e38:	87 01       	movw	r16, r14
     e3a:	e2 1a       	sub	r14, r18
     e3c:	f3 0a       	sbc	r15, r19
     e3e:	04 0b       	sbc	r16, r20
     e40:	15 0b       	sbc	r17, r21
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <__floatsisf+0x68>
     e44:	79 01       	movw	r14, r18
     e46:	8a 01       	movw	r16, r20
     e48:	8e e1       	ldi	r24, 0x1E	; 30
     e4a:	c8 2e       	mov	r12, r24
     e4c:	d1 2c       	mov	r13, r1
     e4e:	dc 82       	std	Y+4, r13	; 0x04
     e50:	cb 82       	std	Y+3, r12	; 0x03
     e52:	ed 82       	std	Y+5, r14	; 0x05
     e54:	fe 82       	std	Y+6, r15	; 0x06
     e56:	0f 83       	std	Y+7, r16	; 0x07
     e58:	18 87       	std	Y+8, r17	; 0x08
     e5a:	c8 01       	movw	r24, r16
     e5c:	b7 01       	movw	r22, r14
     e5e:	0e 94 a2 07 	call	0xf44	; 0xf44 <__clzsi2>
     e62:	01 97       	sbiw	r24, 0x01	; 1
     e64:	18 16       	cp	r1, r24
     e66:	19 06       	cpc	r1, r25
     e68:	84 f4       	brge	.+32     	; 0xe8a <__floatsisf+0xaa>
     e6a:	08 2e       	mov	r0, r24
     e6c:	04 c0       	rjmp	.+8      	; 0xe76 <__floatsisf+0x96>
     e6e:	ee 0c       	add	r14, r14
     e70:	ff 1c       	adc	r15, r15
     e72:	00 1f       	adc	r16, r16
     e74:	11 1f       	adc	r17, r17
     e76:	0a 94       	dec	r0
     e78:	d2 f7       	brpl	.-12     	; 0xe6e <__floatsisf+0x8e>
     e7a:	ed 82       	std	Y+5, r14	; 0x05
     e7c:	fe 82       	std	Y+6, r15	; 0x06
     e7e:	0f 83       	std	Y+7, r16	; 0x07
     e80:	18 87       	std	Y+8, r17	; 0x08
     e82:	c8 1a       	sub	r12, r24
     e84:	d9 0a       	sbc	r13, r25
     e86:	dc 82       	std	Y+4, r13	; 0x04
     e88:	cb 82       	std	Y+3, r12	; 0x03
     e8a:	ba 82       	std	Y+2, r11	; 0x02
     e8c:	ce 01       	movw	r24, r28
     e8e:	01 96       	adiw	r24, 0x01	; 1
     e90:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__pack_f>
     e94:	28 96       	adiw	r28, 0x08	; 8
     e96:	e9 e0       	ldi	r30, 0x09	; 9
     e98:	0c 94 e3 09 	jmp	0x13c6	; 0x13c6 <__epilogue_restores__+0x12>

00000e9c <__fixsfsi>:
     e9c:	ac e0       	ldi	r26, 0x0C	; 12
     e9e:	b0 e0       	ldi	r27, 0x00	; 0
     ea0:	e4 e5       	ldi	r30, 0x54	; 84
     ea2:	f7 e0       	ldi	r31, 0x07	; 7
     ea4:	0c 94 ce 09 	jmp	0x139c	; 0x139c <__prologue_saves__+0x20>
     ea8:	69 83       	std	Y+1, r22	; 0x01
     eaa:	7a 83       	std	Y+2, r23	; 0x02
     eac:	8b 83       	std	Y+3, r24	; 0x03
     eae:	9c 83       	std	Y+4, r25	; 0x04
     eb0:	be 01       	movw	r22, r28
     eb2:	6b 5f       	subi	r22, 0xFB	; 251
     eb4:	7f 4f       	sbci	r23, 0xFF	; 255
     eb6:	ce 01       	movw	r24, r28
     eb8:	01 96       	adiw	r24, 0x01	; 1
     eba:	0e 94 c6 08 	call	0x118c	; 0x118c <__unpack_f>
     ebe:	8d 81       	ldd	r24, Y+5	; 0x05
     ec0:	82 30       	cpi	r24, 0x02	; 2
     ec2:	61 f1       	breq	.+88     	; 0xf1c <__fixsfsi+0x80>
     ec4:	82 30       	cpi	r24, 0x02	; 2
     ec6:	50 f1       	brcs	.+84     	; 0xf1c <__fixsfsi+0x80>
     ec8:	84 30       	cpi	r24, 0x04	; 4
     eca:	21 f4       	brne	.+8      	; 0xed4 <__fixsfsi+0x38>
     ecc:	8e 81       	ldd	r24, Y+6	; 0x06
     ece:	88 23       	and	r24, r24
     ed0:	51 f1       	breq	.+84     	; 0xf26 <__fixsfsi+0x8a>
     ed2:	2e c0       	rjmp	.+92     	; 0xf30 <__fixsfsi+0x94>
     ed4:	2f 81       	ldd	r18, Y+7	; 0x07
     ed6:	38 85       	ldd	r19, Y+8	; 0x08
     ed8:	37 fd       	sbrc	r19, 7
     eda:	20 c0       	rjmp	.+64     	; 0xf1c <__fixsfsi+0x80>
     edc:	6e 81       	ldd	r22, Y+6	; 0x06
     ede:	2f 31       	cpi	r18, 0x1F	; 31
     ee0:	31 05       	cpc	r19, r1
     ee2:	1c f0       	brlt	.+6      	; 0xeea <__fixsfsi+0x4e>
     ee4:	66 23       	and	r22, r22
     ee6:	f9 f0       	breq	.+62     	; 0xf26 <__fixsfsi+0x8a>
     ee8:	23 c0       	rjmp	.+70     	; 0xf30 <__fixsfsi+0x94>
     eea:	8e e1       	ldi	r24, 0x1E	; 30
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	82 1b       	sub	r24, r18
     ef0:	93 0b       	sbc	r25, r19
     ef2:	29 85       	ldd	r18, Y+9	; 0x09
     ef4:	3a 85       	ldd	r19, Y+10	; 0x0a
     ef6:	4b 85       	ldd	r20, Y+11	; 0x0b
     ef8:	5c 85       	ldd	r21, Y+12	; 0x0c
     efa:	04 c0       	rjmp	.+8      	; 0xf04 <__fixsfsi+0x68>
     efc:	56 95       	lsr	r21
     efe:	47 95       	ror	r20
     f00:	37 95       	ror	r19
     f02:	27 95       	ror	r18
     f04:	8a 95       	dec	r24
     f06:	d2 f7       	brpl	.-12     	; 0xefc <__fixsfsi+0x60>
     f08:	66 23       	and	r22, r22
     f0a:	b1 f0       	breq	.+44     	; 0xf38 <__fixsfsi+0x9c>
     f0c:	50 95       	com	r21
     f0e:	40 95       	com	r20
     f10:	30 95       	com	r19
     f12:	21 95       	neg	r18
     f14:	3f 4f       	sbci	r19, 0xFF	; 255
     f16:	4f 4f       	sbci	r20, 0xFF	; 255
     f18:	5f 4f       	sbci	r21, 0xFF	; 255
     f1a:	0e c0       	rjmp	.+28     	; 0xf38 <__fixsfsi+0x9c>
     f1c:	20 e0       	ldi	r18, 0x00	; 0
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	40 e0       	ldi	r20, 0x00	; 0
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	09 c0       	rjmp	.+18     	; 0xf38 <__fixsfsi+0x9c>
     f26:	2f ef       	ldi	r18, 0xFF	; 255
     f28:	3f ef       	ldi	r19, 0xFF	; 255
     f2a:	4f ef       	ldi	r20, 0xFF	; 255
     f2c:	5f e7       	ldi	r21, 0x7F	; 127
     f2e:	04 c0       	rjmp	.+8      	; 0xf38 <__fixsfsi+0x9c>
     f30:	20 e0       	ldi	r18, 0x00	; 0
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	40 e0       	ldi	r20, 0x00	; 0
     f36:	50 e8       	ldi	r21, 0x80	; 128
     f38:	b9 01       	movw	r22, r18
     f3a:	ca 01       	movw	r24, r20
     f3c:	2c 96       	adiw	r28, 0x0c	; 12
     f3e:	e2 e0       	ldi	r30, 0x02	; 2
     f40:	0c 94 ea 09 	jmp	0x13d4	; 0x13d4 <__epilogue_restores__+0x20>

00000f44 <__clzsi2>:
     f44:	ef 92       	push	r14
     f46:	ff 92       	push	r15
     f48:	0f 93       	push	r16
     f4a:	1f 93       	push	r17
     f4c:	7b 01       	movw	r14, r22
     f4e:	8c 01       	movw	r16, r24
     f50:	80 e0       	ldi	r24, 0x00	; 0
     f52:	e8 16       	cp	r14, r24
     f54:	80 e0       	ldi	r24, 0x00	; 0
     f56:	f8 06       	cpc	r15, r24
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	08 07       	cpc	r16, r24
     f5c:	80 e0       	ldi	r24, 0x00	; 0
     f5e:	18 07       	cpc	r17, r24
     f60:	88 f4       	brcc	.+34     	; 0xf84 <__clzsi2+0x40>
     f62:	8f ef       	ldi	r24, 0xFF	; 255
     f64:	e8 16       	cp	r14, r24
     f66:	f1 04       	cpc	r15, r1
     f68:	01 05       	cpc	r16, r1
     f6a:	11 05       	cpc	r17, r1
     f6c:	31 f0       	breq	.+12     	; 0xf7a <__clzsi2+0x36>
     f6e:	28 f0       	brcs	.+10     	; 0xf7a <__clzsi2+0x36>
     f70:	88 e0       	ldi	r24, 0x08	; 8
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	a0 e0       	ldi	r26, 0x00	; 0
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	17 c0       	rjmp	.+46     	; 0xfa8 <__clzsi2+0x64>
     f7a:	80 e0       	ldi	r24, 0x00	; 0
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	a0 e0       	ldi	r26, 0x00	; 0
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	12 c0       	rjmp	.+36     	; 0xfa8 <__clzsi2+0x64>
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	e8 16       	cp	r14, r24
     f88:	80 e0       	ldi	r24, 0x00	; 0
     f8a:	f8 06       	cpc	r15, r24
     f8c:	80 e0       	ldi	r24, 0x00	; 0
     f8e:	08 07       	cpc	r16, r24
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	18 07       	cpc	r17, r24
     f94:	28 f0       	brcs	.+10     	; 0xfa0 <__clzsi2+0x5c>
     f96:	88 e1       	ldi	r24, 0x18	; 24
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	a0 e0       	ldi	r26, 0x00	; 0
     f9c:	b0 e0       	ldi	r27, 0x00	; 0
     f9e:	04 c0       	rjmp	.+8      	; 0xfa8 <__clzsi2+0x64>
     fa0:	80 e1       	ldi	r24, 0x10	; 16
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	a0 e0       	ldi	r26, 0x00	; 0
     fa6:	b0 e0       	ldi	r27, 0x00	; 0
     fa8:	20 e2       	ldi	r18, 0x20	; 32
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	40 e0       	ldi	r20, 0x00	; 0
     fae:	50 e0       	ldi	r21, 0x00	; 0
     fb0:	28 1b       	sub	r18, r24
     fb2:	39 0b       	sbc	r19, r25
     fb4:	4a 0b       	sbc	r20, r26
     fb6:	5b 0b       	sbc	r21, r27
     fb8:	04 c0       	rjmp	.+8      	; 0xfc2 <__clzsi2+0x7e>
     fba:	16 95       	lsr	r17
     fbc:	07 95       	ror	r16
     fbe:	f7 94       	ror	r15
     fc0:	e7 94       	ror	r14
     fc2:	8a 95       	dec	r24
     fc4:	d2 f7       	brpl	.-12     	; 0xfba <__clzsi2+0x76>
     fc6:	f7 01       	movw	r30, r14
     fc8:	e8 59       	subi	r30, 0x98	; 152
     fca:	ff 4f       	sbci	r31, 0xFF	; 255
     fcc:	80 81       	ld	r24, Z
     fce:	28 1b       	sub	r18, r24
     fd0:	31 09       	sbc	r19, r1
     fd2:	41 09       	sbc	r20, r1
     fd4:	51 09       	sbc	r21, r1
     fd6:	c9 01       	movw	r24, r18
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	ff 90       	pop	r15
     fde:	ef 90       	pop	r14
     fe0:	08 95       	ret

00000fe2 <__pack_f>:
     fe2:	df 92       	push	r13
     fe4:	ef 92       	push	r14
     fe6:	ff 92       	push	r15
     fe8:	0f 93       	push	r16
     fea:	1f 93       	push	r17
     fec:	fc 01       	movw	r30, r24
     fee:	e4 80       	ldd	r14, Z+4	; 0x04
     ff0:	f5 80       	ldd	r15, Z+5	; 0x05
     ff2:	06 81       	ldd	r16, Z+6	; 0x06
     ff4:	17 81       	ldd	r17, Z+7	; 0x07
     ff6:	d1 80       	ldd	r13, Z+1	; 0x01
     ff8:	80 81       	ld	r24, Z
     ffa:	82 30       	cpi	r24, 0x02	; 2
     ffc:	48 f4       	brcc	.+18     	; 0x1010 <__pack_f+0x2e>
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	a0 e1       	ldi	r26, 0x10	; 16
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	e8 2a       	or	r14, r24
    1008:	f9 2a       	or	r15, r25
    100a:	0a 2b       	or	r16, r26
    100c:	1b 2b       	or	r17, r27
    100e:	a5 c0       	rjmp	.+330    	; 0x115a <__pack_f+0x178>
    1010:	84 30       	cpi	r24, 0x04	; 4
    1012:	09 f4       	brne	.+2      	; 0x1016 <__pack_f+0x34>
    1014:	9f c0       	rjmp	.+318    	; 0x1154 <__pack_f+0x172>
    1016:	82 30       	cpi	r24, 0x02	; 2
    1018:	21 f4       	brne	.+8      	; 0x1022 <__pack_f+0x40>
    101a:	ee 24       	eor	r14, r14
    101c:	ff 24       	eor	r15, r15
    101e:	87 01       	movw	r16, r14
    1020:	05 c0       	rjmp	.+10     	; 0x102c <__pack_f+0x4a>
    1022:	e1 14       	cp	r14, r1
    1024:	f1 04       	cpc	r15, r1
    1026:	01 05       	cpc	r16, r1
    1028:	11 05       	cpc	r17, r1
    102a:	19 f4       	brne	.+6      	; 0x1032 <__pack_f+0x50>
    102c:	e0 e0       	ldi	r30, 0x00	; 0
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	96 c0       	rjmp	.+300    	; 0x115e <__pack_f+0x17c>
    1032:	62 81       	ldd	r22, Z+2	; 0x02
    1034:	73 81       	ldd	r23, Z+3	; 0x03
    1036:	9f ef       	ldi	r25, 0xFF	; 255
    1038:	62 38       	cpi	r22, 0x82	; 130
    103a:	79 07       	cpc	r23, r25
    103c:	0c f0       	brlt	.+2      	; 0x1040 <__pack_f+0x5e>
    103e:	5b c0       	rjmp	.+182    	; 0x10f6 <__pack_f+0x114>
    1040:	22 e8       	ldi	r18, 0x82	; 130
    1042:	3f ef       	ldi	r19, 0xFF	; 255
    1044:	26 1b       	sub	r18, r22
    1046:	37 0b       	sbc	r19, r23
    1048:	2a 31       	cpi	r18, 0x1A	; 26
    104a:	31 05       	cpc	r19, r1
    104c:	2c f0       	brlt	.+10     	; 0x1058 <__pack_f+0x76>
    104e:	20 e0       	ldi	r18, 0x00	; 0
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	40 e0       	ldi	r20, 0x00	; 0
    1054:	50 e0       	ldi	r21, 0x00	; 0
    1056:	2a c0       	rjmp	.+84     	; 0x10ac <__pack_f+0xca>
    1058:	b8 01       	movw	r22, r16
    105a:	a7 01       	movw	r20, r14
    105c:	02 2e       	mov	r0, r18
    105e:	04 c0       	rjmp	.+8      	; 0x1068 <__pack_f+0x86>
    1060:	76 95       	lsr	r23
    1062:	67 95       	ror	r22
    1064:	57 95       	ror	r21
    1066:	47 95       	ror	r20
    1068:	0a 94       	dec	r0
    106a:	d2 f7       	brpl	.-12     	; 0x1060 <__pack_f+0x7e>
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	a0 e0       	ldi	r26, 0x00	; 0
    1072:	b0 e0       	ldi	r27, 0x00	; 0
    1074:	04 c0       	rjmp	.+8      	; 0x107e <__pack_f+0x9c>
    1076:	88 0f       	add	r24, r24
    1078:	99 1f       	adc	r25, r25
    107a:	aa 1f       	adc	r26, r26
    107c:	bb 1f       	adc	r27, r27
    107e:	2a 95       	dec	r18
    1080:	d2 f7       	brpl	.-12     	; 0x1076 <__pack_f+0x94>
    1082:	01 97       	sbiw	r24, 0x01	; 1
    1084:	a1 09       	sbc	r26, r1
    1086:	b1 09       	sbc	r27, r1
    1088:	8e 21       	and	r24, r14
    108a:	9f 21       	and	r25, r15
    108c:	a0 23       	and	r26, r16
    108e:	b1 23       	and	r27, r17
    1090:	00 97       	sbiw	r24, 0x00	; 0
    1092:	a1 05       	cpc	r26, r1
    1094:	b1 05       	cpc	r27, r1
    1096:	21 f0       	breq	.+8      	; 0x10a0 <__pack_f+0xbe>
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	a0 e0       	ldi	r26, 0x00	; 0
    109e:	b0 e0       	ldi	r27, 0x00	; 0
    10a0:	9a 01       	movw	r18, r20
    10a2:	ab 01       	movw	r20, r22
    10a4:	28 2b       	or	r18, r24
    10a6:	39 2b       	or	r19, r25
    10a8:	4a 2b       	or	r20, r26
    10aa:	5b 2b       	or	r21, r27
    10ac:	da 01       	movw	r26, r20
    10ae:	c9 01       	movw	r24, r18
    10b0:	8f 77       	andi	r24, 0x7F	; 127
    10b2:	90 70       	andi	r25, 0x00	; 0
    10b4:	a0 70       	andi	r26, 0x00	; 0
    10b6:	b0 70       	andi	r27, 0x00	; 0
    10b8:	80 34       	cpi	r24, 0x40	; 64
    10ba:	91 05       	cpc	r25, r1
    10bc:	a1 05       	cpc	r26, r1
    10be:	b1 05       	cpc	r27, r1
    10c0:	39 f4       	brne	.+14     	; 0x10d0 <__pack_f+0xee>
    10c2:	27 ff       	sbrs	r18, 7
    10c4:	09 c0       	rjmp	.+18     	; 0x10d8 <__pack_f+0xf6>
    10c6:	20 5c       	subi	r18, 0xC0	; 192
    10c8:	3f 4f       	sbci	r19, 0xFF	; 255
    10ca:	4f 4f       	sbci	r20, 0xFF	; 255
    10cc:	5f 4f       	sbci	r21, 0xFF	; 255
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <__pack_f+0xf6>
    10d0:	21 5c       	subi	r18, 0xC1	; 193
    10d2:	3f 4f       	sbci	r19, 0xFF	; 255
    10d4:	4f 4f       	sbci	r20, 0xFF	; 255
    10d6:	5f 4f       	sbci	r21, 0xFF	; 255
    10d8:	e0 e0       	ldi	r30, 0x00	; 0
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	20 30       	cpi	r18, 0x00	; 0
    10de:	a0 e0       	ldi	r26, 0x00	; 0
    10e0:	3a 07       	cpc	r19, r26
    10e2:	a0 e0       	ldi	r26, 0x00	; 0
    10e4:	4a 07       	cpc	r20, r26
    10e6:	a0 e4       	ldi	r26, 0x40	; 64
    10e8:	5a 07       	cpc	r21, r26
    10ea:	10 f0       	brcs	.+4      	; 0x10f0 <__pack_f+0x10e>
    10ec:	e1 e0       	ldi	r30, 0x01	; 1
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	79 01       	movw	r14, r18
    10f2:	8a 01       	movw	r16, r20
    10f4:	27 c0       	rjmp	.+78     	; 0x1144 <__pack_f+0x162>
    10f6:	60 38       	cpi	r22, 0x80	; 128
    10f8:	71 05       	cpc	r23, r1
    10fa:	64 f5       	brge	.+88     	; 0x1154 <__pack_f+0x172>
    10fc:	fb 01       	movw	r30, r22
    10fe:	e1 58       	subi	r30, 0x81	; 129
    1100:	ff 4f       	sbci	r31, 0xFF	; 255
    1102:	d8 01       	movw	r26, r16
    1104:	c7 01       	movw	r24, r14
    1106:	8f 77       	andi	r24, 0x7F	; 127
    1108:	90 70       	andi	r25, 0x00	; 0
    110a:	a0 70       	andi	r26, 0x00	; 0
    110c:	b0 70       	andi	r27, 0x00	; 0
    110e:	80 34       	cpi	r24, 0x40	; 64
    1110:	91 05       	cpc	r25, r1
    1112:	a1 05       	cpc	r26, r1
    1114:	b1 05       	cpc	r27, r1
    1116:	39 f4       	brne	.+14     	; 0x1126 <__pack_f+0x144>
    1118:	e7 fe       	sbrs	r14, 7
    111a:	0d c0       	rjmp	.+26     	; 0x1136 <__pack_f+0x154>
    111c:	80 e4       	ldi	r24, 0x40	; 64
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	a0 e0       	ldi	r26, 0x00	; 0
    1122:	b0 e0       	ldi	r27, 0x00	; 0
    1124:	04 c0       	rjmp	.+8      	; 0x112e <__pack_f+0x14c>
    1126:	8f e3       	ldi	r24, 0x3F	; 63
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	a0 e0       	ldi	r26, 0x00	; 0
    112c:	b0 e0       	ldi	r27, 0x00	; 0
    112e:	e8 0e       	add	r14, r24
    1130:	f9 1e       	adc	r15, r25
    1132:	0a 1f       	adc	r16, r26
    1134:	1b 1f       	adc	r17, r27
    1136:	17 ff       	sbrs	r17, 7
    1138:	05 c0       	rjmp	.+10     	; 0x1144 <__pack_f+0x162>
    113a:	16 95       	lsr	r17
    113c:	07 95       	ror	r16
    113e:	f7 94       	ror	r15
    1140:	e7 94       	ror	r14
    1142:	31 96       	adiw	r30, 0x01	; 1
    1144:	87 e0       	ldi	r24, 0x07	; 7
    1146:	16 95       	lsr	r17
    1148:	07 95       	ror	r16
    114a:	f7 94       	ror	r15
    114c:	e7 94       	ror	r14
    114e:	8a 95       	dec	r24
    1150:	d1 f7       	brne	.-12     	; 0x1146 <__pack_f+0x164>
    1152:	05 c0       	rjmp	.+10     	; 0x115e <__pack_f+0x17c>
    1154:	ee 24       	eor	r14, r14
    1156:	ff 24       	eor	r15, r15
    1158:	87 01       	movw	r16, r14
    115a:	ef ef       	ldi	r30, 0xFF	; 255
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	6e 2f       	mov	r22, r30
    1160:	67 95       	ror	r22
    1162:	66 27       	eor	r22, r22
    1164:	67 95       	ror	r22
    1166:	90 2f       	mov	r25, r16
    1168:	9f 77       	andi	r25, 0x7F	; 127
    116a:	d7 94       	ror	r13
    116c:	dd 24       	eor	r13, r13
    116e:	d7 94       	ror	r13
    1170:	8e 2f       	mov	r24, r30
    1172:	86 95       	lsr	r24
    1174:	49 2f       	mov	r20, r25
    1176:	46 2b       	or	r20, r22
    1178:	58 2f       	mov	r21, r24
    117a:	5d 29       	or	r21, r13
    117c:	b7 01       	movw	r22, r14
    117e:	ca 01       	movw	r24, r20
    1180:	1f 91       	pop	r17
    1182:	0f 91       	pop	r16
    1184:	ff 90       	pop	r15
    1186:	ef 90       	pop	r14
    1188:	df 90       	pop	r13
    118a:	08 95       	ret

0000118c <__unpack_f>:
    118c:	fc 01       	movw	r30, r24
    118e:	db 01       	movw	r26, r22
    1190:	40 81       	ld	r20, Z
    1192:	51 81       	ldd	r21, Z+1	; 0x01
    1194:	22 81       	ldd	r18, Z+2	; 0x02
    1196:	62 2f       	mov	r22, r18
    1198:	6f 77       	andi	r22, 0x7F	; 127
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	22 1f       	adc	r18, r18
    119e:	22 27       	eor	r18, r18
    11a0:	22 1f       	adc	r18, r18
    11a2:	93 81       	ldd	r25, Z+3	; 0x03
    11a4:	89 2f       	mov	r24, r25
    11a6:	88 0f       	add	r24, r24
    11a8:	82 2b       	or	r24, r18
    11aa:	28 2f       	mov	r18, r24
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	99 1f       	adc	r25, r25
    11b0:	99 27       	eor	r25, r25
    11b2:	99 1f       	adc	r25, r25
    11b4:	11 96       	adiw	r26, 0x01	; 1
    11b6:	9c 93       	st	X, r25
    11b8:	11 97       	sbiw	r26, 0x01	; 1
    11ba:	21 15       	cp	r18, r1
    11bc:	31 05       	cpc	r19, r1
    11be:	a9 f5       	brne	.+106    	; 0x122a <__unpack_f+0x9e>
    11c0:	41 15       	cp	r20, r1
    11c2:	51 05       	cpc	r21, r1
    11c4:	61 05       	cpc	r22, r1
    11c6:	71 05       	cpc	r23, r1
    11c8:	11 f4       	brne	.+4      	; 0x11ce <__unpack_f+0x42>
    11ca:	82 e0       	ldi	r24, 0x02	; 2
    11cc:	37 c0       	rjmp	.+110    	; 0x123c <__unpack_f+0xb0>
    11ce:	82 e8       	ldi	r24, 0x82	; 130
    11d0:	9f ef       	ldi	r25, 0xFF	; 255
    11d2:	13 96       	adiw	r26, 0x03	; 3
    11d4:	9c 93       	st	X, r25
    11d6:	8e 93       	st	-X, r24
    11d8:	12 97       	sbiw	r26, 0x02	; 2
    11da:	9a 01       	movw	r18, r20
    11dc:	ab 01       	movw	r20, r22
    11de:	67 e0       	ldi	r22, 0x07	; 7
    11e0:	22 0f       	add	r18, r18
    11e2:	33 1f       	adc	r19, r19
    11e4:	44 1f       	adc	r20, r20
    11e6:	55 1f       	adc	r21, r21
    11e8:	6a 95       	dec	r22
    11ea:	d1 f7       	brne	.-12     	; 0x11e0 <__unpack_f+0x54>
    11ec:	83 e0       	ldi	r24, 0x03	; 3
    11ee:	8c 93       	st	X, r24
    11f0:	0d c0       	rjmp	.+26     	; 0x120c <__unpack_f+0x80>
    11f2:	22 0f       	add	r18, r18
    11f4:	33 1f       	adc	r19, r19
    11f6:	44 1f       	adc	r20, r20
    11f8:	55 1f       	adc	r21, r21
    11fa:	12 96       	adiw	r26, 0x02	; 2
    11fc:	8d 91       	ld	r24, X+
    11fe:	9c 91       	ld	r25, X
    1200:	13 97       	sbiw	r26, 0x03	; 3
    1202:	01 97       	sbiw	r24, 0x01	; 1
    1204:	13 96       	adiw	r26, 0x03	; 3
    1206:	9c 93       	st	X, r25
    1208:	8e 93       	st	-X, r24
    120a:	12 97       	sbiw	r26, 0x02	; 2
    120c:	20 30       	cpi	r18, 0x00	; 0
    120e:	80 e0       	ldi	r24, 0x00	; 0
    1210:	38 07       	cpc	r19, r24
    1212:	80 e0       	ldi	r24, 0x00	; 0
    1214:	48 07       	cpc	r20, r24
    1216:	80 e4       	ldi	r24, 0x40	; 64
    1218:	58 07       	cpc	r21, r24
    121a:	58 f3       	brcs	.-42     	; 0x11f2 <__unpack_f+0x66>
    121c:	14 96       	adiw	r26, 0x04	; 4
    121e:	2d 93       	st	X+, r18
    1220:	3d 93       	st	X+, r19
    1222:	4d 93       	st	X+, r20
    1224:	5c 93       	st	X, r21
    1226:	17 97       	sbiw	r26, 0x07	; 7
    1228:	08 95       	ret
    122a:	2f 3f       	cpi	r18, 0xFF	; 255
    122c:	31 05       	cpc	r19, r1
    122e:	79 f4       	brne	.+30     	; 0x124e <__unpack_f+0xc2>
    1230:	41 15       	cp	r20, r1
    1232:	51 05       	cpc	r21, r1
    1234:	61 05       	cpc	r22, r1
    1236:	71 05       	cpc	r23, r1
    1238:	19 f4       	brne	.+6      	; 0x1240 <__unpack_f+0xb4>
    123a:	84 e0       	ldi	r24, 0x04	; 4
    123c:	8c 93       	st	X, r24
    123e:	08 95       	ret
    1240:	64 ff       	sbrs	r22, 4
    1242:	03 c0       	rjmp	.+6      	; 0x124a <__unpack_f+0xbe>
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	8c 93       	st	X, r24
    1248:	12 c0       	rjmp	.+36     	; 0x126e <__unpack_f+0xe2>
    124a:	1c 92       	st	X, r1
    124c:	10 c0       	rjmp	.+32     	; 0x126e <__unpack_f+0xe2>
    124e:	2f 57       	subi	r18, 0x7F	; 127
    1250:	30 40       	sbci	r19, 0x00	; 0
    1252:	13 96       	adiw	r26, 0x03	; 3
    1254:	3c 93       	st	X, r19
    1256:	2e 93       	st	-X, r18
    1258:	12 97       	sbiw	r26, 0x02	; 2
    125a:	83 e0       	ldi	r24, 0x03	; 3
    125c:	8c 93       	st	X, r24
    125e:	87 e0       	ldi	r24, 0x07	; 7
    1260:	44 0f       	add	r20, r20
    1262:	55 1f       	adc	r21, r21
    1264:	66 1f       	adc	r22, r22
    1266:	77 1f       	adc	r23, r23
    1268:	8a 95       	dec	r24
    126a:	d1 f7       	brne	.-12     	; 0x1260 <__unpack_f+0xd4>
    126c:	70 64       	ori	r23, 0x40	; 64
    126e:	14 96       	adiw	r26, 0x04	; 4
    1270:	4d 93       	st	X+, r20
    1272:	5d 93       	st	X+, r21
    1274:	6d 93       	st	X+, r22
    1276:	7c 93       	st	X, r23
    1278:	17 97       	sbiw	r26, 0x07	; 7
    127a:	08 95       	ret

0000127c <__fpcmp_parts_f>:
    127c:	1f 93       	push	r17
    127e:	dc 01       	movw	r26, r24
    1280:	fb 01       	movw	r30, r22
    1282:	9c 91       	ld	r25, X
    1284:	92 30       	cpi	r25, 0x02	; 2
    1286:	08 f4       	brcc	.+2      	; 0x128a <__fpcmp_parts_f+0xe>
    1288:	47 c0       	rjmp	.+142    	; 0x1318 <__fpcmp_parts_f+0x9c>
    128a:	80 81       	ld	r24, Z
    128c:	82 30       	cpi	r24, 0x02	; 2
    128e:	08 f4       	brcc	.+2      	; 0x1292 <__fpcmp_parts_f+0x16>
    1290:	43 c0       	rjmp	.+134    	; 0x1318 <__fpcmp_parts_f+0x9c>
    1292:	94 30       	cpi	r25, 0x04	; 4
    1294:	51 f4       	brne	.+20     	; 0x12aa <__fpcmp_parts_f+0x2e>
    1296:	11 96       	adiw	r26, 0x01	; 1
    1298:	1c 91       	ld	r17, X
    129a:	84 30       	cpi	r24, 0x04	; 4
    129c:	99 f5       	brne	.+102    	; 0x1304 <__fpcmp_parts_f+0x88>
    129e:	81 81       	ldd	r24, Z+1	; 0x01
    12a0:	68 2f       	mov	r22, r24
    12a2:	70 e0       	ldi	r23, 0x00	; 0
    12a4:	61 1b       	sub	r22, r17
    12a6:	71 09       	sbc	r23, r1
    12a8:	3f c0       	rjmp	.+126    	; 0x1328 <__fpcmp_parts_f+0xac>
    12aa:	84 30       	cpi	r24, 0x04	; 4
    12ac:	21 f0       	breq	.+8      	; 0x12b6 <__fpcmp_parts_f+0x3a>
    12ae:	92 30       	cpi	r25, 0x02	; 2
    12b0:	31 f4       	brne	.+12     	; 0x12be <__fpcmp_parts_f+0x42>
    12b2:	82 30       	cpi	r24, 0x02	; 2
    12b4:	b9 f1       	breq	.+110    	; 0x1324 <__fpcmp_parts_f+0xa8>
    12b6:	81 81       	ldd	r24, Z+1	; 0x01
    12b8:	88 23       	and	r24, r24
    12ba:	89 f1       	breq	.+98     	; 0x131e <__fpcmp_parts_f+0xa2>
    12bc:	2d c0       	rjmp	.+90     	; 0x1318 <__fpcmp_parts_f+0x9c>
    12be:	11 96       	adiw	r26, 0x01	; 1
    12c0:	1c 91       	ld	r17, X
    12c2:	11 97       	sbiw	r26, 0x01	; 1
    12c4:	82 30       	cpi	r24, 0x02	; 2
    12c6:	f1 f0       	breq	.+60     	; 0x1304 <__fpcmp_parts_f+0x88>
    12c8:	81 81       	ldd	r24, Z+1	; 0x01
    12ca:	18 17       	cp	r17, r24
    12cc:	d9 f4       	brne	.+54     	; 0x1304 <__fpcmp_parts_f+0x88>
    12ce:	12 96       	adiw	r26, 0x02	; 2
    12d0:	2d 91       	ld	r18, X+
    12d2:	3c 91       	ld	r19, X
    12d4:	13 97       	sbiw	r26, 0x03	; 3
    12d6:	82 81       	ldd	r24, Z+2	; 0x02
    12d8:	93 81       	ldd	r25, Z+3	; 0x03
    12da:	82 17       	cp	r24, r18
    12dc:	93 07       	cpc	r25, r19
    12de:	94 f0       	brlt	.+36     	; 0x1304 <__fpcmp_parts_f+0x88>
    12e0:	28 17       	cp	r18, r24
    12e2:	39 07       	cpc	r19, r25
    12e4:	bc f0       	brlt	.+46     	; 0x1314 <__fpcmp_parts_f+0x98>
    12e6:	14 96       	adiw	r26, 0x04	; 4
    12e8:	8d 91       	ld	r24, X+
    12ea:	9d 91       	ld	r25, X+
    12ec:	0d 90       	ld	r0, X+
    12ee:	bc 91       	ld	r27, X
    12f0:	a0 2d       	mov	r26, r0
    12f2:	24 81       	ldd	r18, Z+4	; 0x04
    12f4:	35 81       	ldd	r19, Z+5	; 0x05
    12f6:	46 81       	ldd	r20, Z+6	; 0x06
    12f8:	57 81       	ldd	r21, Z+7	; 0x07
    12fa:	28 17       	cp	r18, r24
    12fc:	39 07       	cpc	r19, r25
    12fe:	4a 07       	cpc	r20, r26
    1300:	5b 07       	cpc	r21, r27
    1302:	18 f4       	brcc	.+6      	; 0x130a <__fpcmp_parts_f+0x8e>
    1304:	11 23       	and	r17, r17
    1306:	41 f0       	breq	.+16     	; 0x1318 <__fpcmp_parts_f+0x9c>
    1308:	0a c0       	rjmp	.+20     	; 0x131e <__fpcmp_parts_f+0xa2>
    130a:	82 17       	cp	r24, r18
    130c:	93 07       	cpc	r25, r19
    130e:	a4 07       	cpc	r26, r20
    1310:	b5 07       	cpc	r27, r21
    1312:	40 f4       	brcc	.+16     	; 0x1324 <__fpcmp_parts_f+0xa8>
    1314:	11 23       	and	r17, r17
    1316:	19 f0       	breq	.+6      	; 0x131e <__fpcmp_parts_f+0xa2>
    1318:	61 e0       	ldi	r22, 0x01	; 1
    131a:	70 e0       	ldi	r23, 0x00	; 0
    131c:	05 c0       	rjmp	.+10     	; 0x1328 <__fpcmp_parts_f+0xac>
    131e:	6f ef       	ldi	r22, 0xFF	; 255
    1320:	7f ef       	ldi	r23, 0xFF	; 255
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <__fpcmp_parts_f+0xac>
    1324:	60 e0       	ldi	r22, 0x00	; 0
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	cb 01       	movw	r24, r22
    132a:	1f 91       	pop	r17
    132c:	08 95       	ret

0000132e <__divmodhi4>:
    132e:	97 fb       	bst	r25, 7
    1330:	09 2e       	mov	r0, r25
    1332:	07 26       	eor	r0, r23
    1334:	0a d0       	rcall	.+20     	; 0x134a <__divmodhi4_neg1>
    1336:	77 fd       	sbrc	r23, 7
    1338:	04 d0       	rcall	.+8      	; 0x1342 <__divmodhi4_neg2>
    133a:	0c d0       	rcall	.+24     	; 0x1354 <__udivmodhi4>
    133c:	06 d0       	rcall	.+12     	; 0x134a <__divmodhi4_neg1>
    133e:	00 20       	and	r0, r0
    1340:	1a f4       	brpl	.+6      	; 0x1348 <__divmodhi4_exit>

00001342 <__divmodhi4_neg2>:
    1342:	70 95       	com	r23
    1344:	61 95       	neg	r22
    1346:	7f 4f       	sbci	r23, 0xFF	; 255

00001348 <__divmodhi4_exit>:
    1348:	08 95       	ret

0000134a <__divmodhi4_neg1>:
    134a:	f6 f7       	brtc	.-4      	; 0x1348 <__divmodhi4_exit>
    134c:	90 95       	com	r25
    134e:	81 95       	neg	r24
    1350:	9f 4f       	sbci	r25, 0xFF	; 255
    1352:	08 95       	ret

00001354 <__udivmodhi4>:
    1354:	aa 1b       	sub	r26, r26
    1356:	bb 1b       	sub	r27, r27
    1358:	51 e1       	ldi	r21, 0x11	; 17
    135a:	07 c0       	rjmp	.+14     	; 0x136a <__udivmodhi4_ep>

0000135c <__udivmodhi4_loop>:
    135c:	aa 1f       	adc	r26, r26
    135e:	bb 1f       	adc	r27, r27
    1360:	a6 17       	cp	r26, r22
    1362:	b7 07       	cpc	r27, r23
    1364:	10 f0       	brcs	.+4      	; 0x136a <__udivmodhi4_ep>
    1366:	a6 1b       	sub	r26, r22
    1368:	b7 0b       	sbc	r27, r23

0000136a <__udivmodhi4_ep>:
    136a:	88 1f       	adc	r24, r24
    136c:	99 1f       	adc	r25, r25
    136e:	5a 95       	dec	r21
    1370:	a9 f7       	brne	.-22     	; 0x135c <__udivmodhi4_loop>
    1372:	80 95       	com	r24
    1374:	90 95       	com	r25
    1376:	bc 01       	movw	r22, r24
    1378:	cd 01       	movw	r24, r26
    137a:	08 95       	ret

0000137c <__prologue_saves__>:
    137c:	2f 92       	push	r2
    137e:	3f 92       	push	r3
    1380:	4f 92       	push	r4
    1382:	5f 92       	push	r5
    1384:	6f 92       	push	r6
    1386:	7f 92       	push	r7
    1388:	8f 92       	push	r8
    138a:	9f 92       	push	r9
    138c:	af 92       	push	r10
    138e:	bf 92       	push	r11
    1390:	cf 92       	push	r12
    1392:	df 92       	push	r13
    1394:	ef 92       	push	r14
    1396:	ff 92       	push	r15
    1398:	0f 93       	push	r16
    139a:	1f 93       	push	r17
    139c:	cf 93       	push	r28
    139e:	df 93       	push	r29
    13a0:	cd b7       	in	r28, 0x3d	; 61
    13a2:	de b7       	in	r29, 0x3e	; 62
    13a4:	ca 1b       	sub	r28, r26
    13a6:	db 0b       	sbc	r29, r27
    13a8:	0f b6       	in	r0, 0x3f	; 63
    13aa:	f8 94       	cli
    13ac:	de bf       	out	0x3e, r29	; 62
    13ae:	0f be       	out	0x3f, r0	; 63
    13b0:	cd bf       	out	0x3d, r28	; 61
    13b2:	09 94       	ijmp

000013b4 <__epilogue_restores__>:
    13b4:	2a 88       	ldd	r2, Y+18	; 0x12
    13b6:	39 88       	ldd	r3, Y+17	; 0x11
    13b8:	48 88       	ldd	r4, Y+16	; 0x10
    13ba:	5f 84       	ldd	r5, Y+15	; 0x0f
    13bc:	6e 84       	ldd	r6, Y+14	; 0x0e
    13be:	7d 84       	ldd	r7, Y+13	; 0x0d
    13c0:	8c 84       	ldd	r8, Y+12	; 0x0c
    13c2:	9b 84       	ldd	r9, Y+11	; 0x0b
    13c4:	aa 84       	ldd	r10, Y+10	; 0x0a
    13c6:	b9 84       	ldd	r11, Y+9	; 0x09
    13c8:	c8 84       	ldd	r12, Y+8	; 0x08
    13ca:	df 80       	ldd	r13, Y+7	; 0x07
    13cc:	ee 80       	ldd	r14, Y+6	; 0x06
    13ce:	fd 80       	ldd	r15, Y+5	; 0x05
    13d0:	0c 81       	ldd	r16, Y+4	; 0x04
    13d2:	1b 81       	ldd	r17, Y+3	; 0x03
    13d4:	aa 81       	ldd	r26, Y+2	; 0x02
    13d6:	b9 81       	ldd	r27, Y+1	; 0x01
    13d8:	ce 0f       	add	r28, r30
    13da:	d1 1d       	adc	r29, r1
    13dc:	0f b6       	in	r0, 0x3f	; 63
    13de:	f8 94       	cli
    13e0:	de bf       	out	0x3e, r29	; 62
    13e2:	0f be       	out	0x3f, r0	; 63
    13e4:	cd bf       	out	0x3d, r28	; 61
    13e6:	ed 01       	movw	r28, r26
    13e8:	08 95       	ret

000013ea <_exit>:
    13ea:	f8 94       	cli

000013ec <__stop_program>:
    13ec:	ff cf       	rjmp	.-2      	; 0x13ec <__stop_program>
