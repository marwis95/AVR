
czujnik7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  000015f6  0000166a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000918  00000000  00000000  00001774  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000746  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ef       	ldi	r30, 0xF6	; 246
      68:	f5 e1       	ldi	r31, 0x15	; 21
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 e6       	ldi	r26, 0x68	; 104
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 22 01 	call	0x244	; 0x244 <main>
      8a:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <getPulseWidth>:

    #define US_ERROR 0xffff
    #define  US_NO_OBSTACLE 0xfffe

    uint16_t getPulseWidth()
    {
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
      9a:	2a 97       	sbiw	r28, 0x0a	; 10
      9c:	0f b6       	in	r0, 0x3f	; 63
      9e:	f8 94       	cli
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	0f be       	out	0x3f, r0	; 63
      a4:	cd bf       	out	0x3d, r28	; 61
       uint32_t i,result;

       //Wait for the rising edge
       for(i=0;i<600000;i++)
      a6:	1d 82       	std	Y+5, r1	; 0x05
      a8:	1e 82       	std	Y+6, r1	; 0x06
      aa:	1f 82       	std	Y+7, r1	; 0x07
      ac:	18 86       	std	Y+8, r1	; 0x08
      ae:	14 c0       	rjmp	.+40     	; 0xd8 <getPulseWidth+0x46>
       {
          if(!(US_PIN & (1<<US_POS))) continue; else break;
      b0:	e9 e3       	ldi	r30, 0x39	; 57
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	88 2f       	mov	r24, r24
      b8:	90 e0       	ldi	r25, 0x00	; 0
      ba:	81 70       	andi	r24, 0x01	; 1
      bc:	90 70       	andi	r25, 0x00	; 0
      be:	00 97       	sbiw	r24, 0x00	; 0
      c0:	b9 f4       	brne	.+46     	; 0xf0 <getPulseWidth+0x5e>
    uint16_t getPulseWidth()
    {
       uint32_t i,result;

       //Wait for the rising edge
       for(i=0;i<600000;i++)
      c2:	8d 81       	ldd	r24, Y+5	; 0x05
      c4:	9e 81       	ldd	r25, Y+6	; 0x06
      c6:	af 81       	ldd	r26, Y+7	; 0x07
      c8:	b8 85       	ldd	r27, Y+8	; 0x08
      ca:	01 96       	adiw	r24, 0x01	; 1
      cc:	a1 1d       	adc	r26, r1
      ce:	b1 1d       	adc	r27, r1
      d0:	8d 83       	std	Y+5, r24	; 0x05
      d2:	9e 83       	std	Y+6, r25	; 0x06
      d4:	af 83       	std	Y+7, r26	; 0x07
      d6:	b8 87       	std	Y+8, r27	; 0x08
      d8:	8d 81       	ldd	r24, Y+5	; 0x05
      da:	9e 81       	ldd	r25, Y+6	; 0x06
      dc:	af 81       	ldd	r26, Y+7	; 0x07
      de:	b8 85       	ldd	r27, Y+8	; 0x08
      e0:	80 3c       	cpi	r24, 0xC0	; 192
      e2:	27 e2       	ldi	r18, 0x27	; 39
      e4:	92 07       	cpc	r25, r18
      e6:	29 e0       	ldi	r18, 0x09	; 9
      e8:	a2 07       	cpc	r26, r18
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	b2 07       	cpc	r27, r18
      ee:	00 f3       	brcs	.-64     	; 0xb0 <getPulseWidth+0x1e>
       {
          if(!(US_PIN & (1<<US_POS))) continue; else break;
       }

       if(i==600000)
      f0:	8d 81       	ldd	r24, Y+5	; 0x05
      f2:	9e 81       	ldd	r25, Y+6	; 0x06
      f4:	af 81       	ldd	r26, Y+7	; 0x07
      f6:	b8 85       	ldd	r27, Y+8	; 0x08
      f8:	80 3c       	cpi	r24, 0xC0	; 192
      fa:	27 e2       	ldi	r18, 0x27	; 39
      fc:	92 07       	cpc	r25, r18
      fe:	29 e0       	ldi	r18, 0x09	; 9
     100:	a2 07       	cpc	r26, r18
     102:	20 e0       	ldi	r18, 0x00	; 0
     104:	b2 07       	cpc	r27, r18
     106:	29 f4       	brne	.+10     	; 0x112 <getPulseWidth+0x80>
          return 0xffff; //Indicates time out
     108:	8f ef       	ldi	r24, 0xFF	; 255
     10a:	9f ef       	ldi	r25, 0xFF	; 255
     10c:	9a 87       	std	Y+10, r25	; 0x0a
     10e:	89 87       	std	Y+9, r24	; 0x09
     110:	72 c0       	rjmp	.+228    	; 0x1f6 <getPulseWidth+0x164>

       //High Edge Found

       //Setup Timer1
       TCCR1A=0X00;
     112:	ef e4       	ldi	r30, 0x4F	; 79
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	10 82       	st	Z, r1
       TCCR1B=(1<<CS11); //Prescaler = Fcpu/8
     118:	ee e4       	ldi	r30, 0x4E	; 78
     11a:	f0 e0       	ldi	r31, 0x00	; 0
     11c:	82 e0       	ldi	r24, 0x02	; 2
     11e:	80 83       	st	Z, r24
       TCNT1=0x00;       //Init counter
     120:	ec e4       	ldi	r30, 0x4C	; 76
     122:	f0 e0       	ldi	r31, 0x00	; 0
     124:	11 82       	std	Z+1, r1	; 0x01
     126:	10 82       	st	Z, r1

       //Now wait for the falling edge
       for(i=0;i<600000;i++)
     128:	1d 82       	std	Y+5, r1	; 0x05
     12a:	1e 82       	std	Y+6, r1	; 0x06
     12c:	1f 82       	std	Y+7, r1	; 0x07
     12e:	18 86       	std	Y+8, r1	; 0x08
     130:	1c c0       	rjmp	.+56     	; 0x16a <getPulseWidth+0xd8>
       {
          if(US_PIN & (1<<US_POS))
     132:	e9 e3       	ldi	r30, 0x39	; 57
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	88 2f       	mov	r24, r24
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	81 70       	andi	r24, 0x01	; 1
     13e:	90 70       	andi	r25, 0x00	; 0
     140:	88 23       	and	r24, r24
     142:	f9 f0       	breq	.+62     	; 0x182 <getPulseWidth+0xf0>
          {
            if(TCNT1 > 60000) break; else continue;
     144:	ec e4       	ldi	r30, 0x4C	; 76
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	80 81       	ld	r24, Z
     14a:	91 81       	ldd	r25, Z+1	; 0x01
     14c:	2a ee       	ldi	r18, 0xEA	; 234
     14e:	81 36       	cpi	r24, 0x61	; 97
     150:	92 07       	cpc	r25, r18
     152:	b8 f4       	brcc	.+46     	; 0x182 <getPulseWidth+0xf0>
       TCCR1A=0X00;
       TCCR1B=(1<<CS11); //Prescaler = Fcpu/8
       TCNT1=0x00;       //Init counter

       //Now wait for the falling edge
       for(i=0;i<600000;i++)
     154:	8d 81       	ldd	r24, Y+5	; 0x05
     156:	9e 81       	ldd	r25, Y+6	; 0x06
     158:	af 81       	ldd	r26, Y+7	; 0x07
     15a:	b8 85       	ldd	r27, Y+8	; 0x08
     15c:	01 96       	adiw	r24, 0x01	; 1
     15e:	a1 1d       	adc	r26, r1
     160:	b1 1d       	adc	r27, r1
     162:	8d 83       	std	Y+5, r24	; 0x05
     164:	9e 83       	std	Y+6, r25	; 0x06
     166:	af 83       	std	Y+7, r26	; 0x07
     168:	b8 87       	std	Y+8, r27	; 0x08
     16a:	8d 81       	ldd	r24, Y+5	; 0x05
     16c:	9e 81       	ldd	r25, Y+6	; 0x06
     16e:	af 81       	ldd	r26, Y+7	; 0x07
     170:	b8 85       	ldd	r27, Y+8	; 0x08
     172:	80 3c       	cpi	r24, 0xC0	; 192
     174:	27 e2       	ldi	r18, 0x27	; 39
     176:	92 07       	cpc	r25, r18
     178:	29 e0       	ldi	r18, 0x09	; 9
     17a:	a2 07       	cpc	r26, r18
     17c:	20 e0       	ldi	r18, 0x00	; 0
     17e:	b2 07       	cpc	r27, r18
     180:	c0 f2       	brcs	.-80     	; 0x132 <getPulseWidth+0xa0>
          }
         else
             break;
       }

       if(i==600000)
     182:	8d 81       	ldd	r24, Y+5	; 0x05
     184:	9e 81       	ldd	r25, Y+6	; 0x06
     186:	af 81       	ldd	r26, Y+7	; 0x07
     188:	b8 85       	ldd	r27, Y+8	; 0x08
     18a:	80 3c       	cpi	r24, 0xC0	; 192
     18c:	27 e2       	ldi	r18, 0x27	; 39
     18e:	92 07       	cpc	r25, r18
     190:	29 e0       	ldi	r18, 0x09	; 9
     192:	a2 07       	cpc	r26, r18
     194:	20 e0       	ldi	r18, 0x00	; 0
     196:	b2 07       	cpc	r27, r18
     198:	29 f4       	brne	.+10     	; 0x1a4 <getPulseWidth+0x112>
          return 0xffff; //Indicates time out
     19a:	8f ef       	ldi	r24, 0xFF	; 255
     19c:	9f ef       	ldi	r25, 0xFF	; 255
     19e:	9a 87       	std	Y+10, r25	; 0x0a
     1a0:	89 87       	std	Y+9, r24	; 0x09
     1a2:	29 c0       	rjmp	.+82     	; 0x1f6 <getPulseWidth+0x164>

       //Falling edge found

       result=TCNT1;
     1a4:	ec e4       	ldi	r30, 0x4C	; 76
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	91 81       	ldd	r25, Z+1	; 0x01
     1ac:	cc 01       	movw	r24, r24
     1ae:	a0 e0       	ldi	r26, 0x00	; 0
     1b0:	b0 e0       	ldi	r27, 0x00	; 0
     1b2:	89 83       	std	Y+1, r24	; 0x01
     1b4:	9a 83       	std	Y+2, r25	; 0x02
     1b6:	ab 83       	std	Y+3, r26	; 0x03
     1b8:	bc 83       	std	Y+4, r27	; 0x04

       //Stop Timer
       TCCR1B=0x00;
     1ba:	ee e4       	ldi	r30, 0x4E	; 78
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	10 82       	st	Z, r1

       if(result > 60000)
     1c0:	89 81       	ldd	r24, Y+1	; 0x01
     1c2:	9a 81       	ldd	r25, Y+2	; 0x02
     1c4:	ab 81       	ldd	r26, Y+3	; 0x03
     1c6:	bc 81       	ldd	r27, Y+4	; 0x04
     1c8:	81 36       	cpi	r24, 0x61	; 97
     1ca:	2a ee       	ldi	r18, 0xEA	; 234
     1cc:	92 07       	cpc	r25, r18
     1ce:	20 e0       	ldi	r18, 0x00	; 0
     1d0:	a2 07       	cpc	r26, r18
     1d2:	20 e0       	ldi	r18, 0x00	; 0
     1d4:	b2 07       	cpc	r27, r18
     1d6:	28 f0       	brcs	.+10     	; 0x1e2 <getPulseWidth+0x150>
          return 0xfffe; //No obstacle
     1d8:	8e ef       	ldi	r24, 0xFE	; 254
     1da:	9f ef       	ldi	r25, 0xFF	; 255
     1dc:	9a 87       	std	Y+10, r25	; 0x0a
     1de:	89 87       	std	Y+9, r24	; 0x09
     1e0:	0a c0       	rjmp	.+20     	; 0x1f6 <getPulseWidth+0x164>
       else
          return (result>>1);
     1e2:	89 81       	ldd	r24, Y+1	; 0x01
     1e4:	9a 81       	ldd	r25, Y+2	; 0x02
     1e6:	ab 81       	ldd	r26, Y+3	; 0x03
     1e8:	bc 81       	ldd	r27, Y+4	; 0x04
     1ea:	b6 95       	lsr	r27
     1ec:	a7 95       	ror	r26
     1ee:	97 95       	ror	r25
     1f0:	87 95       	ror	r24
     1f2:	9a 87       	std	Y+10, r25	; 0x0a
     1f4:	89 87       	std	Y+9, r24	; 0x09
     1f6:	89 85       	ldd	r24, Y+9	; 0x09
     1f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    }
     1fa:	2a 96       	adiw	r28, 0x0a	; 10
     1fc:	0f b6       	in	r0, 0x3f	; 63
     1fe:	f8 94       	cli
     200:	de bf       	out	0x3e, r29	; 62
     202:	0f be       	out	0x3f, r0	; 63
     204:	cd bf       	out	0x3d, r28	; 61
     206:	cf 91       	pop	r28
     208:	df 91       	pop	r29
     20a:	08 95       	ret

0000020c <Wait>:

   void Wait()
   {
     20c:	df 93       	push	r29
     20e:	cf 93       	push	r28
     210:	00 d0       	rcall	.+0      	; 0x212 <Wait+0x6>
     212:	0f 92       	push	r0
     214:	cd b7       	in	r28, 0x3d	; 61
     216:	de b7       	in	r29, 0x3e	; 62
      uint8_t i;
      for(i=0;i<10;i++)
     218:	1b 82       	std	Y+3, r1	; 0x03
     21a:	0b c0       	rjmp	.+22     	; 0x232 <Wait+0x26>
     21c:	1a 82       	std	Y+2, r1	; 0x02
     21e:	19 82       	std	Y+1, r1	; 0x01
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     220:	89 81       	ldd	r24, Y+1	; 0x01
     222:	9a 81       	ldd	r25, Y+2	; 0x02
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	f1 f7       	brne	.-4      	; 0x224 <Wait+0x18>
     228:	9a 83       	std	Y+2, r25	; 0x02
     22a:	89 83       	std	Y+1, r24	; 0x01
     22c:	8b 81       	ldd	r24, Y+3	; 0x03
     22e:	8f 5f       	subi	r24, 0xFF	; 255
     230:	8b 83       	std	Y+3, r24	; 0x03
     232:	8b 81       	ldd	r24, Y+3	; 0x03
     234:	8a 30       	cpi	r24, 0x0A	; 10
     236:	90 f3       	brcs	.-28     	; 0x21c <Wait+0x10>
         _delay_loop_2(0);
   }
     238:	0f 90       	pop	r0
     23a:	0f 90       	pop	r0
     23c:	0f 90       	pop	r0
     23e:	cf 91       	pop	r28
     240:	df 91       	pop	r29
     242:	08 95       	ret

00000244 <main>:
   void main()
   {
     244:	0f 93       	push	r16
     246:	1f 93       	push	r17
     248:	df 93       	push	r29
     24a:	cf 93       	push	r28
     24c:	cd b7       	in	r28, 0x3d	; 61
     24e:	de b7       	in	r29, 0x3e	; 62
     250:	cc 54       	subi	r28, 0x4C	; 76
     252:	d0 40       	sbci	r29, 0x00	; 0
     254:	0f b6       	in	r0, 0x3f	; 63
     256:	f8 94       	cli
     258:	de bf       	out	0x3e, r29	; 62
     25a:	0f be       	out	0x3f, r0	; 63
     25c:	cd bf       	out	0x3d, r28	; 61
      uint16_t r;

      Wait();
     25e:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>

      //Initialize the LCD Module
     // LCDInit(LS_NONE);

      Wait();
     262:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>

      //LCDClear();
      //LCDWriteString("Ultra Sonic");
      //LCDWriteStringXY(0,1,"Sensor Test");

      Wait();
     266:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>
      Wait();
     26a:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>
      Wait();
     26e:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>
      Wait();
     272:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>
      Wait();
     276:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>
      Wait();
     27a:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>

      while(1)
    {

         //Set Ultra Sonic Port as out
         US_DDR|=(1<<US_POS);
     27e:	aa e3       	ldi	r26, 0x3A	; 58
     280:	b0 e0       	ldi	r27, 0x00	; 0
     282:	ea e3       	ldi	r30, 0x3A	; 58
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	80 81       	ld	r24, Z
     288:	81 60       	ori	r24, 0x01	; 1
     28a:	8c 93       	st	X, r24
     28c:	fe 01       	movw	r30, r28
     28e:	eb 5b       	subi	r30, 0xBB	; 187
     290:	ff 4f       	sbci	r31, 0xFF	; 255
     292:	80 e0       	ldi	r24, 0x00	; 0
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	a0 e2       	ldi	r26, 0x20	; 32
     298:	b1 e4       	ldi	r27, 0x41	; 65
     29a:	80 83       	st	Z, r24
     29c:	91 83       	std	Z+1, r25	; 0x01
     29e:	a2 83       	std	Z+2, r26	; 0x02
     2a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     2a2:	8e 01       	movw	r16, r28
     2a4:	0f 5b       	subi	r16, 0xBF	; 191
     2a6:	1f 4f       	sbci	r17, 0xFF	; 255
     2a8:	fe 01       	movw	r30, r28
     2aa:	eb 5b       	subi	r30, 0xBB	; 187
     2ac:	ff 4f       	sbci	r31, 0xFF	; 255
     2ae:	2b ea       	ldi	r18, 0xAB	; 171
     2b0:	3a ea       	ldi	r19, 0xAA	; 170
     2b2:	4a ea       	ldi	r20, 0xAA	; 170
     2b4:	5e e3       	ldi	r21, 0x3E	; 62
     2b6:	60 81       	ld	r22, Z
     2b8:	71 81       	ldd	r23, Z+1	; 0x01
     2ba:	82 81       	ldd	r24, Z+2	; 0x02
     2bc:	93 81       	ldd	r25, Z+3	; 0x03
     2be:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     2c2:	dc 01       	movw	r26, r24
     2c4:	cb 01       	movw	r24, r22
     2c6:	f8 01       	movw	r30, r16
     2c8:	80 83       	st	Z, r24
     2ca:	91 83       	std	Z+1, r25	; 0x01
     2cc:	a2 83       	std	Z+2, r26	; 0x02
     2ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     2d0:	fe 01       	movw	r30, r28
     2d2:	ef 5b       	subi	r30, 0xBF	; 191
     2d4:	ff 4f       	sbci	r31, 0xFF	; 255
     2d6:	20 e0       	ldi	r18, 0x00	; 0
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	40 e8       	ldi	r20, 0x80	; 128
     2dc:	5f e3       	ldi	r21, 0x3F	; 63
     2de:	60 81       	ld	r22, Z
     2e0:	71 81       	ldd	r23, Z+1	; 0x01
     2e2:	82 81       	ldd	r24, Z+2	; 0x02
     2e4:	93 81       	ldd	r25, Z+3	; 0x03
     2e6:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <__ltsf2>
     2ea:	88 23       	and	r24, r24
     2ec:	34 f4       	brge	.+12     	; 0x2fa <main+0xb6>
		__ticks = 1;
     2ee:	81 e0       	ldi	r24, 0x01	; 1
     2f0:	fe 01       	movw	r30, r28
     2f2:	e0 5c       	subi	r30, 0xC0	; 192
     2f4:	ff 4f       	sbci	r31, 0xFF	; 255
     2f6:	80 83       	st	Z, r24
     2f8:	9d c0       	rjmp	.+314    	; 0x434 <main+0x1f0>
	else if (__tmp > 255)
     2fa:	fe 01       	movw	r30, r28
     2fc:	ef 5b       	subi	r30, 0xBF	; 191
     2fe:	ff 4f       	sbci	r31, 0xFF	; 255
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	4f e7       	ldi	r20, 0x7F	; 127
     306:	53 e4       	ldi	r21, 0x43	; 67
     308:	60 81       	ld	r22, Z
     30a:	71 81       	ldd	r23, Z+1	; 0x01
     30c:	82 81       	ldd	r24, Z+2	; 0x02
     30e:	93 81       	ldd	r25, Z+3	; 0x03
     310:	0e 94 70 07 	call	0xee0	; 0xee0 <__gtsf2>
     314:	18 16       	cp	r1, r24
     316:	0c f0       	brlt	.+2      	; 0x31a <main+0xd6>
     318:	7e c0       	rjmp	.+252    	; 0x416 <main+0x1d2>
	{
		_delay_ms(__us / 1000.0);
     31a:	fe 01       	movw	r30, r28
     31c:	eb 5b       	subi	r30, 0xBB	; 187
     31e:	ff 4f       	sbci	r31, 0xFF	; 255
     320:	20 e0       	ldi	r18, 0x00	; 0
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	4a e7       	ldi	r20, 0x7A	; 122
     326:	54 e4       	ldi	r21, 0x44	; 68
     328:	60 81       	ld	r22, Z
     32a:	71 81       	ldd	r23, Z+1	; 0x01
     32c:	82 81       	ldd	r24, Z+2	; 0x02
     32e:	93 81       	ldd	r25, Z+3	; 0x03
     330:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__divsf3>
     334:	dc 01       	movw	r26, r24
     336:	cb 01       	movw	r24, r22
     338:	8c af       	std	Y+60, r24	; 0x3c
     33a:	9d af       	std	Y+61, r25	; 0x3d
     33c:	ae af       	std	Y+62, r26	; 0x3e
     33e:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	4a e7       	ldi	r20, 0x7A	; 122
     346:	53 e4       	ldi	r21, 0x43	; 67
     348:	6c ad       	ldd	r22, Y+60	; 0x3c
     34a:	7d ad       	ldd	r23, Y+61	; 0x3d
     34c:	8e ad       	ldd	r24, Y+62	; 0x3e
     34e:	9f ad       	ldd	r25, Y+63	; 0x3f
     350:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     354:	dc 01       	movw	r26, r24
     356:	cb 01       	movw	r24, r22
     358:	88 af       	std	Y+56, r24	; 0x38
     35a:	99 af       	std	Y+57, r25	; 0x39
     35c:	aa af       	std	Y+58, r26	; 0x3a
     35e:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
     360:	20 e0       	ldi	r18, 0x00	; 0
     362:	30 e0       	ldi	r19, 0x00	; 0
     364:	40 e8       	ldi	r20, 0x80	; 128
     366:	5f e3       	ldi	r21, 0x3F	; 63
     368:	68 ad       	ldd	r22, Y+56	; 0x38
     36a:	79 ad       	ldd	r23, Y+57	; 0x39
     36c:	8a ad       	ldd	r24, Y+58	; 0x3a
     36e:	9b ad       	ldd	r25, Y+59	; 0x3b
     370:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <__ltsf2>
     374:	88 23       	and	r24, r24
     376:	2c f4       	brge	.+10     	; 0x382 <main+0x13e>
		__ticks = 1;
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	9f ab       	std	Y+55, r25	; 0x37
     37e:	8e ab       	std	Y+54, r24	; 0x36
     380:	3f c0       	rjmp	.+126    	; 0x400 <main+0x1bc>
	else if (__tmp > 65535)
     382:	20 e0       	ldi	r18, 0x00	; 0
     384:	3f ef       	ldi	r19, 0xFF	; 255
     386:	4f e7       	ldi	r20, 0x7F	; 127
     388:	57 e4       	ldi	r21, 0x47	; 71
     38a:	68 ad       	ldd	r22, Y+56	; 0x38
     38c:	79 ad       	ldd	r23, Y+57	; 0x39
     38e:	8a ad       	ldd	r24, Y+58	; 0x3a
     390:	9b ad       	ldd	r25, Y+59	; 0x3b
     392:	0e 94 70 07 	call	0xee0	; 0xee0 <__gtsf2>
     396:	18 16       	cp	r1, r24
     398:	4c f5       	brge	.+82     	; 0x3ec <main+0x1a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     39a:	20 e0       	ldi	r18, 0x00	; 0
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	40 e2       	ldi	r20, 0x20	; 32
     3a0:	51 e4       	ldi	r21, 0x41	; 65
     3a2:	6c ad       	ldd	r22, Y+60	; 0x3c
     3a4:	7d ad       	ldd	r23, Y+61	; 0x3d
     3a6:	8e ad       	ldd	r24, Y+62	; 0x3e
     3a8:	9f ad       	ldd	r25, Y+63	; 0x3f
     3aa:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     3ae:	dc 01       	movw	r26, r24
     3b0:	cb 01       	movw	r24, r22
     3b2:	bc 01       	movw	r22, r24
     3b4:	cd 01       	movw	r24, r26
     3b6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     3ba:	dc 01       	movw	r26, r24
     3bc:	cb 01       	movw	r24, r22
     3be:	9f ab       	std	Y+55, r25	; 0x37
     3c0:	8e ab       	std	Y+54, r24	; 0x36
     3c2:	0f c0       	rjmp	.+30     	; 0x3e2 <main+0x19e>
     3c4:	89 e1       	ldi	r24, 0x19	; 25
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	9d ab       	std	Y+53, r25	; 0x35
     3ca:	8c ab       	std	Y+52, r24	; 0x34
     3cc:	8c a9       	ldd	r24, Y+52	; 0x34
     3ce:	9d a9       	ldd	r25, Y+53	; 0x35
     3d0:	01 97       	sbiw	r24, 0x01	; 1
     3d2:	f1 f7       	brne	.-4      	; 0x3d0 <main+0x18c>
     3d4:	9d ab       	std	Y+53, r25	; 0x35
     3d6:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3d8:	8e a9       	ldd	r24, Y+54	; 0x36
     3da:	9f a9       	ldd	r25, Y+55	; 0x37
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	9f ab       	std	Y+55, r25	; 0x37
     3e0:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3e2:	8e a9       	ldd	r24, Y+54	; 0x36
     3e4:	9f a9       	ldd	r25, Y+55	; 0x37
     3e6:	00 97       	sbiw	r24, 0x00	; 0
     3e8:	69 f7       	brne	.-38     	; 0x3c4 <main+0x180>
     3ea:	2d c0       	rjmp	.+90     	; 0x446 <main+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ec:	68 ad       	ldd	r22, Y+56	; 0x38
     3ee:	79 ad       	ldd	r23, Y+57	; 0x39
     3f0:	8a ad       	ldd	r24, Y+58	; 0x3a
     3f2:	9b ad       	ldd	r25, Y+59	; 0x3b
     3f4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	9f ab       	std	Y+55, r25	; 0x37
     3fe:	8e ab       	std	Y+54, r24	; 0x36
     400:	8e a9       	ldd	r24, Y+54	; 0x36
     402:	9f a9       	ldd	r25, Y+55	; 0x37
     404:	9b ab       	std	Y+51, r25	; 0x33
     406:	8a ab       	std	Y+50, r24	; 0x32
     408:	8a a9       	ldd	r24, Y+50	; 0x32
     40a:	9b a9       	ldd	r25, Y+51	; 0x33
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <main+0x1c8>
     410:	9b ab       	std	Y+51, r25	; 0x33
     412:	8a ab       	std	Y+50, r24	; 0x32
     414:	18 c0       	rjmp	.+48     	; 0x446 <main+0x202>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     416:	fe 01       	movw	r30, r28
     418:	ef 5b       	subi	r30, 0xBF	; 191
     41a:	ff 4f       	sbci	r31, 0xFF	; 255
     41c:	60 81       	ld	r22, Z
     41e:	71 81       	ldd	r23, Z+1	; 0x01
     420:	82 81       	ldd	r24, Z+2	; 0x02
     422:	93 81       	ldd	r25, Z+3	; 0x03
     424:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     428:	dc 01       	movw	r26, r24
     42a:	cb 01       	movw	r24, r22
     42c:	fe 01       	movw	r30, r28
     42e:	e0 5c       	subi	r30, 0xC0	; 192
     430:	ff 4f       	sbci	r31, 0xFF	; 255
     432:	80 83       	st	Z, r24
     434:	fe 01       	movw	r30, r28
     436:	e0 5c       	subi	r30, 0xC0	; 192
     438:	ff 4f       	sbci	r31, 0xFF	; 255
     43a:	80 81       	ld	r24, Z
     43c:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     43e:	89 a9       	ldd	r24, Y+49	; 0x31
     440:	8a 95       	dec	r24
     442:	f1 f7       	brne	.-4      	; 0x440 <main+0x1fc>
     444:	89 ab       	std	Y+49, r24	; 0x31

         _delay_us(10);

         //Give the US pin a 15us High Pulse
         US_PORT|=(1<<US_POS);   //High
     446:	ab e3       	ldi	r26, 0x3B	; 59
     448:	b0 e0       	ldi	r27, 0x00	; 0
     44a:	eb e3       	ldi	r30, 0x3B	; 59
     44c:	f0 e0       	ldi	r31, 0x00	; 0
     44e:	80 81       	ld	r24, Z
     450:	81 60       	ori	r24, 0x01	; 1
     452:	8c 93       	st	X, r24
     454:	80 e0       	ldi	r24, 0x00	; 0
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	a0 e7       	ldi	r26, 0x70	; 112
     45a:	b1 e4       	ldi	r27, 0x41	; 65
     45c:	8d a7       	std	Y+45, r24	; 0x2d
     45e:	9e a7       	std	Y+46, r25	; 0x2e
     460:	af a7       	std	Y+47, r26	; 0x2f
     462:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     464:	2b ea       	ldi	r18, 0xAB	; 171
     466:	3a ea       	ldi	r19, 0xAA	; 170
     468:	4a ea       	ldi	r20, 0xAA	; 170
     46a:	5e e3       	ldi	r21, 0x3E	; 62
     46c:	6d a5       	ldd	r22, Y+45	; 0x2d
     46e:	7e a5       	ldd	r23, Y+46	; 0x2e
     470:	8f a5       	ldd	r24, Y+47	; 0x2f
     472:	98 a9       	ldd	r25, Y+48	; 0x30
     474:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     478:	dc 01       	movw	r26, r24
     47a:	cb 01       	movw	r24, r22
     47c:	89 a7       	std	Y+41, r24	; 0x29
     47e:	9a a7       	std	Y+42, r25	; 0x2a
     480:	ab a7       	std	Y+43, r26	; 0x2b
     482:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	40 e8       	ldi	r20, 0x80	; 128
     48a:	5f e3       	ldi	r21, 0x3F	; 63
     48c:	69 a5       	ldd	r22, Y+41	; 0x29
     48e:	7a a5       	ldd	r23, Y+42	; 0x2a
     490:	8b a5       	ldd	r24, Y+43	; 0x2b
     492:	9c a5       	ldd	r25, Y+44	; 0x2c
     494:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <__ltsf2>
     498:	88 23       	and	r24, r24
     49a:	1c f4       	brge	.+6      	; 0x4a2 <__stack+0x43>
		__ticks = 1;
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	88 a7       	std	Y+40, r24	; 0x28
     4a0:	91 c0       	rjmp	.+290    	; 0x5c4 <__stack+0x165>
	else if (__tmp > 255)
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	4f e7       	ldi	r20, 0x7F	; 127
     4a8:	53 e4       	ldi	r21, 0x43	; 67
     4aa:	69 a5       	ldd	r22, Y+41	; 0x29
     4ac:	7a a5       	ldd	r23, Y+42	; 0x2a
     4ae:	8b a5       	ldd	r24, Y+43	; 0x2b
     4b0:	9c a5       	ldd	r25, Y+44	; 0x2c
     4b2:	0e 94 70 07 	call	0xee0	; 0xee0 <__gtsf2>
     4b6:	18 16       	cp	r1, r24
     4b8:	0c f0       	brlt	.+2      	; 0x4bc <__stack+0x5d>
     4ba:	7b c0       	rjmp	.+246    	; 0x5b2 <__stack+0x153>
	{
		_delay_ms(__us / 1000.0);
     4bc:	20 e0       	ldi	r18, 0x00	; 0
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	4a e7       	ldi	r20, 0x7A	; 122
     4c2:	54 e4       	ldi	r21, 0x44	; 68
     4c4:	6d a5       	ldd	r22, Y+45	; 0x2d
     4c6:	7e a5       	ldd	r23, Y+46	; 0x2e
     4c8:	8f a5       	ldd	r24, Y+47	; 0x2f
     4ca:	98 a9       	ldd	r25, Y+48	; 0x30
     4cc:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__divsf3>
     4d0:	dc 01       	movw	r26, r24
     4d2:	cb 01       	movw	r24, r22
     4d4:	8c a3       	std	Y+36, r24	; 0x24
     4d6:	9d a3       	std	Y+37, r25	; 0x25
     4d8:	ae a3       	std	Y+38, r26	; 0x26
     4da:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	4a e7       	ldi	r20, 0x7A	; 122
     4e2:	53 e4       	ldi	r21, 0x43	; 67
     4e4:	6c a1       	ldd	r22, Y+36	; 0x24
     4e6:	7d a1       	ldd	r23, Y+37	; 0x25
     4e8:	8e a1       	ldd	r24, Y+38	; 0x26
     4ea:	9f a1       	ldd	r25, Y+39	; 0x27
     4ec:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     4f0:	dc 01       	movw	r26, r24
     4f2:	cb 01       	movw	r24, r22
     4f4:	88 a3       	std	Y+32, r24	; 0x20
     4f6:	99 a3       	std	Y+33, r25	; 0x21
     4f8:	aa a3       	std	Y+34, r26	; 0x22
     4fa:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
     4fc:	20 e0       	ldi	r18, 0x00	; 0
     4fe:	30 e0       	ldi	r19, 0x00	; 0
     500:	40 e8       	ldi	r20, 0x80	; 128
     502:	5f e3       	ldi	r21, 0x3F	; 63
     504:	68 a1       	ldd	r22, Y+32	; 0x20
     506:	79 a1       	ldd	r23, Y+33	; 0x21
     508:	8a a1       	ldd	r24, Y+34	; 0x22
     50a:	9b a1       	ldd	r25, Y+35	; 0x23
     50c:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <__ltsf2>
     510:	88 23       	and	r24, r24
     512:	2c f4       	brge	.+10     	; 0x51e <__stack+0xbf>
		__ticks = 1;
     514:	81 e0       	ldi	r24, 0x01	; 1
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	9f 8f       	std	Y+31, r25	; 0x1f
     51a:	8e 8f       	std	Y+30, r24	; 0x1e
     51c:	3f c0       	rjmp	.+126    	; 0x59c <__stack+0x13d>
	else if (__tmp > 65535)
     51e:	20 e0       	ldi	r18, 0x00	; 0
     520:	3f ef       	ldi	r19, 0xFF	; 255
     522:	4f e7       	ldi	r20, 0x7F	; 127
     524:	57 e4       	ldi	r21, 0x47	; 71
     526:	68 a1       	ldd	r22, Y+32	; 0x20
     528:	79 a1       	ldd	r23, Y+33	; 0x21
     52a:	8a a1       	ldd	r24, Y+34	; 0x22
     52c:	9b a1       	ldd	r25, Y+35	; 0x23
     52e:	0e 94 70 07 	call	0xee0	; 0xee0 <__gtsf2>
     532:	18 16       	cp	r1, r24
     534:	4c f5       	brge	.+82     	; 0x588 <__stack+0x129>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	40 e2       	ldi	r20, 0x20	; 32
     53c:	51 e4       	ldi	r21, 0x41	; 65
     53e:	6c a1       	ldd	r22, Y+36	; 0x24
     540:	7d a1       	ldd	r23, Y+37	; 0x25
     542:	8e a1       	ldd	r24, Y+38	; 0x26
     544:	9f a1       	ldd	r25, Y+39	; 0x27
     546:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     54a:	dc 01       	movw	r26, r24
     54c:	cb 01       	movw	r24, r22
     54e:	bc 01       	movw	r22, r24
     550:	cd 01       	movw	r24, r26
     552:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     556:	dc 01       	movw	r26, r24
     558:	cb 01       	movw	r24, r22
     55a:	9f 8f       	std	Y+31, r25	; 0x1f
     55c:	8e 8f       	std	Y+30, r24	; 0x1e
     55e:	0f c0       	rjmp	.+30     	; 0x57e <__stack+0x11f>
     560:	89 e1       	ldi	r24, 0x19	; 25
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	9d 8f       	std	Y+29, r25	; 0x1d
     566:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     568:	8c 8d       	ldd	r24, Y+28	; 0x1c
     56a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     56c:	01 97       	sbiw	r24, 0x01	; 1
     56e:	f1 f7       	brne	.-4      	; 0x56c <__stack+0x10d>
     570:	9d 8f       	std	Y+29, r25	; 0x1d
     572:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     574:	8e 8d       	ldd	r24, Y+30	; 0x1e
     576:	9f 8d       	ldd	r25, Y+31	; 0x1f
     578:	01 97       	sbiw	r24, 0x01	; 1
     57a:	9f 8f       	std	Y+31, r25	; 0x1f
     57c:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     57e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     580:	9f 8d       	ldd	r25, Y+31	; 0x1f
     582:	00 97       	sbiw	r24, 0x00	; 0
     584:	69 f7       	brne	.-38     	; 0x560 <__stack+0x101>
     586:	24 c0       	rjmp	.+72     	; 0x5d0 <__stack+0x171>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     588:	68 a1       	ldd	r22, Y+32	; 0x20
     58a:	79 a1       	ldd	r23, Y+33	; 0x21
     58c:	8a a1       	ldd	r24, Y+34	; 0x22
     58e:	9b a1       	ldd	r25, Y+35	; 0x23
     590:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     594:	dc 01       	movw	r26, r24
     596:	cb 01       	movw	r24, r22
     598:	9f 8f       	std	Y+31, r25	; 0x1f
     59a:	8e 8f       	std	Y+30, r24	; 0x1e
     59c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     59e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     5a0:	9b 8f       	std	Y+27, r25	; 0x1b
     5a2:	8a 8f       	std	Y+26, r24	; 0x1a
     5a4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     5a6:	9b 8d       	ldd	r25, Y+27	; 0x1b
     5a8:	01 97       	sbiw	r24, 0x01	; 1
     5aa:	f1 f7       	brne	.-4      	; 0x5a8 <__stack+0x149>
     5ac:	9b 8f       	std	Y+27, r25	; 0x1b
     5ae:	8a 8f       	std	Y+26, r24	; 0x1a
     5b0:	0f c0       	rjmp	.+30     	; 0x5d0 <__stack+0x171>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     5b2:	69 a5       	ldd	r22, Y+41	; 0x29
     5b4:	7a a5       	ldd	r23, Y+42	; 0x2a
     5b6:	8b a5       	ldd	r24, Y+43	; 0x2b
     5b8:	9c a5       	ldd	r25, Y+44	; 0x2c
     5ba:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     5be:	dc 01       	movw	r26, r24
     5c0:	cb 01       	movw	r24, r22
     5c2:	88 a7       	std	Y+40, r24	; 0x28
     5c4:	88 a5       	ldd	r24, Y+40	; 0x28
     5c6:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     5c8:	89 8d       	ldd	r24, Y+25	; 0x19
     5ca:	8a 95       	dec	r24
     5cc:	f1 f7       	brne	.-4      	; 0x5ca <__stack+0x16b>
     5ce:	89 8f       	std	Y+25, r24	; 0x19

        _delay_us(15);

        US_PORT&=(~(1<<US_POS));//Low
     5d0:	ab e3       	ldi	r26, 0x3B	; 59
     5d2:	b0 e0       	ldi	r27, 0x00	; 0
     5d4:	eb e3       	ldi	r30, 0x3B	; 59
     5d6:	f0 e0       	ldi	r31, 0x00	; 0
     5d8:	80 81       	ld	r24, Z
     5da:	8e 7f       	andi	r24, 0xFE	; 254
     5dc:	8c 93       	st	X, r24
     5de:	80 e0       	ldi	r24, 0x00	; 0
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	a0 ea       	ldi	r26, 0xA0	; 160
     5e4:	b1 e4       	ldi	r27, 0x41	; 65
     5e6:	8d 8b       	std	Y+21, r24	; 0x15
     5e8:	9e 8b       	std	Y+22, r25	; 0x16
     5ea:	af 8b       	std	Y+23, r26	; 0x17
     5ec:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     5ee:	2b ea       	ldi	r18, 0xAB	; 171
     5f0:	3a ea       	ldi	r19, 0xAA	; 170
     5f2:	4a ea       	ldi	r20, 0xAA	; 170
     5f4:	5e e3       	ldi	r21, 0x3E	; 62
     5f6:	6d 89       	ldd	r22, Y+21	; 0x15
     5f8:	7e 89       	ldd	r23, Y+22	; 0x16
     5fa:	8f 89       	ldd	r24, Y+23	; 0x17
     5fc:	98 8d       	ldd	r25, Y+24	; 0x18
     5fe:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     602:	dc 01       	movw	r26, r24
     604:	cb 01       	movw	r24, r22
     606:	89 8b       	std	Y+17, r24	; 0x11
     608:	9a 8b       	std	Y+18, r25	; 0x12
     60a:	ab 8b       	std	Y+19, r26	; 0x13
     60c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	40 e8       	ldi	r20, 0x80	; 128
     614:	5f e3       	ldi	r21, 0x3F	; 63
     616:	69 89       	ldd	r22, Y+17	; 0x11
     618:	7a 89       	ldd	r23, Y+18	; 0x12
     61a:	8b 89       	ldd	r24, Y+19	; 0x13
     61c:	9c 89       	ldd	r25, Y+20	; 0x14
     61e:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <__ltsf2>
     622:	88 23       	and	r24, r24
     624:	1c f4       	brge	.+6      	; 0x62c <__stack+0x1cd>
		__ticks = 1;
     626:	81 e0       	ldi	r24, 0x01	; 1
     628:	88 8b       	std	Y+16, r24	; 0x10
     62a:	91 c0       	rjmp	.+290    	; 0x74e <__stack+0x2ef>
	else if (__tmp > 255)
     62c:	20 e0       	ldi	r18, 0x00	; 0
     62e:	30 e0       	ldi	r19, 0x00	; 0
     630:	4f e7       	ldi	r20, 0x7F	; 127
     632:	53 e4       	ldi	r21, 0x43	; 67
     634:	69 89       	ldd	r22, Y+17	; 0x11
     636:	7a 89       	ldd	r23, Y+18	; 0x12
     638:	8b 89       	ldd	r24, Y+19	; 0x13
     63a:	9c 89       	ldd	r25, Y+20	; 0x14
     63c:	0e 94 70 07 	call	0xee0	; 0xee0 <__gtsf2>
     640:	18 16       	cp	r1, r24
     642:	0c f0       	brlt	.+2      	; 0x646 <__stack+0x1e7>
     644:	7b c0       	rjmp	.+246    	; 0x73c <__stack+0x2dd>
	{
		_delay_ms(__us / 1000.0);
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	4a e7       	ldi	r20, 0x7A	; 122
     64c:	54 e4       	ldi	r21, 0x44	; 68
     64e:	6d 89       	ldd	r22, Y+21	; 0x15
     650:	7e 89       	ldd	r23, Y+22	; 0x16
     652:	8f 89       	ldd	r24, Y+23	; 0x17
     654:	98 8d       	ldd	r25, Y+24	; 0x18
     656:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__divsf3>
     65a:	dc 01       	movw	r26, r24
     65c:	cb 01       	movw	r24, r22
     65e:	8c 87       	std	Y+12, r24	; 0x0c
     660:	9d 87       	std	Y+13, r25	; 0x0d
     662:	ae 87       	std	Y+14, r26	; 0x0e
     664:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     666:	20 e0       	ldi	r18, 0x00	; 0
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	4a e7       	ldi	r20, 0x7A	; 122
     66c:	53 e4       	ldi	r21, 0x43	; 67
     66e:	6c 85       	ldd	r22, Y+12	; 0x0c
     670:	7d 85       	ldd	r23, Y+13	; 0x0d
     672:	8e 85       	ldd	r24, Y+14	; 0x0e
     674:	9f 85       	ldd	r25, Y+15	; 0x0f
     676:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     67a:	dc 01       	movw	r26, r24
     67c:	cb 01       	movw	r24, r22
     67e:	88 87       	std	Y+8, r24	; 0x08
     680:	99 87       	std	Y+9, r25	; 0x09
     682:	aa 87       	std	Y+10, r26	; 0x0a
     684:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	40 e8       	ldi	r20, 0x80	; 128
     68c:	5f e3       	ldi	r21, 0x3F	; 63
     68e:	68 85       	ldd	r22, Y+8	; 0x08
     690:	79 85       	ldd	r23, Y+9	; 0x09
     692:	8a 85       	ldd	r24, Y+10	; 0x0a
     694:	9b 85       	ldd	r25, Y+11	; 0x0b
     696:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <__ltsf2>
     69a:	88 23       	and	r24, r24
     69c:	2c f4       	brge	.+10     	; 0x6a8 <__stack+0x249>
		__ticks = 1;
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	9f 83       	std	Y+7, r25	; 0x07
     6a4:	8e 83       	std	Y+6, r24	; 0x06
     6a6:	3f c0       	rjmp	.+126    	; 0x726 <__stack+0x2c7>
	else if (__tmp > 65535)
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	3f ef       	ldi	r19, 0xFF	; 255
     6ac:	4f e7       	ldi	r20, 0x7F	; 127
     6ae:	57 e4       	ldi	r21, 0x47	; 71
     6b0:	68 85       	ldd	r22, Y+8	; 0x08
     6b2:	79 85       	ldd	r23, Y+9	; 0x09
     6b4:	8a 85       	ldd	r24, Y+10	; 0x0a
     6b6:	9b 85       	ldd	r25, Y+11	; 0x0b
     6b8:	0e 94 70 07 	call	0xee0	; 0xee0 <__gtsf2>
     6bc:	18 16       	cp	r1, r24
     6be:	4c f5       	brge	.+82     	; 0x712 <__stack+0x2b3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6c0:	20 e0       	ldi	r18, 0x00	; 0
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e2       	ldi	r20, 0x20	; 32
     6c6:	51 e4       	ldi	r21, 0x41	; 65
     6c8:	6c 85       	ldd	r22, Y+12	; 0x0c
     6ca:	7d 85       	ldd	r23, Y+13	; 0x0d
     6cc:	8e 85       	ldd	r24, Y+14	; 0x0e
     6ce:	9f 85       	ldd	r25, Y+15	; 0x0f
     6d0:	0e 94 cc 05 	call	0xb98	; 0xb98 <__mulsf3>
     6d4:	dc 01       	movw	r26, r24
     6d6:	cb 01       	movw	r24, r22
     6d8:	bc 01       	movw	r22, r24
     6da:	cd 01       	movw	r24, r26
     6dc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     6e0:	dc 01       	movw	r26, r24
     6e2:	cb 01       	movw	r24, r22
     6e4:	9f 83       	std	Y+7, r25	; 0x07
     6e6:	8e 83       	std	Y+6, r24	; 0x06
     6e8:	0f c0       	rjmp	.+30     	; 0x708 <__stack+0x2a9>
     6ea:	89 e1       	ldi	r24, 0x19	; 25
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	9d 83       	std	Y+5, r25	; 0x05
     6f0:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     6f2:	8c 81       	ldd	r24, Y+4	; 0x04
     6f4:	9d 81       	ldd	r25, Y+5	; 0x05
     6f6:	01 97       	sbiw	r24, 0x01	; 1
     6f8:	f1 f7       	brne	.-4      	; 0x6f6 <__stack+0x297>
     6fa:	9d 83       	std	Y+5, r25	; 0x05
     6fc:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6fe:	8e 81       	ldd	r24, Y+6	; 0x06
     700:	9f 81       	ldd	r25, Y+7	; 0x07
     702:	01 97       	sbiw	r24, 0x01	; 1
     704:	9f 83       	std	Y+7, r25	; 0x07
     706:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     708:	8e 81       	ldd	r24, Y+6	; 0x06
     70a:	9f 81       	ldd	r25, Y+7	; 0x07
     70c:	00 97       	sbiw	r24, 0x00	; 0
     70e:	69 f7       	brne	.-38     	; 0x6ea <__stack+0x28b>
     710:	24 c0       	rjmp	.+72     	; 0x75a <__stack+0x2fb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     712:	68 85       	ldd	r22, Y+8	; 0x08
     714:	79 85       	ldd	r23, Y+9	; 0x09
     716:	8a 85       	ldd	r24, Y+10	; 0x0a
     718:	9b 85       	ldd	r25, Y+11	; 0x0b
     71a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     71e:	dc 01       	movw	r26, r24
     720:	cb 01       	movw	r24, r22
     722:	9f 83       	std	Y+7, r25	; 0x07
     724:	8e 83       	std	Y+6, r24	; 0x06
     726:	8e 81       	ldd	r24, Y+6	; 0x06
     728:	9f 81       	ldd	r25, Y+7	; 0x07
     72a:	9b 83       	std	Y+3, r25	; 0x03
     72c:	8a 83       	std	Y+2, r24	; 0x02
     72e:	8a 81       	ldd	r24, Y+2	; 0x02
     730:	9b 81       	ldd	r25, Y+3	; 0x03
     732:	01 97       	sbiw	r24, 0x01	; 1
     734:	f1 f7       	brne	.-4      	; 0x732 <__stack+0x2d3>
     736:	9b 83       	std	Y+3, r25	; 0x03
     738:	8a 83       	std	Y+2, r24	; 0x02
     73a:	0f c0       	rjmp	.+30     	; 0x75a <__stack+0x2fb>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     73c:	69 89       	ldd	r22, Y+17	; 0x11
     73e:	7a 89       	ldd	r23, Y+18	; 0x12
     740:	8b 89       	ldd	r24, Y+19	; 0x13
     742:	9c 89       	ldd	r25, Y+20	; 0x14
     744:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixunssfsi>
     748:	dc 01       	movw	r26, r24
     74a:	cb 01       	movw	r24, r22
     74c:	88 8b       	std	Y+16, r24	; 0x10
     74e:	88 89       	ldd	r24, Y+16	; 0x10
     750:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     752:	89 81       	ldd	r24, Y+1	; 0x01
     754:	8a 95       	dec	r24
     756:	f1 f7       	brne	.-4      	; 0x754 <__stack+0x2f5>
     758:	89 83       	std	Y+1, r24	; 0x01

         _delay_us(20);

         //Now make the pin input
         US_DDR&=(~(1<<US_POS));
     75a:	aa e3       	ldi	r26, 0x3A	; 58
     75c:	b0 e0       	ldi	r27, 0x00	; 0
     75e:	ea e3       	ldi	r30, 0x3A	; 58
     760:	f0 e0       	ldi	r31, 0x00	; 0
     762:	80 81       	ld	r24, Z
     764:	8e 7f       	andi	r24, 0xFE	; 254
     766:	8c 93       	st	X, r24

         //Measure the width of pulse
         r=getPulseWidth();
     768:	0e 94 49 00 	call	0x92	; 0x92 <getPulseWidth>
     76c:	fe 01       	movw	r30, r28
     76e:	e5 5b       	subi	r30, 0xB5	; 181
     770:	ff 4f       	sbci	r31, 0xFF	; 255
     772:	91 83       	std	Z+1, r25	; 0x01
     774:	80 83       	st	Z, r24
         //Handle Errors
         if(r==US_ERROR)
     776:	fe 01       	movw	r30, r28
     778:	e5 5b       	subi	r30, 0xB5	; 181
     77a:	ff 4f       	sbci	r31, 0xFF	; 255
     77c:	80 81       	ld	r24, Z
     77e:	91 81       	ldd	r25, Z+1	; 0x01
     780:	ff ef       	ldi	r31, 0xFF	; 255
     782:	8f 3f       	cpi	r24, 0xFF	; 255
     784:	9f 07       	cpc	r25, r31
     786:	09 f4       	brne	.+2      	; 0x78a <__stack+0x32b>
     788:	7a cd       	rjmp	.-1292   	; 0x27e <main+0x3a>
         {
           // LCDWriteStringXY(0,0,"Error !");
         }
         else  if(r==US_NO_OBSTACLE)
     78a:	fe 01       	movw	r30, r28
     78c:	e5 5b       	subi	r30, 0xB5	; 181
     78e:	ff 4f       	sbci	r31, 0xFF	; 255
     790:	80 81       	ld	r24, Z
     792:	91 81       	ldd	r25, Z+1	; 0x01
     794:	2f ef       	ldi	r18, 0xFF	; 255
     796:	8e 3f       	cpi	r24, 0xFE	; 254
     798:	92 07       	cpc	r25, r18
     79a:	09 f4       	brne	.+2      	; 0x79e <__stack+0x33f>
     79c:	70 cd       	rjmp	.-1312   	; 0x27e <main+0x3a>
         else
         {

            int d;

            d=(r/58.0); //Convert to cm
     79e:	fe 01       	movw	r30, r28
     7a0:	e5 5b       	subi	r30, 0xB5	; 181
     7a2:	ff 4f       	sbci	r31, 0xFF	; 255
     7a4:	80 81       	ld	r24, Z
     7a6:	91 81       	ldd	r25, Z+1	; 0x01
     7a8:	cc 01       	movw	r24, r24
     7aa:	a0 e0       	ldi	r26, 0x00	; 0
     7ac:	b0 e0       	ldi	r27, 0x00	; 0
     7ae:	bc 01       	movw	r22, r24
     7b0:	cd 01       	movw	r24, r26
     7b2:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__floatunsisf>
     7b6:	dc 01       	movw	r26, r24
     7b8:	cb 01       	movw	r24, r22
     7ba:	20 e0       	ldi	r18, 0x00	; 0
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	48 e6       	ldi	r20, 0x68	; 104
     7c0:	52 e4       	ldi	r21, 0x42	; 66
     7c2:	bc 01       	movw	r22, r24
     7c4:	cd 01       	movw	r24, r26
     7c6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__divsf3>
     7ca:	dc 01       	movw	r26, r24
     7cc:	cb 01       	movw	r24, r22
     7ce:	8e 01       	movw	r16, r28
     7d0:	07 5b       	subi	r16, 0xB7	; 183
     7d2:	1f 4f       	sbci	r17, 0xFF	; 255
     7d4:	bc 01       	movw	r22, r24
     7d6:	cd 01       	movw	r24, r26
     7d8:	0e 94 00 08 	call	0x1000	; 0x1000 <__fixsfsi>
     7dc:	dc 01       	movw	r26, r24
     7de:	cb 01       	movw	r24, r22
     7e0:	f8 01       	movw	r30, r16
     7e2:	91 83       	std	Z+1, r25	; 0x01
     7e4:	80 83       	st	Z, r24

           // LCDWriteIntXY(0,0,d,4);
            //LCDWriteString(" cm");
            Wait();
     7e6:	0e 94 06 01 	call	0x20c	; 0x20c <Wait>
     7ea:	49 cd       	rjmp	.-1390   	; 0x27e <main+0x3a>

000007ec <__fixunssfsi>:
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	7b 01       	movw	r14, r22
     7f6:	8c 01       	movw	r16, r24
     7f8:	20 e0       	ldi	r18, 0x00	; 0
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	5f e4       	ldi	r21, 0x4F	; 79
     800:	0e 94 a0 07 	call	0xf40	; 0xf40 <__gesf2>
     804:	88 23       	and	r24, r24
     806:	8c f0       	brlt	.+34     	; 0x82a <__fixunssfsi+0x3e>
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	40 e0       	ldi	r20, 0x00	; 0
     80e:	5f e4       	ldi	r21, 0x4F	; 79
     810:	c8 01       	movw	r24, r16
     812:	b7 01       	movw	r22, r14
     814:	0e 94 6e 05 	call	0xadc	; 0xadc <__subsf3>
     818:	0e 94 00 08 	call	0x1000	; 0x1000 <__fixsfsi>
     81c:	9b 01       	movw	r18, r22
     81e:	ac 01       	movw	r20, r24
     820:	20 50       	subi	r18, 0x00	; 0
     822:	30 40       	sbci	r19, 0x00	; 0
     824:	40 40       	sbci	r20, 0x00	; 0
     826:	50 48       	sbci	r21, 0x80	; 128
     828:	06 c0       	rjmp	.+12     	; 0x836 <__fixunssfsi+0x4a>
     82a:	c8 01       	movw	r24, r16
     82c:	b7 01       	movw	r22, r14
     82e:	0e 94 00 08 	call	0x1000	; 0x1000 <__fixsfsi>
     832:	9b 01       	movw	r18, r22
     834:	ac 01       	movw	r20, r24
     836:	b9 01       	movw	r22, r18
     838:	ca 01       	movw	r24, r20
     83a:	1f 91       	pop	r17
     83c:	0f 91       	pop	r16
     83e:	ff 90       	pop	r15
     840:	ef 90       	pop	r14
     842:	08 95       	ret

00000844 <_fpadd_parts>:
     844:	a0 e0       	ldi	r26, 0x00	; 0
     846:	b0 e0       	ldi	r27, 0x00	; 0
     848:	e8 e2       	ldi	r30, 0x28	; 40
     84a:	f4 e0       	ldi	r31, 0x04	; 4
     84c:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__prologue_saves__>
     850:	dc 01       	movw	r26, r24
     852:	2b 01       	movw	r4, r22
     854:	fa 01       	movw	r30, r20
     856:	9c 91       	ld	r25, X
     858:	92 30       	cpi	r25, 0x02	; 2
     85a:	08 f4       	brcc	.+2      	; 0x85e <_fpadd_parts+0x1a>
     85c:	39 c1       	rjmp	.+626    	; 0xad0 <_fpadd_parts+0x28c>
     85e:	eb 01       	movw	r28, r22
     860:	88 81       	ld	r24, Y
     862:	82 30       	cpi	r24, 0x02	; 2
     864:	08 f4       	brcc	.+2      	; 0x868 <_fpadd_parts+0x24>
     866:	33 c1       	rjmp	.+614    	; 0xace <_fpadd_parts+0x28a>
     868:	94 30       	cpi	r25, 0x04	; 4
     86a:	69 f4       	brne	.+26     	; 0x886 <_fpadd_parts+0x42>
     86c:	84 30       	cpi	r24, 0x04	; 4
     86e:	09 f0       	breq	.+2      	; 0x872 <_fpadd_parts+0x2e>
     870:	2f c1       	rjmp	.+606    	; 0xad0 <_fpadd_parts+0x28c>
     872:	11 96       	adiw	r26, 0x01	; 1
     874:	9c 91       	ld	r25, X
     876:	11 97       	sbiw	r26, 0x01	; 1
     878:	89 81       	ldd	r24, Y+1	; 0x01
     87a:	98 17       	cp	r25, r24
     87c:	09 f4       	brne	.+2      	; 0x880 <_fpadd_parts+0x3c>
     87e:	28 c1       	rjmp	.+592    	; 0xad0 <_fpadd_parts+0x28c>
     880:	a0 e6       	ldi	r26, 0x60	; 96
     882:	b0 e0       	ldi	r27, 0x00	; 0
     884:	25 c1       	rjmp	.+586    	; 0xad0 <_fpadd_parts+0x28c>
     886:	84 30       	cpi	r24, 0x04	; 4
     888:	09 f4       	brne	.+2      	; 0x88c <_fpadd_parts+0x48>
     88a:	21 c1       	rjmp	.+578    	; 0xace <_fpadd_parts+0x28a>
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	a9 f4       	brne	.+42     	; 0x8ba <_fpadd_parts+0x76>
     890:	92 30       	cpi	r25, 0x02	; 2
     892:	09 f0       	breq	.+2      	; 0x896 <_fpadd_parts+0x52>
     894:	1d c1       	rjmp	.+570    	; 0xad0 <_fpadd_parts+0x28c>
     896:	9a 01       	movw	r18, r20
     898:	ad 01       	movw	r20, r26
     89a:	88 e0       	ldi	r24, 0x08	; 8
     89c:	ea 01       	movw	r28, r20
     89e:	09 90       	ld	r0, Y+
     8a0:	ae 01       	movw	r20, r28
     8a2:	e9 01       	movw	r28, r18
     8a4:	09 92       	st	Y+, r0
     8a6:	9e 01       	movw	r18, r28
     8a8:	81 50       	subi	r24, 0x01	; 1
     8aa:	c1 f7       	brne	.-16     	; 0x89c <_fpadd_parts+0x58>
     8ac:	e2 01       	movw	r28, r4
     8ae:	89 81       	ldd	r24, Y+1	; 0x01
     8b0:	11 96       	adiw	r26, 0x01	; 1
     8b2:	9c 91       	ld	r25, X
     8b4:	89 23       	and	r24, r25
     8b6:	81 83       	std	Z+1, r24	; 0x01
     8b8:	08 c1       	rjmp	.+528    	; 0xaca <_fpadd_parts+0x286>
     8ba:	92 30       	cpi	r25, 0x02	; 2
     8bc:	09 f4       	brne	.+2      	; 0x8c0 <_fpadd_parts+0x7c>
     8be:	07 c1       	rjmp	.+526    	; 0xace <_fpadd_parts+0x28a>
     8c0:	12 96       	adiw	r26, 0x02	; 2
     8c2:	2d 90       	ld	r2, X+
     8c4:	3c 90       	ld	r3, X
     8c6:	13 97       	sbiw	r26, 0x03	; 3
     8c8:	eb 01       	movw	r28, r22
     8ca:	8a 81       	ldd	r24, Y+2	; 0x02
     8cc:	9b 81       	ldd	r25, Y+3	; 0x03
     8ce:	14 96       	adiw	r26, 0x04	; 4
     8d0:	ad 90       	ld	r10, X+
     8d2:	bd 90       	ld	r11, X+
     8d4:	cd 90       	ld	r12, X+
     8d6:	dc 90       	ld	r13, X
     8d8:	17 97       	sbiw	r26, 0x07	; 7
     8da:	ec 80       	ldd	r14, Y+4	; 0x04
     8dc:	fd 80       	ldd	r15, Y+5	; 0x05
     8de:	0e 81       	ldd	r16, Y+6	; 0x06
     8e0:	1f 81       	ldd	r17, Y+7	; 0x07
     8e2:	91 01       	movw	r18, r2
     8e4:	28 1b       	sub	r18, r24
     8e6:	39 0b       	sbc	r19, r25
     8e8:	b9 01       	movw	r22, r18
     8ea:	37 ff       	sbrs	r19, 7
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <_fpadd_parts+0xb2>
     8ee:	66 27       	eor	r22, r22
     8f0:	77 27       	eor	r23, r23
     8f2:	62 1b       	sub	r22, r18
     8f4:	73 0b       	sbc	r23, r19
     8f6:	60 32       	cpi	r22, 0x20	; 32
     8f8:	71 05       	cpc	r23, r1
     8fa:	0c f0       	brlt	.+2      	; 0x8fe <_fpadd_parts+0xba>
     8fc:	61 c0       	rjmp	.+194    	; 0x9c0 <_fpadd_parts+0x17c>
     8fe:	12 16       	cp	r1, r18
     900:	13 06       	cpc	r1, r19
     902:	6c f5       	brge	.+90     	; 0x95e <_fpadd_parts+0x11a>
     904:	37 01       	movw	r6, r14
     906:	48 01       	movw	r8, r16
     908:	06 2e       	mov	r0, r22
     90a:	04 c0       	rjmp	.+8      	; 0x914 <_fpadd_parts+0xd0>
     90c:	96 94       	lsr	r9
     90e:	87 94       	ror	r8
     910:	77 94       	ror	r7
     912:	67 94       	ror	r6
     914:	0a 94       	dec	r0
     916:	d2 f7       	brpl	.-12     	; 0x90c <_fpadd_parts+0xc8>
     918:	21 e0       	ldi	r18, 0x01	; 1
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	40 e0       	ldi	r20, 0x00	; 0
     91e:	50 e0       	ldi	r21, 0x00	; 0
     920:	04 c0       	rjmp	.+8      	; 0x92a <_fpadd_parts+0xe6>
     922:	22 0f       	add	r18, r18
     924:	33 1f       	adc	r19, r19
     926:	44 1f       	adc	r20, r20
     928:	55 1f       	adc	r21, r21
     92a:	6a 95       	dec	r22
     92c:	d2 f7       	brpl	.-12     	; 0x922 <_fpadd_parts+0xde>
     92e:	21 50       	subi	r18, 0x01	; 1
     930:	30 40       	sbci	r19, 0x00	; 0
     932:	40 40       	sbci	r20, 0x00	; 0
     934:	50 40       	sbci	r21, 0x00	; 0
     936:	2e 21       	and	r18, r14
     938:	3f 21       	and	r19, r15
     93a:	40 23       	and	r20, r16
     93c:	51 23       	and	r21, r17
     93e:	21 15       	cp	r18, r1
     940:	31 05       	cpc	r19, r1
     942:	41 05       	cpc	r20, r1
     944:	51 05       	cpc	r21, r1
     946:	21 f0       	breq	.+8      	; 0x950 <_fpadd_parts+0x10c>
     948:	21 e0       	ldi	r18, 0x01	; 1
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	40 e0       	ldi	r20, 0x00	; 0
     94e:	50 e0       	ldi	r21, 0x00	; 0
     950:	79 01       	movw	r14, r18
     952:	8a 01       	movw	r16, r20
     954:	e6 28       	or	r14, r6
     956:	f7 28       	or	r15, r7
     958:	08 29       	or	r16, r8
     95a:	19 29       	or	r17, r9
     95c:	3c c0       	rjmp	.+120    	; 0x9d6 <_fpadd_parts+0x192>
     95e:	23 2b       	or	r18, r19
     960:	d1 f1       	breq	.+116    	; 0x9d6 <_fpadd_parts+0x192>
     962:	26 0e       	add	r2, r22
     964:	37 1e       	adc	r3, r23
     966:	35 01       	movw	r6, r10
     968:	46 01       	movw	r8, r12
     96a:	06 2e       	mov	r0, r22
     96c:	04 c0       	rjmp	.+8      	; 0x976 <_fpadd_parts+0x132>
     96e:	96 94       	lsr	r9
     970:	87 94       	ror	r8
     972:	77 94       	ror	r7
     974:	67 94       	ror	r6
     976:	0a 94       	dec	r0
     978:	d2 f7       	brpl	.-12     	; 0x96e <_fpadd_parts+0x12a>
     97a:	21 e0       	ldi	r18, 0x01	; 1
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e0       	ldi	r20, 0x00	; 0
     980:	50 e0       	ldi	r21, 0x00	; 0
     982:	04 c0       	rjmp	.+8      	; 0x98c <_fpadd_parts+0x148>
     984:	22 0f       	add	r18, r18
     986:	33 1f       	adc	r19, r19
     988:	44 1f       	adc	r20, r20
     98a:	55 1f       	adc	r21, r21
     98c:	6a 95       	dec	r22
     98e:	d2 f7       	brpl	.-12     	; 0x984 <_fpadd_parts+0x140>
     990:	21 50       	subi	r18, 0x01	; 1
     992:	30 40       	sbci	r19, 0x00	; 0
     994:	40 40       	sbci	r20, 0x00	; 0
     996:	50 40       	sbci	r21, 0x00	; 0
     998:	2a 21       	and	r18, r10
     99a:	3b 21       	and	r19, r11
     99c:	4c 21       	and	r20, r12
     99e:	5d 21       	and	r21, r13
     9a0:	21 15       	cp	r18, r1
     9a2:	31 05       	cpc	r19, r1
     9a4:	41 05       	cpc	r20, r1
     9a6:	51 05       	cpc	r21, r1
     9a8:	21 f0       	breq	.+8      	; 0x9b2 <_fpadd_parts+0x16e>
     9aa:	21 e0       	ldi	r18, 0x01	; 1
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	40 e0       	ldi	r20, 0x00	; 0
     9b0:	50 e0       	ldi	r21, 0x00	; 0
     9b2:	59 01       	movw	r10, r18
     9b4:	6a 01       	movw	r12, r20
     9b6:	a6 28       	or	r10, r6
     9b8:	b7 28       	or	r11, r7
     9ba:	c8 28       	or	r12, r8
     9bc:	d9 28       	or	r13, r9
     9be:	0b c0       	rjmp	.+22     	; 0x9d6 <_fpadd_parts+0x192>
     9c0:	82 15       	cp	r24, r2
     9c2:	93 05       	cpc	r25, r3
     9c4:	2c f0       	brlt	.+10     	; 0x9d0 <_fpadd_parts+0x18c>
     9c6:	1c 01       	movw	r2, r24
     9c8:	aa 24       	eor	r10, r10
     9ca:	bb 24       	eor	r11, r11
     9cc:	65 01       	movw	r12, r10
     9ce:	03 c0       	rjmp	.+6      	; 0x9d6 <_fpadd_parts+0x192>
     9d0:	ee 24       	eor	r14, r14
     9d2:	ff 24       	eor	r15, r15
     9d4:	87 01       	movw	r16, r14
     9d6:	11 96       	adiw	r26, 0x01	; 1
     9d8:	9c 91       	ld	r25, X
     9da:	d2 01       	movw	r26, r4
     9dc:	11 96       	adiw	r26, 0x01	; 1
     9de:	8c 91       	ld	r24, X
     9e0:	98 17       	cp	r25, r24
     9e2:	09 f4       	brne	.+2      	; 0x9e6 <_fpadd_parts+0x1a2>
     9e4:	45 c0       	rjmp	.+138    	; 0xa70 <_fpadd_parts+0x22c>
     9e6:	99 23       	and	r25, r25
     9e8:	39 f0       	breq	.+14     	; 0x9f8 <_fpadd_parts+0x1b4>
     9ea:	a8 01       	movw	r20, r16
     9ec:	97 01       	movw	r18, r14
     9ee:	2a 19       	sub	r18, r10
     9f0:	3b 09       	sbc	r19, r11
     9f2:	4c 09       	sbc	r20, r12
     9f4:	5d 09       	sbc	r21, r13
     9f6:	06 c0       	rjmp	.+12     	; 0xa04 <_fpadd_parts+0x1c0>
     9f8:	a6 01       	movw	r20, r12
     9fa:	95 01       	movw	r18, r10
     9fc:	2e 19       	sub	r18, r14
     9fe:	3f 09       	sbc	r19, r15
     a00:	40 0b       	sbc	r20, r16
     a02:	51 0b       	sbc	r21, r17
     a04:	57 fd       	sbrc	r21, 7
     a06:	08 c0       	rjmp	.+16     	; 0xa18 <_fpadd_parts+0x1d4>
     a08:	11 82       	std	Z+1, r1	; 0x01
     a0a:	33 82       	std	Z+3, r3	; 0x03
     a0c:	22 82       	std	Z+2, r2	; 0x02
     a0e:	24 83       	std	Z+4, r18	; 0x04
     a10:	35 83       	std	Z+5, r19	; 0x05
     a12:	46 83       	std	Z+6, r20	; 0x06
     a14:	57 83       	std	Z+7, r21	; 0x07
     a16:	1d c0       	rjmp	.+58     	; 0xa52 <_fpadd_parts+0x20e>
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	81 83       	std	Z+1, r24	; 0x01
     a1c:	33 82       	std	Z+3, r3	; 0x03
     a1e:	22 82       	std	Z+2, r2	; 0x02
     a20:	88 27       	eor	r24, r24
     a22:	99 27       	eor	r25, r25
     a24:	dc 01       	movw	r26, r24
     a26:	82 1b       	sub	r24, r18
     a28:	93 0b       	sbc	r25, r19
     a2a:	a4 0b       	sbc	r26, r20
     a2c:	b5 0b       	sbc	r27, r21
     a2e:	84 83       	std	Z+4, r24	; 0x04
     a30:	95 83       	std	Z+5, r25	; 0x05
     a32:	a6 83       	std	Z+6, r26	; 0x06
     a34:	b7 83       	std	Z+7, r27	; 0x07
     a36:	0d c0       	rjmp	.+26     	; 0xa52 <_fpadd_parts+0x20e>
     a38:	22 0f       	add	r18, r18
     a3a:	33 1f       	adc	r19, r19
     a3c:	44 1f       	adc	r20, r20
     a3e:	55 1f       	adc	r21, r21
     a40:	24 83       	std	Z+4, r18	; 0x04
     a42:	35 83       	std	Z+5, r19	; 0x05
     a44:	46 83       	std	Z+6, r20	; 0x06
     a46:	57 83       	std	Z+7, r21	; 0x07
     a48:	82 81       	ldd	r24, Z+2	; 0x02
     a4a:	93 81       	ldd	r25, Z+3	; 0x03
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	93 83       	std	Z+3, r25	; 0x03
     a50:	82 83       	std	Z+2, r24	; 0x02
     a52:	24 81       	ldd	r18, Z+4	; 0x04
     a54:	35 81       	ldd	r19, Z+5	; 0x05
     a56:	46 81       	ldd	r20, Z+6	; 0x06
     a58:	57 81       	ldd	r21, Z+7	; 0x07
     a5a:	da 01       	movw	r26, r20
     a5c:	c9 01       	movw	r24, r18
     a5e:	01 97       	sbiw	r24, 0x01	; 1
     a60:	a1 09       	sbc	r26, r1
     a62:	b1 09       	sbc	r27, r1
     a64:	8f 5f       	subi	r24, 0xFF	; 255
     a66:	9f 4f       	sbci	r25, 0xFF	; 255
     a68:	af 4f       	sbci	r26, 0xFF	; 255
     a6a:	bf 43       	sbci	r27, 0x3F	; 63
     a6c:	28 f3       	brcs	.-54     	; 0xa38 <_fpadd_parts+0x1f4>
     a6e:	0b c0       	rjmp	.+22     	; 0xa86 <_fpadd_parts+0x242>
     a70:	91 83       	std	Z+1, r25	; 0x01
     a72:	33 82       	std	Z+3, r3	; 0x03
     a74:	22 82       	std	Z+2, r2	; 0x02
     a76:	ea 0c       	add	r14, r10
     a78:	fb 1c       	adc	r15, r11
     a7a:	0c 1d       	adc	r16, r12
     a7c:	1d 1d       	adc	r17, r13
     a7e:	e4 82       	std	Z+4, r14	; 0x04
     a80:	f5 82       	std	Z+5, r15	; 0x05
     a82:	06 83       	std	Z+6, r16	; 0x06
     a84:	17 83       	std	Z+7, r17	; 0x07
     a86:	83 e0       	ldi	r24, 0x03	; 3
     a88:	80 83       	st	Z, r24
     a8a:	24 81       	ldd	r18, Z+4	; 0x04
     a8c:	35 81       	ldd	r19, Z+5	; 0x05
     a8e:	46 81       	ldd	r20, Z+6	; 0x06
     a90:	57 81       	ldd	r21, Z+7	; 0x07
     a92:	57 ff       	sbrs	r21, 7
     a94:	1a c0       	rjmp	.+52     	; 0xaca <_fpadd_parts+0x286>
     a96:	c9 01       	movw	r24, r18
     a98:	aa 27       	eor	r26, r26
     a9a:	97 fd       	sbrc	r25, 7
     a9c:	a0 95       	com	r26
     a9e:	ba 2f       	mov	r27, r26
     aa0:	81 70       	andi	r24, 0x01	; 1
     aa2:	90 70       	andi	r25, 0x00	; 0
     aa4:	a0 70       	andi	r26, 0x00	; 0
     aa6:	b0 70       	andi	r27, 0x00	; 0
     aa8:	56 95       	lsr	r21
     aaa:	47 95       	ror	r20
     aac:	37 95       	ror	r19
     aae:	27 95       	ror	r18
     ab0:	82 2b       	or	r24, r18
     ab2:	93 2b       	or	r25, r19
     ab4:	a4 2b       	or	r26, r20
     ab6:	b5 2b       	or	r27, r21
     ab8:	84 83       	std	Z+4, r24	; 0x04
     aba:	95 83       	std	Z+5, r25	; 0x05
     abc:	a6 83       	std	Z+6, r26	; 0x06
     abe:	b7 83       	std	Z+7, r27	; 0x07
     ac0:	82 81       	ldd	r24, Z+2	; 0x02
     ac2:	93 81       	ldd	r25, Z+3	; 0x03
     ac4:	01 96       	adiw	r24, 0x01	; 1
     ac6:	93 83       	std	Z+3, r25	; 0x03
     ac8:	82 83       	std	Z+2, r24	; 0x02
     aca:	df 01       	movw	r26, r30
     acc:	01 c0       	rjmp	.+2      	; 0xad0 <_fpadd_parts+0x28c>
     ace:	d2 01       	movw	r26, r4
     ad0:	cd 01       	movw	r24, r26
     ad2:	cd b7       	in	r28, 0x3d	; 61
     ad4:	de b7       	in	r29, 0x3e	; 62
     ad6:	e2 e1       	ldi	r30, 0x12	; 18
     ad8:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <__epilogue_restores__>

00000adc <__subsf3>:
     adc:	a0 e2       	ldi	r26, 0x20	; 32
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	e4 e7       	ldi	r30, 0x74	; 116
     ae2:	f5 e0       	ldi	r31, 0x05	; 5
     ae4:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x18>
     ae8:	69 83       	std	Y+1, r22	; 0x01
     aea:	7a 83       	std	Y+2, r23	; 0x02
     aec:	8b 83       	std	Y+3, r24	; 0x03
     aee:	9c 83       	std	Y+4, r25	; 0x04
     af0:	2d 83       	std	Y+5, r18	; 0x05
     af2:	3e 83       	std	Y+6, r19	; 0x06
     af4:	4f 83       	std	Y+7, r20	; 0x07
     af6:	58 87       	std	Y+8, r21	; 0x08
     af8:	e9 e0       	ldi	r30, 0x09	; 9
     afa:	ee 2e       	mov	r14, r30
     afc:	f1 2c       	mov	r15, r1
     afe:	ec 0e       	add	r14, r28
     b00:	fd 1e       	adc	r15, r29
     b02:	b7 01       	movw	r22, r14
     b04:	ce 01       	movw	r24, r28
     b06:	01 96       	adiw	r24, 0x01	; 1
     b08:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     b0c:	8e 01       	movw	r16, r28
     b0e:	0f 5e       	subi	r16, 0xEF	; 239
     b10:	1f 4f       	sbci	r17, 0xFF	; 255
     b12:	b8 01       	movw	r22, r16
     b14:	ce 01       	movw	r24, r28
     b16:	05 96       	adiw	r24, 0x05	; 5
     b18:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     b1c:	8a 89       	ldd	r24, Y+18	; 0x12
     b1e:	91 e0       	ldi	r25, 0x01	; 1
     b20:	89 27       	eor	r24, r25
     b22:	8a 8b       	std	Y+18, r24	; 0x12
     b24:	ae 01       	movw	r20, r28
     b26:	47 5e       	subi	r20, 0xE7	; 231
     b28:	5f 4f       	sbci	r21, 0xFF	; 255
     b2a:	b8 01       	movw	r22, r16
     b2c:	c7 01       	movw	r24, r14
     b2e:	0e 94 22 04 	call	0x844	; 0x844 <_fpadd_parts>
     b32:	0e 94 1c 09 	call	0x1238	; 0x1238 <__pack_f>
     b36:	a0 96       	adiw	r28, 0x20	; 32
     b38:	e6 e0       	ldi	r30, 0x06	; 6
     b3a:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x18>

00000b3e <__addsf3>:
     b3e:	a0 e2       	ldi	r26, 0x20	; 32
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	e5 ea       	ldi	r30, 0xA5	; 165
     b44:	f5 e0       	ldi	r31, 0x05	; 5
     b46:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x18>
     b4a:	69 83       	std	Y+1, r22	; 0x01
     b4c:	7a 83       	std	Y+2, r23	; 0x02
     b4e:	8b 83       	std	Y+3, r24	; 0x03
     b50:	9c 83       	std	Y+4, r25	; 0x04
     b52:	2d 83       	std	Y+5, r18	; 0x05
     b54:	3e 83       	std	Y+6, r19	; 0x06
     b56:	4f 83       	std	Y+7, r20	; 0x07
     b58:	58 87       	std	Y+8, r21	; 0x08
     b5a:	f9 e0       	ldi	r31, 0x09	; 9
     b5c:	ef 2e       	mov	r14, r31
     b5e:	f1 2c       	mov	r15, r1
     b60:	ec 0e       	add	r14, r28
     b62:	fd 1e       	adc	r15, r29
     b64:	b7 01       	movw	r22, r14
     b66:	ce 01       	movw	r24, r28
     b68:	01 96       	adiw	r24, 0x01	; 1
     b6a:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     b6e:	8e 01       	movw	r16, r28
     b70:	0f 5e       	subi	r16, 0xEF	; 239
     b72:	1f 4f       	sbci	r17, 0xFF	; 255
     b74:	b8 01       	movw	r22, r16
     b76:	ce 01       	movw	r24, r28
     b78:	05 96       	adiw	r24, 0x05	; 5
     b7a:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     b7e:	ae 01       	movw	r20, r28
     b80:	47 5e       	subi	r20, 0xE7	; 231
     b82:	5f 4f       	sbci	r21, 0xFF	; 255
     b84:	b8 01       	movw	r22, r16
     b86:	c7 01       	movw	r24, r14
     b88:	0e 94 22 04 	call	0x844	; 0x844 <_fpadd_parts>
     b8c:	0e 94 1c 09 	call	0x1238	; 0x1238 <__pack_f>
     b90:	a0 96       	adiw	r28, 0x20	; 32
     b92:	e6 e0       	ldi	r30, 0x06	; 6
     b94:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x18>

00000b98 <__mulsf3>:
     b98:	a0 e2       	ldi	r26, 0x20	; 32
     b9a:	b0 e0       	ldi	r27, 0x00	; 0
     b9c:	e2 ed       	ldi	r30, 0xD2	; 210
     b9e:	f5 e0       	ldi	r31, 0x05	; 5
     ba0:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__prologue_saves__>
     ba4:	69 83       	std	Y+1, r22	; 0x01
     ba6:	7a 83       	std	Y+2, r23	; 0x02
     ba8:	8b 83       	std	Y+3, r24	; 0x03
     baa:	9c 83       	std	Y+4, r25	; 0x04
     bac:	2d 83       	std	Y+5, r18	; 0x05
     bae:	3e 83       	std	Y+6, r19	; 0x06
     bb0:	4f 83       	std	Y+7, r20	; 0x07
     bb2:	58 87       	std	Y+8, r21	; 0x08
     bb4:	be 01       	movw	r22, r28
     bb6:	67 5f       	subi	r22, 0xF7	; 247
     bb8:	7f 4f       	sbci	r23, 0xFF	; 255
     bba:	ce 01       	movw	r24, r28
     bbc:	01 96       	adiw	r24, 0x01	; 1
     bbe:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     bc2:	be 01       	movw	r22, r28
     bc4:	6f 5e       	subi	r22, 0xEF	; 239
     bc6:	7f 4f       	sbci	r23, 0xFF	; 255
     bc8:	ce 01       	movw	r24, r28
     bca:	05 96       	adiw	r24, 0x05	; 5
     bcc:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     bd0:	99 85       	ldd	r25, Y+9	; 0x09
     bd2:	92 30       	cpi	r25, 0x02	; 2
     bd4:	88 f0       	brcs	.+34     	; 0xbf8 <__mulsf3+0x60>
     bd6:	89 89       	ldd	r24, Y+17	; 0x11
     bd8:	82 30       	cpi	r24, 0x02	; 2
     bda:	c8 f0       	brcs	.+50     	; 0xc0e <__mulsf3+0x76>
     bdc:	94 30       	cpi	r25, 0x04	; 4
     bde:	19 f4       	brne	.+6      	; 0xbe6 <__mulsf3+0x4e>
     be0:	82 30       	cpi	r24, 0x02	; 2
     be2:	51 f4       	brne	.+20     	; 0xbf8 <__mulsf3+0x60>
     be4:	04 c0       	rjmp	.+8      	; 0xbee <__mulsf3+0x56>
     be6:	84 30       	cpi	r24, 0x04	; 4
     be8:	29 f4       	brne	.+10     	; 0xbf4 <__mulsf3+0x5c>
     bea:	92 30       	cpi	r25, 0x02	; 2
     bec:	81 f4       	brne	.+32     	; 0xc0e <__mulsf3+0x76>
     bee:	80 e6       	ldi	r24, 0x60	; 96
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	c6 c0       	rjmp	.+396    	; 0xd80 <__mulsf3+0x1e8>
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	49 f4       	brne	.+18     	; 0xc0a <__mulsf3+0x72>
     bf8:	20 e0       	ldi	r18, 0x00	; 0
     bfa:	9a 85       	ldd	r25, Y+10	; 0x0a
     bfc:	8a 89       	ldd	r24, Y+18	; 0x12
     bfe:	98 13       	cpse	r25, r24
     c00:	21 e0       	ldi	r18, 0x01	; 1
     c02:	2a 87       	std	Y+10, r18	; 0x0a
     c04:	ce 01       	movw	r24, r28
     c06:	09 96       	adiw	r24, 0x09	; 9
     c08:	bb c0       	rjmp	.+374    	; 0xd80 <__mulsf3+0x1e8>
     c0a:	82 30       	cpi	r24, 0x02	; 2
     c0c:	49 f4       	brne	.+18     	; 0xc20 <__mulsf3+0x88>
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	9a 85       	ldd	r25, Y+10	; 0x0a
     c12:	8a 89       	ldd	r24, Y+18	; 0x12
     c14:	98 13       	cpse	r25, r24
     c16:	21 e0       	ldi	r18, 0x01	; 1
     c18:	2a 8b       	std	Y+18, r18	; 0x12
     c1a:	ce 01       	movw	r24, r28
     c1c:	41 96       	adiw	r24, 0x11	; 17
     c1e:	b0 c0       	rjmp	.+352    	; 0xd80 <__mulsf3+0x1e8>
     c20:	2d 84       	ldd	r2, Y+13	; 0x0d
     c22:	3e 84       	ldd	r3, Y+14	; 0x0e
     c24:	4f 84       	ldd	r4, Y+15	; 0x0f
     c26:	58 88       	ldd	r5, Y+16	; 0x10
     c28:	6d 88       	ldd	r6, Y+21	; 0x15
     c2a:	7e 88       	ldd	r7, Y+22	; 0x16
     c2c:	8f 88       	ldd	r8, Y+23	; 0x17
     c2e:	98 8c       	ldd	r9, Y+24	; 0x18
     c30:	ee 24       	eor	r14, r14
     c32:	ff 24       	eor	r15, r15
     c34:	87 01       	movw	r16, r14
     c36:	aa 24       	eor	r10, r10
     c38:	bb 24       	eor	r11, r11
     c3a:	65 01       	movw	r12, r10
     c3c:	40 e0       	ldi	r20, 0x00	; 0
     c3e:	50 e0       	ldi	r21, 0x00	; 0
     c40:	60 e0       	ldi	r22, 0x00	; 0
     c42:	70 e0       	ldi	r23, 0x00	; 0
     c44:	e0 e0       	ldi	r30, 0x00	; 0
     c46:	f0 e0       	ldi	r31, 0x00	; 0
     c48:	c1 01       	movw	r24, r2
     c4a:	81 70       	andi	r24, 0x01	; 1
     c4c:	90 70       	andi	r25, 0x00	; 0
     c4e:	89 2b       	or	r24, r25
     c50:	e9 f0       	breq	.+58     	; 0xc8c <__mulsf3+0xf4>
     c52:	e6 0c       	add	r14, r6
     c54:	f7 1c       	adc	r15, r7
     c56:	08 1d       	adc	r16, r8
     c58:	19 1d       	adc	r17, r9
     c5a:	9a 01       	movw	r18, r20
     c5c:	ab 01       	movw	r20, r22
     c5e:	2a 0d       	add	r18, r10
     c60:	3b 1d       	adc	r19, r11
     c62:	4c 1d       	adc	r20, r12
     c64:	5d 1d       	adc	r21, r13
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	a0 e0       	ldi	r26, 0x00	; 0
     c6c:	b0 e0       	ldi	r27, 0x00	; 0
     c6e:	e6 14       	cp	r14, r6
     c70:	f7 04       	cpc	r15, r7
     c72:	08 05       	cpc	r16, r8
     c74:	19 05       	cpc	r17, r9
     c76:	20 f4       	brcc	.+8      	; 0xc80 <__mulsf3+0xe8>
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	a0 e0       	ldi	r26, 0x00	; 0
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	ba 01       	movw	r22, r20
     c82:	a9 01       	movw	r20, r18
     c84:	48 0f       	add	r20, r24
     c86:	59 1f       	adc	r21, r25
     c88:	6a 1f       	adc	r22, r26
     c8a:	7b 1f       	adc	r23, r27
     c8c:	aa 0c       	add	r10, r10
     c8e:	bb 1c       	adc	r11, r11
     c90:	cc 1c       	adc	r12, r12
     c92:	dd 1c       	adc	r13, r13
     c94:	97 fe       	sbrs	r9, 7
     c96:	08 c0       	rjmp	.+16     	; 0xca8 <__mulsf3+0x110>
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	a0 e0       	ldi	r26, 0x00	; 0
     c9e:	b0 e0       	ldi	r27, 0x00	; 0
     ca0:	a8 2a       	or	r10, r24
     ca2:	b9 2a       	or	r11, r25
     ca4:	ca 2a       	or	r12, r26
     ca6:	db 2a       	or	r13, r27
     ca8:	31 96       	adiw	r30, 0x01	; 1
     caa:	e0 32       	cpi	r30, 0x20	; 32
     cac:	f1 05       	cpc	r31, r1
     cae:	49 f0       	breq	.+18     	; 0xcc2 <__mulsf3+0x12a>
     cb0:	66 0c       	add	r6, r6
     cb2:	77 1c       	adc	r7, r7
     cb4:	88 1c       	adc	r8, r8
     cb6:	99 1c       	adc	r9, r9
     cb8:	56 94       	lsr	r5
     cba:	47 94       	ror	r4
     cbc:	37 94       	ror	r3
     cbe:	27 94       	ror	r2
     cc0:	c3 cf       	rjmp	.-122    	; 0xc48 <__mulsf3+0xb0>
     cc2:	fa 85       	ldd	r31, Y+10	; 0x0a
     cc4:	ea 89       	ldd	r30, Y+18	; 0x12
     cc6:	2b 89       	ldd	r18, Y+19	; 0x13
     cc8:	3c 89       	ldd	r19, Y+20	; 0x14
     cca:	8b 85       	ldd	r24, Y+11	; 0x0b
     ccc:	9c 85       	ldd	r25, Y+12	; 0x0c
     cce:	28 0f       	add	r18, r24
     cd0:	39 1f       	adc	r19, r25
     cd2:	2e 5f       	subi	r18, 0xFE	; 254
     cd4:	3f 4f       	sbci	r19, 0xFF	; 255
     cd6:	17 c0       	rjmp	.+46     	; 0xd06 <__mulsf3+0x16e>
     cd8:	ca 01       	movw	r24, r20
     cda:	81 70       	andi	r24, 0x01	; 1
     cdc:	90 70       	andi	r25, 0x00	; 0
     cde:	89 2b       	or	r24, r25
     ce0:	61 f0       	breq	.+24     	; 0xcfa <__mulsf3+0x162>
     ce2:	16 95       	lsr	r17
     ce4:	07 95       	ror	r16
     ce6:	f7 94       	ror	r15
     ce8:	e7 94       	ror	r14
     cea:	80 e0       	ldi	r24, 0x00	; 0
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	a0 e0       	ldi	r26, 0x00	; 0
     cf0:	b0 e8       	ldi	r27, 0x80	; 128
     cf2:	e8 2a       	or	r14, r24
     cf4:	f9 2a       	or	r15, r25
     cf6:	0a 2b       	or	r16, r26
     cf8:	1b 2b       	or	r17, r27
     cfa:	76 95       	lsr	r23
     cfc:	67 95       	ror	r22
     cfe:	57 95       	ror	r21
     d00:	47 95       	ror	r20
     d02:	2f 5f       	subi	r18, 0xFF	; 255
     d04:	3f 4f       	sbci	r19, 0xFF	; 255
     d06:	77 fd       	sbrc	r23, 7
     d08:	e7 cf       	rjmp	.-50     	; 0xcd8 <__mulsf3+0x140>
     d0a:	0c c0       	rjmp	.+24     	; 0xd24 <__mulsf3+0x18c>
     d0c:	44 0f       	add	r20, r20
     d0e:	55 1f       	adc	r21, r21
     d10:	66 1f       	adc	r22, r22
     d12:	77 1f       	adc	r23, r23
     d14:	17 fd       	sbrc	r17, 7
     d16:	41 60       	ori	r20, 0x01	; 1
     d18:	ee 0c       	add	r14, r14
     d1a:	ff 1c       	adc	r15, r15
     d1c:	00 1f       	adc	r16, r16
     d1e:	11 1f       	adc	r17, r17
     d20:	21 50       	subi	r18, 0x01	; 1
     d22:	30 40       	sbci	r19, 0x00	; 0
     d24:	40 30       	cpi	r20, 0x00	; 0
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	59 07       	cpc	r21, r25
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	69 07       	cpc	r22, r25
     d2e:	90 e4       	ldi	r25, 0x40	; 64
     d30:	79 07       	cpc	r23, r25
     d32:	60 f3       	brcs	.-40     	; 0xd0c <__mulsf3+0x174>
     d34:	2b 8f       	std	Y+27, r18	; 0x1b
     d36:	3c 8f       	std	Y+28, r19	; 0x1c
     d38:	db 01       	movw	r26, r22
     d3a:	ca 01       	movw	r24, r20
     d3c:	8f 77       	andi	r24, 0x7F	; 127
     d3e:	90 70       	andi	r25, 0x00	; 0
     d40:	a0 70       	andi	r26, 0x00	; 0
     d42:	b0 70       	andi	r27, 0x00	; 0
     d44:	80 34       	cpi	r24, 0x40	; 64
     d46:	91 05       	cpc	r25, r1
     d48:	a1 05       	cpc	r26, r1
     d4a:	b1 05       	cpc	r27, r1
     d4c:	61 f4       	brne	.+24     	; 0xd66 <__mulsf3+0x1ce>
     d4e:	47 fd       	sbrc	r20, 7
     d50:	0a c0       	rjmp	.+20     	; 0xd66 <__mulsf3+0x1ce>
     d52:	e1 14       	cp	r14, r1
     d54:	f1 04       	cpc	r15, r1
     d56:	01 05       	cpc	r16, r1
     d58:	11 05       	cpc	r17, r1
     d5a:	29 f0       	breq	.+10     	; 0xd66 <__mulsf3+0x1ce>
     d5c:	40 5c       	subi	r20, 0xC0	; 192
     d5e:	5f 4f       	sbci	r21, 0xFF	; 255
     d60:	6f 4f       	sbci	r22, 0xFF	; 255
     d62:	7f 4f       	sbci	r23, 0xFF	; 255
     d64:	40 78       	andi	r20, 0x80	; 128
     d66:	1a 8e       	std	Y+26, r1	; 0x1a
     d68:	fe 17       	cp	r31, r30
     d6a:	11 f0       	breq	.+4      	; 0xd70 <__mulsf3+0x1d8>
     d6c:	81 e0       	ldi	r24, 0x01	; 1
     d6e:	8a 8f       	std	Y+26, r24	; 0x1a
     d70:	4d 8f       	std	Y+29, r20	; 0x1d
     d72:	5e 8f       	std	Y+30, r21	; 0x1e
     d74:	6f 8f       	std	Y+31, r22	; 0x1f
     d76:	78 a3       	std	Y+32, r23	; 0x20
     d78:	83 e0       	ldi	r24, 0x03	; 3
     d7a:	89 8f       	std	Y+25, r24	; 0x19
     d7c:	ce 01       	movw	r24, r28
     d7e:	49 96       	adiw	r24, 0x19	; 25
     d80:	0e 94 1c 09 	call	0x1238	; 0x1238 <__pack_f>
     d84:	a0 96       	adiw	r28, 0x20	; 32
     d86:	e2 e1       	ldi	r30, 0x12	; 18
     d88:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <__epilogue_restores__>

00000d8c <__divsf3>:
     d8c:	a8 e1       	ldi	r26, 0x18	; 24
     d8e:	b0 e0       	ldi	r27, 0x00	; 0
     d90:	ec ec       	ldi	r30, 0xCC	; 204
     d92:	f6 e0       	ldi	r31, 0x06	; 6
     d94:	0c 94 ca 0a 	jmp	0x1594	; 0x1594 <__prologue_saves__+0x10>
     d98:	69 83       	std	Y+1, r22	; 0x01
     d9a:	7a 83       	std	Y+2, r23	; 0x02
     d9c:	8b 83       	std	Y+3, r24	; 0x03
     d9e:	9c 83       	std	Y+4, r25	; 0x04
     da0:	2d 83       	std	Y+5, r18	; 0x05
     da2:	3e 83       	std	Y+6, r19	; 0x06
     da4:	4f 83       	std	Y+7, r20	; 0x07
     da6:	58 87       	std	Y+8, r21	; 0x08
     da8:	b9 e0       	ldi	r27, 0x09	; 9
     daa:	eb 2e       	mov	r14, r27
     dac:	f1 2c       	mov	r15, r1
     dae:	ec 0e       	add	r14, r28
     db0:	fd 1e       	adc	r15, r29
     db2:	b7 01       	movw	r22, r14
     db4:	ce 01       	movw	r24, r28
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     dbc:	8e 01       	movw	r16, r28
     dbe:	0f 5e       	subi	r16, 0xEF	; 239
     dc0:	1f 4f       	sbci	r17, 0xFF	; 255
     dc2:	b8 01       	movw	r22, r16
     dc4:	ce 01       	movw	r24, r28
     dc6:	05 96       	adiw	r24, 0x05	; 5
     dc8:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     dcc:	29 85       	ldd	r18, Y+9	; 0x09
     dce:	22 30       	cpi	r18, 0x02	; 2
     dd0:	08 f4       	brcc	.+2      	; 0xdd4 <__divsf3+0x48>
     dd2:	7c c0       	rjmp	.+248    	; 0xecc <__divsf3+0x140>
     dd4:	39 89       	ldd	r19, Y+17	; 0x11
     dd6:	32 30       	cpi	r19, 0x02	; 2
     dd8:	10 f4       	brcc	.+4      	; 0xdde <__divsf3+0x52>
     dda:	b8 01       	movw	r22, r16
     ddc:	7a c0       	rjmp	.+244    	; 0xed2 <__divsf3+0x146>
     dde:	8a 85       	ldd	r24, Y+10	; 0x0a
     de0:	9a 89       	ldd	r25, Y+18	; 0x12
     de2:	89 27       	eor	r24, r25
     de4:	8a 87       	std	Y+10, r24	; 0x0a
     de6:	24 30       	cpi	r18, 0x04	; 4
     de8:	11 f0       	breq	.+4      	; 0xdee <__divsf3+0x62>
     dea:	22 30       	cpi	r18, 0x02	; 2
     dec:	31 f4       	brne	.+12     	; 0xdfa <__divsf3+0x6e>
     dee:	23 17       	cp	r18, r19
     df0:	09 f0       	breq	.+2      	; 0xdf4 <__divsf3+0x68>
     df2:	6c c0       	rjmp	.+216    	; 0xecc <__divsf3+0x140>
     df4:	60 e6       	ldi	r22, 0x60	; 96
     df6:	70 e0       	ldi	r23, 0x00	; 0
     df8:	6c c0       	rjmp	.+216    	; 0xed2 <__divsf3+0x146>
     dfa:	34 30       	cpi	r19, 0x04	; 4
     dfc:	39 f4       	brne	.+14     	; 0xe0c <__divsf3+0x80>
     dfe:	1d 86       	std	Y+13, r1	; 0x0d
     e00:	1e 86       	std	Y+14, r1	; 0x0e
     e02:	1f 86       	std	Y+15, r1	; 0x0f
     e04:	18 8a       	std	Y+16, r1	; 0x10
     e06:	1c 86       	std	Y+12, r1	; 0x0c
     e08:	1b 86       	std	Y+11, r1	; 0x0b
     e0a:	04 c0       	rjmp	.+8      	; 0xe14 <__divsf3+0x88>
     e0c:	32 30       	cpi	r19, 0x02	; 2
     e0e:	21 f4       	brne	.+8      	; 0xe18 <__divsf3+0x8c>
     e10:	84 e0       	ldi	r24, 0x04	; 4
     e12:	89 87       	std	Y+9, r24	; 0x09
     e14:	b7 01       	movw	r22, r14
     e16:	5d c0       	rjmp	.+186    	; 0xed2 <__divsf3+0x146>
     e18:	2b 85       	ldd	r18, Y+11	; 0x0b
     e1a:	3c 85       	ldd	r19, Y+12	; 0x0c
     e1c:	8b 89       	ldd	r24, Y+19	; 0x13
     e1e:	9c 89       	ldd	r25, Y+20	; 0x14
     e20:	28 1b       	sub	r18, r24
     e22:	39 0b       	sbc	r19, r25
     e24:	3c 87       	std	Y+12, r19	; 0x0c
     e26:	2b 87       	std	Y+11, r18	; 0x0b
     e28:	ed 84       	ldd	r14, Y+13	; 0x0d
     e2a:	fe 84       	ldd	r15, Y+14	; 0x0e
     e2c:	0f 85       	ldd	r16, Y+15	; 0x0f
     e2e:	18 89       	ldd	r17, Y+16	; 0x10
     e30:	ad 88       	ldd	r10, Y+21	; 0x15
     e32:	be 88       	ldd	r11, Y+22	; 0x16
     e34:	cf 88       	ldd	r12, Y+23	; 0x17
     e36:	d8 8c       	ldd	r13, Y+24	; 0x18
     e38:	ea 14       	cp	r14, r10
     e3a:	fb 04       	cpc	r15, r11
     e3c:	0c 05       	cpc	r16, r12
     e3e:	1d 05       	cpc	r17, r13
     e40:	40 f4       	brcc	.+16     	; 0xe52 <__divsf3+0xc6>
     e42:	ee 0c       	add	r14, r14
     e44:	ff 1c       	adc	r15, r15
     e46:	00 1f       	adc	r16, r16
     e48:	11 1f       	adc	r17, r17
     e4a:	21 50       	subi	r18, 0x01	; 1
     e4c:	30 40       	sbci	r19, 0x00	; 0
     e4e:	3c 87       	std	Y+12, r19	; 0x0c
     e50:	2b 87       	std	Y+11, r18	; 0x0b
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	40 e0       	ldi	r20, 0x00	; 0
     e58:	50 e0       	ldi	r21, 0x00	; 0
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	a0 e0       	ldi	r26, 0x00	; 0
     e60:	b0 e4       	ldi	r27, 0x40	; 64
     e62:	6f e1       	ldi	r22, 0x1F	; 31
     e64:	70 e0       	ldi	r23, 0x00	; 0
     e66:	ea 14       	cp	r14, r10
     e68:	fb 04       	cpc	r15, r11
     e6a:	0c 05       	cpc	r16, r12
     e6c:	1d 05       	cpc	r17, r13
     e6e:	40 f0       	brcs	.+16     	; 0xe80 <__divsf3+0xf4>
     e70:	28 2b       	or	r18, r24
     e72:	39 2b       	or	r19, r25
     e74:	4a 2b       	or	r20, r26
     e76:	5b 2b       	or	r21, r27
     e78:	ea 18       	sub	r14, r10
     e7a:	fb 08       	sbc	r15, r11
     e7c:	0c 09       	sbc	r16, r12
     e7e:	1d 09       	sbc	r17, r13
     e80:	b6 95       	lsr	r27
     e82:	a7 95       	ror	r26
     e84:	97 95       	ror	r25
     e86:	87 95       	ror	r24
     e88:	ee 0c       	add	r14, r14
     e8a:	ff 1c       	adc	r15, r15
     e8c:	00 1f       	adc	r16, r16
     e8e:	11 1f       	adc	r17, r17
     e90:	61 50       	subi	r22, 0x01	; 1
     e92:	70 40       	sbci	r23, 0x00	; 0
     e94:	41 f7       	brne	.-48     	; 0xe66 <__divsf3+0xda>
     e96:	da 01       	movw	r26, r20
     e98:	c9 01       	movw	r24, r18
     e9a:	8f 77       	andi	r24, 0x7F	; 127
     e9c:	90 70       	andi	r25, 0x00	; 0
     e9e:	a0 70       	andi	r26, 0x00	; 0
     ea0:	b0 70       	andi	r27, 0x00	; 0
     ea2:	80 34       	cpi	r24, 0x40	; 64
     ea4:	91 05       	cpc	r25, r1
     ea6:	a1 05       	cpc	r26, r1
     ea8:	b1 05       	cpc	r27, r1
     eaa:	61 f4       	brne	.+24     	; 0xec4 <__divsf3+0x138>
     eac:	27 fd       	sbrc	r18, 7
     eae:	0a c0       	rjmp	.+20     	; 0xec4 <__divsf3+0x138>
     eb0:	e1 14       	cp	r14, r1
     eb2:	f1 04       	cpc	r15, r1
     eb4:	01 05       	cpc	r16, r1
     eb6:	11 05       	cpc	r17, r1
     eb8:	29 f0       	breq	.+10     	; 0xec4 <__divsf3+0x138>
     eba:	20 5c       	subi	r18, 0xC0	; 192
     ebc:	3f 4f       	sbci	r19, 0xFF	; 255
     ebe:	4f 4f       	sbci	r20, 0xFF	; 255
     ec0:	5f 4f       	sbci	r21, 0xFF	; 255
     ec2:	20 78       	andi	r18, 0x80	; 128
     ec4:	2d 87       	std	Y+13, r18	; 0x0d
     ec6:	3e 87       	std	Y+14, r19	; 0x0e
     ec8:	4f 87       	std	Y+15, r20	; 0x0f
     eca:	58 8b       	std	Y+16, r21	; 0x10
     ecc:	be 01       	movw	r22, r28
     ece:	67 5f       	subi	r22, 0xF7	; 247
     ed0:	7f 4f       	sbci	r23, 0xFF	; 255
     ed2:	cb 01       	movw	r24, r22
     ed4:	0e 94 1c 09 	call	0x1238	; 0x1238 <__pack_f>
     ed8:	68 96       	adiw	r28, 0x18	; 24
     eda:	ea e0       	ldi	r30, 0x0A	; 10
     edc:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__epilogue_restores__+0x10>

00000ee0 <__gtsf2>:
     ee0:	a8 e1       	ldi	r26, 0x18	; 24
     ee2:	b0 e0       	ldi	r27, 0x00	; 0
     ee4:	e6 e7       	ldi	r30, 0x76	; 118
     ee6:	f7 e0       	ldi	r31, 0x07	; 7
     ee8:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x18>
     eec:	69 83       	std	Y+1, r22	; 0x01
     eee:	7a 83       	std	Y+2, r23	; 0x02
     ef0:	8b 83       	std	Y+3, r24	; 0x03
     ef2:	9c 83       	std	Y+4, r25	; 0x04
     ef4:	2d 83       	std	Y+5, r18	; 0x05
     ef6:	3e 83       	std	Y+6, r19	; 0x06
     ef8:	4f 83       	std	Y+7, r20	; 0x07
     efa:	58 87       	std	Y+8, r21	; 0x08
     efc:	89 e0       	ldi	r24, 0x09	; 9
     efe:	e8 2e       	mov	r14, r24
     f00:	f1 2c       	mov	r15, r1
     f02:	ec 0e       	add	r14, r28
     f04:	fd 1e       	adc	r15, r29
     f06:	b7 01       	movw	r22, r14
     f08:	ce 01       	movw	r24, r28
     f0a:	01 96       	adiw	r24, 0x01	; 1
     f0c:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     f10:	8e 01       	movw	r16, r28
     f12:	0f 5e       	subi	r16, 0xEF	; 239
     f14:	1f 4f       	sbci	r17, 0xFF	; 255
     f16:	b8 01       	movw	r22, r16
     f18:	ce 01       	movw	r24, r28
     f1a:	05 96       	adiw	r24, 0x05	; 5
     f1c:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     f20:	89 85       	ldd	r24, Y+9	; 0x09
     f22:	82 30       	cpi	r24, 0x02	; 2
     f24:	40 f0       	brcs	.+16     	; 0xf36 <__gtsf2+0x56>
     f26:	89 89       	ldd	r24, Y+17	; 0x11
     f28:	82 30       	cpi	r24, 0x02	; 2
     f2a:	28 f0       	brcs	.+10     	; 0xf36 <__gtsf2+0x56>
     f2c:	b8 01       	movw	r22, r16
     f2e:	c7 01       	movw	r24, r14
     f30:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <__fpcmp_parts_f>
     f34:	01 c0       	rjmp	.+2      	; 0xf38 <__gtsf2+0x58>
     f36:	8f ef       	ldi	r24, 0xFF	; 255
     f38:	68 96       	adiw	r28, 0x18	; 24
     f3a:	e6 e0       	ldi	r30, 0x06	; 6
     f3c:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x18>

00000f40 <__gesf2>:
     f40:	a8 e1       	ldi	r26, 0x18	; 24
     f42:	b0 e0       	ldi	r27, 0x00	; 0
     f44:	e6 ea       	ldi	r30, 0xA6	; 166
     f46:	f7 e0       	ldi	r31, 0x07	; 7
     f48:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x18>
     f4c:	69 83       	std	Y+1, r22	; 0x01
     f4e:	7a 83       	std	Y+2, r23	; 0x02
     f50:	8b 83       	std	Y+3, r24	; 0x03
     f52:	9c 83       	std	Y+4, r25	; 0x04
     f54:	2d 83       	std	Y+5, r18	; 0x05
     f56:	3e 83       	std	Y+6, r19	; 0x06
     f58:	4f 83       	std	Y+7, r20	; 0x07
     f5a:	58 87       	std	Y+8, r21	; 0x08
     f5c:	89 e0       	ldi	r24, 0x09	; 9
     f5e:	e8 2e       	mov	r14, r24
     f60:	f1 2c       	mov	r15, r1
     f62:	ec 0e       	add	r14, r28
     f64:	fd 1e       	adc	r15, r29
     f66:	b7 01       	movw	r22, r14
     f68:	ce 01       	movw	r24, r28
     f6a:	01 96       	adiw	r24, 0x01	; 1
     f6c:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     f70:	8e 01       	movw	r16, r28
     f72:	0f 5e       	subi	r16, 0xEF	; 239
     f74:	1f 4f       	sbci	r17, 0xFF	; 255
     f76:	b8 01       	movw	r22, r16
     f78:	ce 01       	movw	r24, r28
     f7a:	05 96       	adiw	r24, 0x05	; 5
     f7c:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     f80:	89 85       	ldd	r24, Y+9	; 0x09
     f82:	82 30       	cpi	r24, 0x02	; 2
     f84:	40 f0       	brcs	.+16     	; 0xf96 <__gesf2+0x56>
     f86:	89 89       	ldd	r24, Y+17	; 0x11
     f88:	82 30       	cpi	r24, 0x02	; 2
     f8a:	28 f0       	brcs	.+10     	; 0xf96 <__gesf2+0x56>
     f8c:	b8 01       	movw	r22, r16
     f8e:	c7 01       	movw	r24, r14
     f90:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <__fpcmp_parts_f>
     f94:	01 c0       	rjmp	.+2      	; 0xf98 <__gesf2+0x58>
     f96:	8f ef       	ldi	r24, 0xFF	; 255
     f98:	68 96       	adiw	r28, 0x18	; 24
     f9a:	e6 e0       	ldi	r30, 0x06	; 6
     f9c:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x18>

00000fa0 <__ltsf2>:
     fa0:	a8 e1       	ldi	r26, 0x18	; 24
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	e6 ed       	ldi	r30, 0xD6	; 214
     fa6:	f7 e0       	ldi	r31, 0x07	; 7
     fa8:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x18>
     fac:	69 83       	std	Y+1, r22	; 0x01
     fae:	7a 83       	std	Y+2, r23	; 0x02
     fb0:	8b 83       	std	Y+3, r24	; 0x03
     fb2:	9c 83       	std	Y+4, r25	; 0x04
     fb4:	2d 83       	std	Y+5, r18	; 0x05
     fb6:	3e 83       	std	Y+6, r19	; 0x06
     fb8:	4f 83       	std	Y+7, r20	; 0x07
     fba:	58 87       	std	Y+8, r21	; 0x08
     fbc:	89 e0       	ldi	r24, 0x09	; 9
     fbe:	e8 2e       	mov	r14, r24
     fc0:	f1 2c       	mov	r15, r1
     fc2:	ec 0e       	add	r14, r28
     fc4:	fd 1e       	adc	r15, r29
     fc6:	b7 01       	movw	r22, r14
     fc8:	ce 01       	movw	r24, r28
     fca:	01 96       	adiw	r24, 0x01	; 1
     fcc:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     fd0:	8e 01       	movw	r16, r28
     fd2:	0f 5e       	subi	r16, 0xEF	; 239
     fd4:	1f 4f       	sbci	r17, 0xFF	; 255
     fd6:	b8 01       	movw	r22, r16
     fd8:	ce 01       	movw	r24, r28
     fda:	05 96       	adiw	r24, 0x05	; 5
     fdc:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
     fe0:	89 85       	ldd	r24, Y+9	; 0x09
     fe2:	82 30       	cpi	r24, 0x02	; 2
     fe4:	40 f0       	brcs	.+16     	; 0xff6 <__ltsf2+0x56>
     fe6:	89 89       	ldd	r24, Y+17	; 0x11
     fe8:	82 30       	cpi	r24, 0x02	; 2
     fea:	28 f0       	brcs	.+10     	; 0xff6 <__ltsf2+0x56>
     fec:	b8 01       	movw	r22, r16
     fee:	c7 01       	movw	r24, r14
     ff0:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <__fpcmp_parts_f>
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <__ltsf2+0x58>
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	68 96       	adiw	r28, 0x18	; 24
     ffa:	e6 e0       	ldi	r30, 0x06	; 6
     ffc:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x18>

00001000 <__fixsfsi>:
    1000:	ac e0       	ldi	r26, 0x0C	; 12
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e6 e0       	ldi	r30, 0x06	; 6
    1006:	f8 e0       	ldi	r31, 0x08	; 8
    1008:	0c 94 d2 0a 	jmp	0x15a4	; 0x15a4 <__prologue_saves__+0x20>
    100c:	69 83       	std	Y+1, r22	; 0x01
    100e:	7a 83       	std	Y+2, r23	; 0x02
    1010:	8b 83       	std	Y+3, r24	; 0x03
    1012:	9c 83       	std	Y+4, r25	; 0x04
    1014:	be 01       	movw	r22, r28
    1016:	6b 5f       	subi	r22, 0xFB	; 251
    1018:	7f 4f       	sbci	r23, 0xFF	; 255
    101a:	ce 01       	movw	r24, r28
    101c:	01 96       	adiw	r24, 0x01	; 1
    101e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__unpack_f>
    1022:	8d 81       	ldd	r24, Y+5	; 0x05
    1024:	82 30       	cpi	r24, 0x02	; 2
    1026:	61 f1       	breq	.+88     	; 0x1080 <__fixsfsi+0x80>
    1028:	82 30       	cpi	r24, 0x02	; 2
    102a:	50 f1       	brcs	.+84     	; 0x1080 <__fixsfsi+0x80>
    102c:	84 30       	cpi	r24, 0x04	; 4
    102e:	21 f4       	brne	.+8      	; 0x1038 <__fixsfsi+0x38>
    1030:	8e 81       	ldd	r24, Y+6	; 0x06
    1032:	88 23       	and	r24, r24
    1034:	51 f1       	breq	.+84     	; 0x108a <__fixsfsi+0x8a>
    1036:	2e c0       	rjmp	.+92     	; 0x1094 <__fixsfsi+0x94>
    1038:	2f 81       	ldd	r18, Y+7	; 0x07
    103a:	38 85       	ldd	r19, Y+8	; 0x08
    103c:	37 fd       	sbrc	r19, 7
    103e:	20 c0       	rjmp	.+64     	; 0x1080 <__fixsfsi+0x80>
    1040:	6e 81       	ldd	r22, Y+6	; 0x06
    1042:	2f 31       	cpi	r18, 0x1F	; 31
    1044:	31 05       	cpc	r19, r1
    1046:	1c f0       	brlt	.+6      	; 0x104e <__fixsfsi+0x4e>
    1048:	66 23       	and	r22, r22
    104a:	f9 f0       	breq	.+62     	; 0x108a <__fixsfsi+0x8a>
    104c:	23 c0       	rjmp	.+70     	; 0x1094 <__fixsfsi+0x94>
    104e:	8e e1       	ldi	r24, 0x1E	; 30
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	82 1b       	sub	r24, r18
    1054:	93 0b       	sbc	r25, r19
    1056:	29 85       	ldd	r18, Y+9	; 0x09
    1058:	3a 85       	ldd	r19, Y+10	; 0x0a
    105a:	4b 85       	ldd	r20, Y+11	; 0x0b
    105c:	5c 85       	ldd	r21, Y+12	; 0x0c
    105e:	04 c0       	rjmp	.+8      	; 0x1068 <__fixsfsi+0x68>
    1060:	56 95       	lsr	r21
    1062:	47 95       	ror	r20
    1064:	37 95       	ror	r19
    1066:	27 95       	ror	r18
    1068:	8a 95       	dec	r24
    106a:	d2 f7       	brpl	.-12     	; 0x1060 <__fixsfsi+0x60>
    106c:	66 23       	and	r22, r22
    106e:	b1 f0       	breq	.+44     	; 0x109c <__fixsfsi+0x9c>
    1070:	50 95       	com	r21
    1072:	40 95       	com	r20
    1074:	30 95       	com	r19
    1076:	21 95       	neg	r18
    1078:	3f 4f       	sbci	r19, 0xFF	; 255
    107a:	4f 4f       	sbci	r20, 0xFF	; 255
    107c:	5f 4f       	sbci	r21, 0xFF	; 255
    107e:	0e c0       	rjmp	.+28     	; 0x109c <__fixsfsi+0x9c>
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	40 e0       	ldi	r20, 0x00	; 0
    1086:	50 e0       	ldi	r21, 0x00	; 0
    1088:	09 c0       	rjmp	.+18     	; 0x109c <__fixsfsi+0x9c>
    108a:	2f ef       	ldi	r18, 0xFF	; 255
    108c:	3f ef       	ldi	r19, 0xFF	; 255
    108e:	4f ef       	ldi	r20, 0xFF	; 255
    1090:	5f e7       	ldi	r21, 0x7F	; 127
    1092:	04 c0       	rjmp	.+8      	; 0x109c <__fixsfsi+0x9c>
    1094:	20 e0       	ldi	r18, 0x00	; 0
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	40 e0       	ldi	r20, 0x00	; 0
    109a:	50 e8       	ldi	r21, 0x80	; 128
    109c:	b9 01       	movw	r22, r18
    109e:	ca 01       	movw	r24, r20
    10a0:	2c 96       	adiw	r28, 0x0c	; 12
    10a2:	e2 e0       	ldi	r30, 0x02	; 2
    10a4:	0c 94 ee 0a 	jmp	0x15dc	; 0x15dc <__epilogue_restores__+0x20>

000010a8 <__floatunsisf>:
    10a8:	a8 e0       	ldi	r26, 0x08	; 8
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	ea e5       	ldi	r30, 0x5A	; 90
    10ae:	f8 e0       	ldi	r31, 0x08	; 8
    10b0:	0c 94 cc 0a 	jmp	0x1598	; 0x1598 <__prologue_saves__+0x14>
    10b4:	7b 01       	movw	r14, r22
    10b6:	8c 01       	movw	r16, r24
    10b8:	61 15       	cp	r22, r1
    10ba:	71 05       	cpc	r23, r1
    10bc:	81 05       	cpc	r24, r1
    10be:	91 05       	cpc	r25, r1
    10c0:	19 f4       	brne	.+6      	; 0x10c8 <__floatunsisf+0x20>
    10c2:	82 e0       	ldi	r24, 0x02	; 2
    10c4:	89 83       	std	Y+1, r24	; 0x01
    10c6:	60 c0       	rjmp	.+192    	; 0x1188 <__floatunsisf+0xe0>
    10c8:	83 e0       	ldi	r24, 0x03	; 3
    10ca:	89 83       	std	Y+1, r24	; 0x01
    10cc:	8e e1       	ldi	r24, 0x1E	; 30
    10ce:	c8 2e       	mov	r12, r24
    10d0:	d1 2c       	mov	r13, r1
    10d2:	dc 82       	std	Y+4, r13	; 0x04
    10d4:	cb 82       	std	Y+3, r12	; 0x03
    10d6:	ed 82       	std	Y+5, r14	; 0x05
    10d8:	fe 82       	std	Y+6, r15	; 0x06
    10da:	0f 83       	std	Y+7, r16	; 0x07
    10dc:	18 87       	std	Y+8, r17	; 0x08
    10de:	c8 01       	movw	r24, r16
    10e0:	b7 01       	movw	r22, r14
    10e2:	0e 94 cd 08 	call	0x119a	; 0x119a <__clzsi2>
    10e6:	bc 01       	movw	r22, r24
    10e8:	61 50       	subi	r22, 0x01	; 1
    10ea:	70 40       	sbci	r23, 0x00	; 0
    10ec:	77 ff       	sbrs	r23, 7
    10ee:	39 c0       	rjmp	.+114    	; 0x1162 <__floatunsisf+0xba>
    10f0:	ee 27       	eor	r30, r30
    10f2:	ff 27       	eor	r31, r31
    10f4:	e6 1b       	sub	r30, r22
    10f6:	f7 0b       	sbc	r31, r23
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	40 e0       	ldi	r20, 0x00	; 0
    10fe:	50 e0       	ldi	r21, 0x00	; 0
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	a0 e0       	ldi	r26, 0x00	; 0
    1106:	b0 e0       	ldi	r27, 0x00	; 0
    1108:	0e 2e       	mov	r0, r30
    110a:	04 c0       	rjmp	.+8      	; 0x1114 <__floatunsisf+0x6c>
    110c:	88 0f       	add	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	aa 1f       	adc	r26, r26
    1112:	bb 1f       	adc	r27, r27
    1114:	0a 94       	dec	r0
    1116:	d2 f7       	brpl	.-12     	; 0x110c <__floatunsisf+0x64>
    1118:	01 97       	sbiw	r24, 0x01	; 1
    111a:	a1 09       	sbc	r26, r1
    111c:	b1 09       	sbc	r27, r1
    111e:	8e 21       	and	r24, r14
    1120:	9f 21       	and	r25, r15
    1122:	a0 23       	and	r26, r16
    1124:	b1 23       	and	r27, r17
    1126:	00 97       	sbiw	r24, 0x00	; 0
    1128:	a1 05       	cpc	r26, r1
    112a:	b1 05       	cpc	r27, r1
    112c:	21 f0       	breq	.+8      	; 0x1136 <__floatunsisf+0x8e>
    112e:	21 e0       	ldi	r18, 0x01	; 1
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	40 e0       	ldi	r20, 0x00	; 0
    1134:	50 e0       	ldi	r21, 0x00	; 0
    1136:	04 c0       	rjmp	.+8      	; 0x1140 <__floatunsisf+0x98>
    1138:	16 95       	lsr	r17
    113a:	07 95       	ror	r16
    113c:	f7 94       	ror	r15
    113e:	e7 94       	ror	r14
    1140:	ea 95       	dec	r30
    1142:	d2 f7       	brpl	.-12     	; 0x1138 <__floatunsisf+0x90>
    1144:	2e 29       	or	r18, r14
    1146:	3f 29       	or	r19, r15
    1148:	40 2b       	or	r20, r16
    114a:	51 2b       	or	r21, r17
    114c:	2d 83       	std	Y+5, r18	; 0x05
    114e:	3e 83       	std	Y+6, r19	; 0x06
    1150:	4f 83       	std	Y+7, r20	; 0x07
    1152:	58 87       	std	Y+8, r21	; 0x08
    1154:	8e e1       	ldi	r24, 0x1E	; 30
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	86 1b       	sub	r24, r22
    115a:	97 0b       	sbc	r25, r23
    115c:	9c 83       	std	Y+4, r25	; 0x04
    115e:	8b 83       	std	Y+3, r24	; 0x03
    1160:	13 c0       	rjmp	.+38     	; 0x1188 <__floatunsisf+0xe0>
    1162:	61 15       	cp	r22, r1
    1164:	71 05       	cpc	r23, r1
    1166:	81 f0       	breq	.+32     	; 0x1188 <__floatunsisf+0xe0>
    1168:	06 2e       	mov	r0, r22
    116a:	04 c0       	rjmp	.+8      	; 0x1174 <__floatunsisf+0xcc>
    116c:	ee 0c       	add	r14, r14
    116e:	ff 1c       	adc	r15, r15
    1170:	00 1f       	adc	r16, r16
    1172:	11 1f       	adc	r17, r17
    1174:	0a 94       	dec	r0
    1176:	d2 f7       	brpl	.-12     	; 0x116c <__floatunsisf+0xc4>
    1178:	ed 82       	std	Y+5, r14	; 0x05
    117a:	fe 82       	std	Y+6, r15	; 0x06
    117c:	0f 83       	std	Y+7, r16	; 0x07
    117e:	18 87       	std	Y+8, r17	; 0x08
    1180:	c6 1a       	sub	r12, r22
    1182:	d7 0a       	sbc	r13, r23
    1184:	dc 82       	std	Y+4, r13	; 0x04
    1186:	cb 82       	std	Y+3, r12	; 0x03
    1188:	1a 82       	std	Y+2, r1	; 0x02
    118a:	ce 01       	movw	r24, r28
    118c:	01 96       	adiw	r24, 0x01	; 1
    118e:	0e 94 1c 09 	call	0x1238	; 0x1238 <__pack_f>
    1192:	28 96       	adiw	r28, 0x08	; 8
    1194:	e8 e0       	ldi	r30, 0x08	; 8
    1196:	0c 94 e8 0a 	jmp	0x15d0	; 0x15d0 <__epilogue_restores__+0x14>

0000119a <__clzsi2>:
    119a:	ef 92       	push	r14
    119c:	ff 92       	push	r15
    119e:	0f 93       	push	r16
    11a0:	1f 93       	push	r17
    11a2:	7b 01       	movw	r14, r22
    11a4:	8c 01       	movw	r16, r24
    11a6:	80 e0       	ldi	r24, 0x00	; 0
    11a8:	e8 16       	cp	r14, r24
    11aa:	80 e0       	ldi	r24, 0x00	; 0
    11ac:	f8 06       	cpc	r15, r24
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	08 07       	cpc	r16, r24
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	18 07       	cpc	r17, r24
    11b6:	88 f4       	brcc	.+34     	; 0x11da <__clzsi2+0x40>
    11b8:	8f ef       	ldi	r24, 0xFF	; 255
    11ba:	e8 16       	cp	r14, r24
    11bc:	f1 04       	cpc	r15, r1
    11be:	01 05       	cpc	r16, r1
    11c0:	11 05       	cpc	r17, r1
    11c2:	31 f0       	breq	.+12     	; 0x11d0 <__clzsi2+0x36>
    11c4:	28 f0       	brcs	.+10     	; 0x11d0 <__clzsi2+0x36>
    11c6:	88 e0       	ldi	r24, 0x08	; 8
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	a0 e0       	ldi	r26, 0x00	; 0
    11cc:	b0 e0       	ldi	r27, 0x00	; 0
    11ce:	17 c0       	rjmp	.+46     	; 0x11fe <__clzsi2+0x64>
    11d0:	80 e0       	ldi	r24, 0x00	; 0
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	a0 e0       	ldi	r26, 0x00	; 0
    11d6:	b0 e0       	ldi	r27, 0x00	; 0
    11d8:	12 c0       	rjmp	.+36     	; 0x11fe <__clzsi2+0x64>
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	e8 16       	cp	r14, r24
    11de:	80 e0       	ldi	r24, 0x00	; 0
    11e0:	f8 06       	cpc	r15, r24
    11e2:	80 e0       	ldi	r24, 0x00	; 0
    11e4:	08 07       	cpc	r16, r24
    11e6:	81 e0       	ldi	r24, 0x01	; 1
    11e8:	18 07       	cpc	r17, r24
    11ea:	28 f0       	brcs	.+10     	; 0x11f6 <__clzsi2+0x5c>
    11ec:	88 e1       	ldi	r24, 0x18	; 24
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	a0 e0       	ldi	r26, 0x00	; 0
    11f2:	b0 e0       	ldi	r27, 0x00	; 0
    11f4:	04 c0       	rjmp	.+8      	; 0x11fe <__clzsi2+0x64>
    11f6:	80 e1       	ldi	r24, 0x10	; 16
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	a0 e0       	ldi	r26, 0x00	; 0
    11fc:	b0 e0       	ldi	r27, 0x00	; 0
    11fe:	20 e2       	ldi	r18, 0x20	; 32
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	40 e0       	ldi	r20, 0x00	; 0
    1204:	50 e0       	ldi	r21, 0x00	; 0
    1206:	28 1b       	sub	r18, r24
    1208:	39 0b       	sbc	r19, r25
    120a:	4a 0b       	sbc	r20, r26
    120c:	5b 0b       	sbc	r21, r27
    120e:	04 c0       	rjmp	.+8      	; 0x1218 <__clzsi2+0x7e>
    1210:	16 95       	lsr	r17
    1212:	07 95       	ror	r16
    1214:	f7 94       	ror	r15
    1216:	e7 94       	ror	r14
    1218:	8a 95       	dec	r24
    121a:	d2 f7       	brpl	.-12     	; 0x1210 <__clzsi2+0x76>
    121c:	f7 01       	movw	r30, r14
    121e:	e8 59       	subi	r30, 0x98	; 152
    1220:	ff 4f       	sbci	r31, 0xFF	; 255
    1222:	80 81       	ld	r24, Z
    1224:	28 1b       	sub	r18, r24
    1226:	31 09       	sbc	r19, r1
    1228:	41 09       	sbc	r20, r1
    122a:	51 09       	sbc	r21, r1
    122c:	c9 01       	movw	r24, r18
    122e:	1f 91       	pop	r17
    1230:	0f 91       	pop	r16
    1232:	ff 90       	pop	r15
    1234:	ef 90       	pop	r14
    1236:	08 95       	ret

00001238 <__pack_f>:
    1238:	df 92       	push	r13
    123a:	ef 92       	push	r14
    123c:	ff 92       	push	r15
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	fc 01       	movw	r30, r24
    1244:	e4 80       	ldd	r14, Z+4	; 0x04
    1246:	f5 80       	ldd	r15, Z+5	; 0x05
    1248:	06 81       	ldd	r16, Z+6	; 0x06
    124a:	17 81       	ldd	r17, Z+7	; 0x07
    124c:	d1 80       	ldd	r13, Z+1	; 0x01
    124e:	80 81       	ld	r24, Z
    1250:	82 30       	cpi	r24, 0x02	; 2
    1252:	48 f4       	brcc	.+18     	; 0x1266 <__pack_f+0x2e>
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	a0 e1       	ldi	r26, 0x10	; 16
    125a:	b0 e0       	ldi	r27, 0x00	; 0
    125c:	e8 2a       	or	r14, r24
    125e:	f9 2a       	or	r15, r25
    1260:	0a 2b       	or	r16, r26
    1262:	1b 2b       	or	r17, r27
    1264:	a5 c0       	rjmp	.+330    	; 0x13b0 <__pack_f+0x178>
    1266:	84 30       	cpi	r24, 0x04	; 4
    1268:	09 f4       	brne	.+2      	; 0x126c <__pack_f+0x34>
    126a:	9f c0       	rjmp	.+318    	; 0x13aa <__pack_f+0x172>
    126c:	82 30       	cpi	r24, 0x02	; 2
    126e:	21 f4       	brne	.+8      	; 0x1278 <__pack_f+0x40>
    1270:	ee 24       	eor	r14, r14
    1272:	ff 24       	eor	r15, r15
    1274:	87 01       	movw	r16, r14
    1276:	05 c0       	rjmp	.+10     	; 0x1282 <__pack_f+0x4a>
    1278:	e1 14       	cp	r14, r1
    127a:	f1 04       	cpc	r15, r1
    127c:	01 05       	cpc	r16, r1
    127e:	11 05       	cpc	r17, r1
    1280:	19 f4       	brne	.+6      	; 0x1288 <__pack_f+0x50>
    1282:	e0 e0       	ldi	r30, 0x00	; 0
    1284:	f0 e0       	ldi	r31, 0x00	; 0
    1286:	96 c0       	rjmp	.+300    	; 0x13b4 <__pack_f+0x17c>
    1288:	62 81       	ldd	r22, Z+2	; 0x02
    128a:	73 81       	ldd	r23, Z+3	; 0x03
    128c:	9f ef       	ldi	r25, 0xFF	; 255
    128e:	62 38       	cpi	r22, 0x82	; 130
    1290:	79 07       	cpc	r23, r25
    1292:	0c f0       	brlt	.+2      	; 0x1296 <__pack_f+0x5e>
    1294:	5b c0       	rjmp	.+182    	; 0x134c <__pack_f+0x114>
    1296:	22 e8       	ldi	r18, 0x82	; 130
    1298:	3f ef       	ldi	r19, 0xFF	; 255
    129a:	26 1b       	sub	r18, r22
    129c:	37 0b       	sbc	r19, r23
    129e:	2a 31       	cpi	r18, 0x1A	; 26
    12a0:	31 05       	cpc	r19, r1
    12a2:	2c f0       	brlt	.+10     	; 0x12ae <__pack_f+0x76>
    12a4:	20 e0       	ldi	r18, 0x00	; 0
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	40 e0       	ldi	r20, 0x00	; 0
    12aa:	50 e0       	ldi	r21, 0x00	; 0
    12ac:	2a c0       	rjmp	.+84     	; 0x1302 <__pack_f+0xca>
    12ae:	b8 01       	movw	r22, r16
    12b0:	a7 01       	movw	r20, r14
    12b2:	02 2e       	mov	r0, r18
    12b4:	04 c0       	rjmp	.+8      	; 0x12be <__pack_f+0x86>
    12b6:	76 95       	lsr	r23
    12b8:	67 95       	ror	r22
    12ba:	57 95       	ror	r21
    12bc:	47 95       	ror	r20
    12be:	0a 94       	dec	r0
    12c0:	d2 f7       	brpl	.-12     	; 0x12b6 <__pack_f+0x7e>
    12c2:	81 e0       	ldi	r24, 0x01	; 1
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	a0 e0       	ldi	r26, 0x00	; 0
    12c8:	b0 e0       	ldi	r27, 0x00	; 0
    12ca:	04 c0       	rjmp	.+8      	; 0x12d4 <__pack_f+0x9c>
    12cc:	88 0f       	add	r24, r24
    12ce:	99 1f       	adc	r25, r25
    12d0:	aa 1f       	adc	r26, r26
    12d2:	bb 1f       	adc	r27, r27
    12d4:	2a 95       	dec	r18
    12d6:	d2 f7       	brpl	.-12     	; 0x12cc <__pack_f+0x94>
    12d8:	01 97       	sbiw	r24, 0x01	; 1
    12da:	a1 09       	sbc	r26, r1
    12dc:	b1 09       	sbc	r27, r1
    12de:	8e 21       	and	r24, r14
    12e0:	9f 21       	and	r25, r15
    12e2:	a0 23       	and	r26, r16
    12e4:	b1 23       	and	r27, r17
    12e6:	00 97       	sbiw	r24, 0x00	; 0
    12e8:	a1 05       	cpc	r26, r1
    12ea:	b1 05       	cpc	r27, r1
    12ec:	21 f0       	breq	.+8      	; 0x12f6 <__pack_f+0xbe>
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	a0 e0       	ldi	r26, 0x00	; 0
    12f4:	b0 e0       	ldi	r27, 0x00	; 0
    12f6:	9a 01       	movw	r18, r20
    12f8:	ab 01       	movw	r20, r22
    12fa:	28 2b       	or	r18, r24
    12fc:	39 2b       	or	r19, r25
    12fe:	4a 2b       	or	r20, r26
    1300:	5b 2b       	or	r21, r27
    1302:	da 01       	movw	r26, r20
    1304:	c9 01       	movw	r24, r18
    1306:	8f 77       	andi	r24, 0x7F	; 127
    1308:	90 70       	andi	r25, 0x00	; 0
    130a:	a0 70       	andi	r26, 0x00	; 0
    130c:	b0 70       	andi	r27, 0x00	; 0
    130e:	80 34       	cpi	r24, 0x40	; 64
    1310:	91 05       	cpc	r25, r1
    1312:	a1 05       	cpc	r26, r1
    1314:	b1 05       	cpc	r27, r1
    1316:	39 f4       	brne	.+14     	; 0x1326 <__pack_f+0xee>
    1318:	27 ff       	sbrs	r18, 7
    131a:	09 c0       	rjmp	.+18     	; 0x132e <__pack_f+0xf6>
    131c:	20 5c       	subi	r18, 0xC0	; 192
    131e:	3f 4f       	sbci	r19, 0xFF	; 255
    1320:	4f 4f       	sbci	r20, 0xFF	; 255
    1322:	5f 4f       	sbci	r21, 0xFF	; 255
    1324:	04 c0       	rjmp	.+8      	; 0x132e <__pack_f+0xf6>
    1326:	21 5c       	subi	r18, 0xC1	; 193
    1328:	3f 4f       	sbci	r19, 0xFF	; 255
    132a:	4f 4f       	sbci	r20, 0xFF	; 255
    132c:	5f 4f       	sbci	r21, 0xFF	; 255
    132e:	e0 e0       	ldi	r30, 0x00	; 0
    1330:	f0 e0       	ldi	r31, 0x00	; 0
    1332:	20 30       	cpi	r18, 0x00	; 0
    1334:	a0 e0       	ldi	r26, 0x00	; 0
    1336:	3a 07       	cpc	r19, r26
    1338:	a0 e0       	ldi	r26, 0x00	; 0
    133a:	4a 07       	cpc	r20, r26
    133c:	a0 e4       	ldi	r26, 0x40	; 64
    133e:	5a 07       	cpc	r21, r26
    1340:	10 f0       	brcs	.+4      	; 0x1346 <__pack_f+0x10e>
    1342:	e1 e0       	ldi	r30, 0x01	; 1
    1344:	f0 e0       	ldi	r31, 0x00	; 0
    1346:	79 01       	movw	r14, r18
    1348:	8a 01       	movw	r16, r20
    134a:	27 c0       	rjmp	.+78     	; 0x139a <__pack_f+0x162>
    134c:	60 38       	cpi	r22, 0x80	; 128
    134e:	71 05       	cpc	r23, r1
    1350:	64 f5       	brge	.+88     	; 0x13aa <__pack_f+0x172>
    1352:	fb 01       	movw	r30, r22
    1354:	e1 58       	subi	r30, 0x81	; 129
    1356:	ff 4f       	sbci	r31, 0xFF	; 255
    1358:	d8 01       	movw	r26, r16
    135a:	c7 01       	movw	r24, r14
    135c:	8f 77       	andi	r24, 0x7F	; 127
    135e:	90 70       	andi	r25, 0x00	; 0
    1360:	a0 70       	andi	r26, 0x00	; 0
    1362:	b0 70       	andi	r27, 0x00	; 0
    1364:	80 34       	cpi	r24, 0x40	; 64
    1366:	91 05       	cpc	r25, r1
    1368:	a1 05       	cpc	r26, r1
    136a:	b1 05       	cpc	r27, r1
    136c:	39 f4       	brne	.+14     	; 0x137c <__pack_f+0x144>
    136e:	e7 fe       	sbrs	r14, 7
    1370:	0d c0       	rjmp	.+26     	; 0x138c <__pack_f+0x154>
    1372:	80 e4       	ldi	r24, 0x40	; 64
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	a0 e0       	ldi	r26, 0x00	; 0
    1378:	b0 e0       	ldi	r27, 0x00	; 0
    137a:	04 c0       	rjmp	.+8      	; 0x1384 <__pack_f+0x14c>
    137c:	8f e3       	ldi	r24, 0x3F	; 63
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	a0 e0       	ldi	r26, 0x00	; 0
    1382:	b0 e0       	ldi	r27, 0x00	; 0
    1384:	e8 0e       	add	r14, r24
    1386:	f9 1e       	adc	r15, r25
    1388:	0a 1f       	adc	r16, r26
    138a:	1b 1f       	adc	r17, r27
    138c:	17 ff       	sbrs	r17, 7
    138e:	05 c0       	rjmp	.+10     	; 0x139a <__pack_f+0x162>
    1390:	16 95       	lsr	r17
    1392:	07 95       	ror	r16
    1394:	f7 94       	ror	r15
    1396:	e7 94       	ror	r14
    1398:	31 96       	adiw	r30, 0x01	; 1
    139a:	87 e0       	ldi	r24, 0x07	; 7
    139c:	16 95       	lsr	r17
    139e:	07 95       	ror	r16
    13a0:	f7 94       	ror	r15
    13a2:	e7 94       	ror	r14
    13a4:	8a 95       	dec	r24
    13a6:	d1 f7       	brne	.-12     	; 0x139c <__pack_f+0x164>
    13a8:	05 c0       	rjmp	.+10     	; 0x13b4 <__pack_f+0x17c>
    13aa:	ee 24       	eor	r14, r14
    13ac:	ff 24       	eor	r15, r15
    13ae:	87 01       	movw	r16, r14
    13b0:	ef ef       	ldi	r30, 0xFF	; 255
    13b2:	f0 e0       	ldi	r31, 0x00	; 0
    13b4:	6e 2f       	mov	r22, r30
    13b6:	67 95       	ror	r22
    13b8:	66 27       	eor	r22, r22
    13ba:	67 95       	ror	r22
    13bc:	90 2f       	mov	r25, r16
    13be:	9f 77       	andi	r25, 0x7F	; 127
    13c0:	d7 94       	ror	r13
    13c2:	dd 24       	eor	r13, r13
    13c4:	d7 94       	ror	r13
    13c6:	8e 2f       	mov	r24, r30
    13c8:	86 95       	lsr	r24
    13ca:	49 2f       	mov	r20, r25
    13cc:	46 2b       	or	r20, r22
    13ce:	58 2f       	mov	r21, r24
    13d0:	5d 29       	or	r21, r13
    13d2:	b7 01       	movw	r22, r14
    13d4:	ca 01       	movw	r24, r20
    13d6:	1f 91       	pop	r17
    13d8:	0f 91       	pop	r16
    13da:	ff 90       	pop	r15
    13dc:	ef 90       	pop	r14
    13de:	df 90       	pop	r13
    13e0:	08 95       	ret

000013e2 <__unpack_f>:
    13e2:	fc 01       	movw	r30, r24
    13e4:	db 01       	movw	r26, r22
    13e6:	40 81       	ld	r20, Z
    13e8:	51 81       	ldd	r21, Z+1	; 0x01
    13ea:	22 81       	ldd	r18, Z+2	; 0x02
    13ec:	62 2f       	mov	r22, r18
    13ee:	6f 77       	andi	r22, 0x7F	; 127
    13f0:	70 e0       	ldi	r23, 0x00	; 0
    13f2:	22 1f       	adc	r18, r18
    13f4:	22 27       	eor	r18, r18
    13f6:	22 1f       	adc	r18, r18
    13f8:	93 81       	ldd	r25, Z+3	; 0x03
    13fa:	89 2f       	mov	r24, r25
    13fc:	88 0f       	add	r24, r24
    13fe:	82 2b       	or	r24, r18
    1400:	28 2f       	mov	r18, r24
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	99 1f       	adc	r25, r25
    1406:	99 27       	eor	r25, r25
    1408:	99 1f       	adc	r25, r25
    140a:	11 96       	adiw	r26, 0x01	; 1
    140c:	9c 93       	st	X, r25
    140e:	11 97       	sbiw	r26, 0x01	; 1
    1410:	21 15       	cp	r18, r1
    1412:	31 05       	cpc	r19, r1
    1414:	a9 f5       	brne	.+106    	; 0x1480 <__unpack_f+0x9e>
    1416:	41 15       	cp	r20, r1
    1418:	51 05       	cpc	r21, r1
    141a:	61 05       	cpc	r22, r1
    141c:	71 05       	cpc	r23, r1
    141e:	11 f4       	brne	.+4      	; 0x1424 <__unpack_f+0x42>
    1420:	82 e0       	ldi	r24, 0x02	; 2
    1422:	37 c0       	rjmp	.+110    	; 0x1492 <__unpack_f+0xb0>
    1424:	82 e8       	ldi	r24, 0x82	; 130
    1426:	9f ef       	ldi	r25, 0xFF	; 255
    1428:	13 96       	adiw	r26, 0x03	; 3
    142a:	9c 93       	st	X, r25
    142c:	8e 93       	st	-X, r24
    142e:	12 97       	sbiw	r26, 0x02	; 2
    1430:	9a 01       	movw	r18, r20
    1432:	ab 01       	movw	r20, r22
    1434:	67 e0       	ldi	r22, 0x07	; 7
    1436:	22 0f       	add	r18, r18
    1438:	33 1f       	adc	r19, r19
    143a:	44 1f       	adc	r20, r20
    143c:	55 1f       	adc	r21, r21
    143e:	6a 95       	dec	r22
    1440:	d1 f7       	brne	.-12     	; 0x1436 <__unpack_f+0x54>
    1442:	83 e0       	ldi	r24, 0x03	; 3
    1444:	8c 93       	st	X, r24
    1446:	0d c0       	rjmp	.+26     	; 0x1462 <__unpack_f+0x80>
    1448:	22 0f       	add	r18, r18
    144a:	33 1f       	adc	r19, r19
    144c:	44 1f       	adc	r20, r20
    144e:	55 1f       	adc	r21, r21
    1450:	12 96       	adiw	r26, 0x02	; 2
    1452:	8d 91       	ld	r24, X+
    1454:	9c 91       	ld	r25, X
    1456:	13 97       	sbiw	r26, 0x03	; 3
    1458:	01 97       	sbiw	r24, 0x01	; 1
    145a:	13 96       	adiw	r26, 0x03	; 3
    145c:	9c 93       	st	X, r25
    145e:	8e 93       	st	-X, r24
    1460:	12 97       	sbiw	r26, 0x02	; 2
    1462:	20 30       	cpi	r18, 0x00	; 0
    1464:	80 e0       	ldi	r24, 0x00	; 0
    1466:	38 07       	cpc	r19, r24
    1468:	80 e0       	ldi	r24, 0x00	; 0
    146a:	48 07       	cpc	r20, r24
    146c:	80 e4       	ldi	r24, 0x40	; 64
    146e:	58 07       	cpc	r21, r24
    1470:	58 f3       	brcs	.-42     	; 0x1448 <__unpack_f+0x66>
    1472:	14 96       	adiw	r26, 0x04	; 4
    1474:	2d 93       	st	X+, r18
    1476:	3d 93       	st	X+, r19
    1478:	4d 93       	st	X+, r20
    147a:	5c 93       	st	X, r21
    147c:	17 97       	sbiw	r26, 0x07	; 7
    147e:	08 95       	ret
    1480:	2f 3f       	cpi	r18, 0xFF	; 255
    1482:	31 05       	cpc	r19, r1
    1484:	79 f4       	brne	.+30     	; 0x14a4 <__unpack_f+0xc2>
    1486:	41 15       	cp	r20, r1
    1488:	51 05       	cpc	r21, r1
    148a:	61 05       	cpc	r22, r1
    148c:	71 05       	cpc	r23, r1
    148e:	19 f4       	brne	.+6      	; 0x1496 <__unpack_f+0xb4>
    1490:	84 e0       	ldi	r24, 0x04	; 4
    1492:	8c 93       	st	X, r24
    1494:	08 95       	ret
    1496:	64 ff       	sbrs	r22, 4
    1498:	03 c0       	rjmp	.+6      	; 0x14a0 <__unpack_f+0xbe>
    149a:	81 e0       	ldi	r24, 0x01	; 1
    149c:	8c 93       	st	X, r24
    149e:	12 c0       	rjmp	.+36     	; 0x14c4 <__unpack_f+0xe2>
    14a0:	1c 92       	st	X, r1
    14a2:	10 c0       	rjmp	.+32     	; 0x14c4 <__unpack_f+0xe2>
    14a4:	2f 57       	subi	r18, 0x7F	; 127
    14a6:	30 40       	sbci	r19, 0x00	; 0
    14a8:	13 96       	adiw	r26, 0x03	; 3
    14aa:	3c 93       	st	X, r19
    14ac:	2e 93       	st	-X, r18
    14ae:	12 97       	sbiw	r26, 0x02	; 2
    14b0:	83 e0       	ldi	r24, 0x03	; 3
    14b2:	8c 93       	st	X, r24
    14b4:	87 e0       	ldi	r24, 0x07	; 7
    14b6:	44 0f       	add	r20, r20
    14b8:	55 1f       	adc	r21, r21
    14ba:	66 1f       	adc	r22, r22
    14bc:	77 1f       	adc	r23, r23
    14be:	8a 95       	dec	r24
    14c0:	d1 f7       	brne	.-12     	; 0x14b6 <__unpack_f+0xd4>
    14c2:	70 64       	ori	r23, 0x40	; 64
    14c4:	14 96       	adiw	r26, 0x04	; 4
    14c6:	4d 93       	st	X+, r20
    14c8:	5d 93       	st	X+, r21
    14ca:	6d 93       	st	X+, r22
    14cc:	7c 93       	st	X, r23
    14ce:	17 97       	sbiw	r26, 0x07	; 7
    14d0:	08 95       	ret

000014d2 <__fpcmp_parts_f>:
    14d2:	1f 93       	push	r17
    14d4:	dc 01       	movw	r26, r24
    14d6:	fb 01       	movw	r30, r22
    14d8:	9c 91       	ld	r25, X
    14da:	92 30       	cpi	r25, 0x02	; 2
    14dc:	08 f4       	brcc	.+2      	; 0x14e0 <__fpcmp_parts_f+0xe>
    14de:	47 c0       	rjmp	.+142    	; 0x156e <__fpcmp_parts_f+0x9c>
    14e0:	80 81       	ld	r24, Z
    14e2:	82 30       	cpi	r24, 0x02	; 2
    14e4:	08 f4       	brcc	.+2      	; 0x14e8 <__fpcmp_parts_f+0x16>
    14e6:	43 c0       	rjmp	.+134    	; 0x156e <__fpcmp_parts_f+0x9c>
    14e8:	94 30       	cpi	r25, 0x04	; 4
    14ea:	51 f4       	brne	.+20     	; 0x1500 <__fpcmp_parts_f+0x2e>
    14ec:	11 96       	adiw	r26, 0x01	; 1
    14ee:	1c 91       	ld	r17, X
    14f0:	84 30       	cpi	r24, 0x04	; 4
    14f2:	99 f5       	brne	.+102    	; 0x155a <__fpcmp_parts_f+0x88>
    14f4:	81 81       	ldd	r24, Z+1	; 0x01
    14f6:	68 2f       	mov	r22, r24
    14f8:	70 e0       	ldi	r23, 0x00	; 0
    14fa:	61 1b       	sub	r22, r17
    14fc:	71 09       	sbc	r23, r1
    14fe:	3f c0       	rjmp	.+126    	; 0x157e <__fpcmp_parts_f+0xac>
    1500:	84 30       	cpi	r24, 0x04	; 4
    1502:	21 f0       	breq	.+8      	; 0x150c <__fpcmp_parts_f+0x3a>
    1504:	92 30       	cpi	r25, 0x02	; 2
    1506:	31 f4       	brne	.+12     	; 0x1514 <__fpcmp_parts_f+0x42>
    1508:	82 30       	cpi	r24, 0x02	; 2
    150a:	b9 f1       	breq	.+110    	; 0x157a <__fpcmp_parts_f+0xa8>
    150c:	81 81       	ldd	r24, Z+1	; 0x01
    150e:	88 23       	and	r24, r24
    1510:	89 f1       	breq	.+98     	; 0x1574 <__fpcmp_parts_f+0xa2>
    1512:	2d c0       	rjmp	.+90     	; 0x156e <__fpcmp_parts_f+0x9c>
    1514:	11 96       	adiw	r26, 0x01	; 1
    1516:	1c 91       	ld	r17, X
    1518:	11 97       	sbiw	r26, 0x01	; 1
    151a:	82 30       	cpi	r24, 0x02	; 2
    151c:	f1 f0       	breq	.+60     	; 0x155a <__fpcmp_parts_f+0x88>
    151e:	81 81       	ldd	r24, Z+1	; 0x01
    1520:	18 17       	cp	r17, r24
    1522:	d9 f4       	brne	.+54     	; 0x155a <__fpcmp_parts_f+0x88>
    1524:	12 96       	adiw	r26, 0x02	; 2
    1526:	2d 91       	ld	r18, X+
    1528:	3c 91       	ld	r19, X
    152a:	13 97       	sbiw	r26, 0x03	; 3
    152c:	82 81       	ldd	r24, Z+2	; 0x02
    152e:	93 81       	ldd	r25, Z+3	; 0x03
    1530:	82 17       	cp	r24, r18
    1532:	93 07       	cpc	r25, r19
    1534:	94 f0       	brlt	.+36     	; 0x155a <__fpcmp_parts_f+0x88>
    1536:	28 17       	cp	r18, r24
    1538:	39 07       	cpc	r19, r25
    153a:	bc f0       	brlt	.+46     	; 0x156a <__fpcmp_parts_f+0x98>
    153c:	14 96       	adiw	r26, 0x04	; 4
    153e:	8d 91       	ld	r24, X+
    1540:	9d 91       	ld	r25, X+
    1542:	0d 90       	ld	r0, X+
    1544:	bc 91       	ld	r27, X
    1546:	a0 2d       	mov	r26, r0
    1548:	24 81       	ldd	r18, Z+4	; 0x04
    154a:	35 81       	ldd	r19, Z+5	; 0x05
    154c:	46 81       	ldd	r20, Z+6	; 0x06
    154e:	57 81       	ldd	r21, Z+7	; 0x07
    1550:	28 17       	cp	r18, r24
    1552:	39 07       	cpc	r19, r25
    1554:	4a 07       	cpc	r20, r26
    1556:	5b 07       	cpc	r21, r27
    1558:	18 f4       	brcc	.+6      	; 0x1560 <__fpcmp_parts_f+0x8e>
    155a:	11 23       	and	r17, r17
    155c:	41 f0       	breq	.+16     	; 0x156e <__fpcmp_parts_f+0x9c>
    155e:	0a c0       	rjmp	.+20     	; 0x1574 <__fpcmp_parts_f+0xa2>
    1560:	82 17       	cp	r24, r18
    1562:	93 07       	cpc	r25, r19
    1564:	a4 07       	cpc	r26, r20
    1566:	b5 07       	cpc	r27, r21
    1568:	40 f4       	brcc	.+16     	; 0x157a <__fpcmp_parts_f+0xa8>
    156a:	11 23       	and	r17, r17
    156c:	19 f0       	breq	.+6      	; 0x1574 <__fpcmp_parts_f+0xa2>
    156e:	61 e0       	ldi	r22, 0x01	; 1
    1570:	70 e0       	ldi	r23, 0x00	; 0
    1572:	05 c0       	rjmp	.+10     	; 0x157e <__fpcmp_parts_f+0xac>
    1574:	6f ef       	ldi	r22, 0xFF	; 255
    1576:	7f ef       	ldi	r23, 0xFF	; 255
    1578:	02 c0       	rjmp	.+4      	; 0x157e <__fpcmp_parts_f+0xac>
    157a:	60 e0       	ldi	r22, 0x00	; 0
    157c:	70 e0       	ldi	r23, 0x00	; 0
    157e:	cb 01       	movw	r24, r22
    1580:	1f 91       	pop	r17
    1582:	08 95       	ret

00001584 <__prologue_saves__>:
    1584:	2f 92       	push	r2
    1586:	3f 92       	push	r3
    1588:	4f 92       	push	r4
    158a:	5f 92       	push	r5
    158c:	6f 92       	push	r6
    158e:	7f 92       	push	r7
    1590:	8f 92       	push	r8
    1592:	9f 92       	push	r9
    1594:	af 92       	push	r10
    1596:	bf 92       	push	r11
    1598:	cf 92       	push	r12
    159a:	df 92       	push	r13
    159c:	ef 92       	push	r14
    159e:	ff 92       	push	r15
    15a0:	0f 93       	push	r16
    15a2:	1f 93       	push	r17
    15a4:	cf 93       	push	r28
    15a6:	df 93       	push	r29
    15a8:	cd b7       	in	r28, 0x3d	; 61
    15aa:	de b7       	in	r29, 0x3e	; 62
    15ac:	ca 1b       	sub	r28, r26
    15ae:	db 0b       	sbc	r29, r27
    15b0:	0f b6       	in	r0, 0x3f	; 63
    15b2:	f8 94       	cli
    15b4:	de bf       	out	0x3e, r29	; 62
    15b6:	0f be       	out	0x3f, r0	; 63
    15b8:	cd bf       	out	0x3d, r28	; 61
    15ba:	09 94       	ijmp

000015bc <__epilogue_restores__>:
    15bc:	2a 88       	ldd	r2, Y+18	; 0x12
    15be:	39 88       	ldd	r3, Y+17	; 0x11
    15c0:	48 88       	ldd	r4, Y+16	; 0x10
    15c2:	5f 84       	ldd	r5, Y+15	; 0x0f
    15c4:	6e 84       	ldd	r6, Y+14	; 0x0e
    15c6:	7d 84       	ldd	r7, Y+13	; 0x0d
    15c8:	8c 84       	ldd	r8, Y+12	; 0x0c
    15ca:	9b 84       	ldd	r9, Y+11	; 0x0b
    15cc:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ce:	b9 84       	ldd	r11, Y+9	; 0x09
    15d0:	c8 84       	ldd	r12, Y+8	; 0x08
    15d2:	df 80       	ldd	r13, Y+7	; 0x07
    15d4:	ee 80       	ldd	r14, Y+6	; 0x06
    15d6:	fd 80       	ldd	r15, Y+5	; 0x05
    15d8:	0c 81       	ldd	r16, Y+4	; 0x04
    15da:	1b 81       	ldd	r17, Y+3	; 0x03
    15dc:	aa 81       	ldd	r26, Y+2	; 0x02
    15de:	b9 81       	ldd	r27, Y+1	; 0x01
    15e0:	ce 0f       	add	r28, r30
    15e2:	d1 1d       	adc	r29, r1
    15e4:	0f b6       	in	r0, 0x3f	; 63
    15e6:	f8 94       	cli
    15e8:	de bf       	out	0x3e, r29	; 62
    15ea:	0f be       	out	0x3f, r0	; 63
    15ec:	cd bf       	out	0x3d, r28	; 61
    15ee:	ed 01       	movw	r28, r26
    15f0:	08 95       	ret

000015f2 <_exit>:
    15f2:	f8 94       	cli

000015f4 <__stop_program>:
    15f4:	ff cf       	rjmp	.-2      	; 0x15f4 <__stop_program>
