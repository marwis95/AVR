
therm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000041d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  000041d4  00004248  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  0080007e  000041f2  00004266  2**0
                  ALLOC
  3 .stab         00002a00  00000000  00000000  00004268  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000c03  00000000  00000000  00006c68  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 55 1a 	jmp	0x34aa	; 0x34aa <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ed       	ldi	r30, 0xD4	; 212
      68:	f1 e4       	ldi	r31, 0x41	; 65
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 37       	cpi	r26, 0x7E	; 126
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	ae e7       	ldi	r26, 0x7E	; 126
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 38       	cpi	r26, 0x88	; 136
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 ce 1a 	call	0x359c	; 0x359c <main>
      8a:	0c 94 e8 20 	jmp	0x41d0	; 0x41d0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <LCDinit>:
#include "LCD_lib.h"
#include "conf.h"

//Initializes LCD
void LCDinit(void)
{
      92:	0f 93       	push	r16
      94:	1f 93       	push	r17
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
      9e:	ca 59       	subi	r28, 0x9A	; 154
      a0:	d1 40       	sbci	r29, 0x01	; 1
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	fe 01       	movw	r30, r28
      ae:	ed 56       	subi	r30, 0x6D	; 109
      b0:	fe 4f       	sbci	r31, 0xFE	; 254
      b2:	80 e0       	ldi	r24, 0x00	; 0
      b4:	90 e0       	ldi	r25, 0x00	; 0
      b6:	a0 e7       	ldi	r26, 0x70	; 112
      b8:	b1 e4       	ldi	r27, 0x41	; 65
      ba:	80 83       	st	Z, r24
      bc:	91 83       	std	Z+1, r25	; 0x01
      be:	a2 83       	std	Z+2, r26	; 0x02
      c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      c2:	8e 01       	movw	r16, r28
      c4:	01 57       	subi	r16, 0x71	; 113
      c6:	1e 4f       	sbci	r17, 0xFE	; 254
      c8:	fe 01       	movw	r30, r28
      ca:	ed 56       	subi	r30, 0x6D	; 109
      cc:	fe 4f       	sbci	r31, 0xFE	; 254
      ce:	20 e0       	ldi	r18, 0x00	; 0
      d0:	30 e0       	ldi	r19, 0x00	; 0
      d2:	4a e7       	ldi	r20, 0x7A	; 122
      d4:	53 e4       	ldi	r21, 0x43	; 67
      d6:	60 81       	ld	r22, Z
      d8:	71 81       	ldd	r23, Z+1	; 0x01
      da:	82 81       	ldd	r24, Z+2	; 0x02
      dc:	93 81       	ldd	r25, Z+3	; 0x03
      de:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
      e2:	dc 01       	movw	r26, r24
      e4:	cb 01       	movw	r24, r22
      e6:	f8 01       	movw	r30, r16
      e8:	80 83       	st	Z, r24
      ea:	91 83       	std	Z+1, r25	; 0x01
      ec:	a2 83       	std	Z+2, r26	; 0x02
      ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
      f0:	fe 01       	movw	r30, r28
      f2:	e1 57       	subi	r30, 0x71	; 113
      f4:	fe 4f       	sbci	r31, 0xFE	; 254
      f6:	20 e0       	ldi	r18, 0x00	; 0
      f8:	30 e0       	ldi	r19, 0x00	; 0
      fa:	40 e8       	ldi	r20, 0x80	; 128
      fc:	5f e3       	ldi	r21, 0x3F	; 63
      fe:	60 81       	ld	r22, Z
     100:	71 81       	ldd	r23, Z+1	; 0x01
     102:	82 81       	ldd	r24, Z+2	; 0x02
     104:	93 81       	ldd	r25, Z+3	; 0x03
     106:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     10a:	88 23       	and	r24, r24
     10c:	44 f4       	brge	.+16     	; 0x11e <LCDinit+0x8c>
		__ticks = 1;
     10e:	fe 01       	movw	r30, r28
     110:	e3 57       	subi	r30, 0x73	; 115
     112:	fe 4f       	sbci	r31, 0xFE	; 254
     114:	81 e0       	ldi	r24, 0x01	; 1
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	91 83       	std	Z+1, r25	; 0x01
     11a:	80 83       	st	Z, r24
     11c:	64 c0       	rjmp	.+200    	; 0x1e6 <LCDinit+0x154>
	else if (__tmp > 65535)
     11e:	fe 01       	movw	r30, r28
     120:	e1 57       	subi	r30, 0x71	; 113
     122:	fe 4f       	sbci	r31, 0xFE	; 254
     124:	20 e0       	ldi	r18, 0x00	; 0
     126:	3f ef       	ldi	r19, 0xFF	; 255
     128:	4f e7       	ldi	r20, 0x7F	; 127
     12a:	57 e4       	ldi	r21, 0x47	; 71
     12c:	60 81       	ld	r22, Z
     12e:	71 81       	ldd	r23, Z+1	; 0x01
     130:	82 81       	ldd	r24, Z+2	; 0x02
     132:	93 81       	ldd	r25, Z+3	; 0x03
     134:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     138:	18 16       	cp	r1, r24
     13a:	0c f0       	brlt	.+2      	; 0x13e <LCDinit+0xac>
     13c:	43 c0       	rjmp	.+134    	; 0x1c4 <LCDinit+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     13e:	fe 01       	movw	r30, r28
     140:	ed 56       	subi	r30, 0x6D	; 109
     142:	fe 4f       	sbci	r31, 0xFE	; 254
     144:	20 e0       	ldi	r18, 0x00	; 0
     146:	30 e0       	ldi	r19, 0x00	; 0
     148:	40 e2       	ldi	r20, 0x20	; 32
     14a:	51 e4       	ldi	r21, 0x41	; 65
     14c:	60 81       	ld	r22, Z
     14e:	71 81       	ldd	r23, Z+1	; 0x01
     150:	82 81       	ldd	r24, Z+2	; 0x02
     152:	93 81       	ldd	r25, Z+3	; 0x03
     154:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     158:	dc 01       	movw	r26, r24
     15a:	cb 01       	movw	r24, r22
     15c:	8e 01       	movw	r16, r28
     15e:	03 57       	subi	r16, 0x73	; 115
     160:	1e 4f       	sbci	r17, 0xFE	; 254
     162:	bc 01       	movw	r22, r24
     164:	cd 01       	movw	r24, r26
     166:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     16a:	dc 01       	movw	r26, r24
     16c:	cb 01       	movw	r24, r22
     16e:	f8 01       	movw	r30, r16
     170:	91 83       	std	Z+1, r25	; 0x01
     172:	80 83       	st	Z, r24
     174:	1f c0       	rjmp	.+62     	; 0x1b4 <LCDinit+0x122>
     176:	fe 01       	movw	r30, r28
     178:	e5 57       	subi	r30, 0x75	; 117
     17a:	fe 4f       	sbci	r31, 0xFE	; 254
     17c:	89 e1       	ldi	r24, 0x19	; 25
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	91 83       	std	Z+1, r25	; 0x01
     182:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     184:	fe 01       	movw	r30, r28
     186:	e5 57       	subi	r30, 0x75	; 117
     188:	fe 4f       	sbci	r31, 0xFE	; 254
     18a:	80 81       	ld	r24, Z
     18c:	91 81       	ldd	r25, Z+1	; 0x01
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	f1 f7       	brne	.-4      	; 0x18e <LCDinit+0xfc>
     192:	fe 01       	movw	r30, r28
     194:	e5 57       	subi	r30, 0x75	; 117
     196:	fe 4f       	sbci	r31, 0xFE	; 254
     198:	91 83       	std	Z+1, r25	; 0x01
     19a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     19c:	de 01       	movw	r26, r28
     19e:	a3 57       	subi	r26, 0x73	; 115
     1a0:	be 4f       	sbci	r27, 0xFE	; 254
     1a2:	fe 01       	movw	r30, r28
     1a4:	e3 57       	subi	r30, 0x73	; 115
     1a6:	fe 4f       	sbci	r31, 0xFE	; 254
     1a8:	80 81       	ld	r24, Z
     1aa:	91 81       	ldd	r25, Z+1	; 0x01
     1ac:	01 97       	sbiw	r24, 0x01	; 1
     1ae:	11 96       	adiw	r26, 0x01	; 1
     1b0:	9c 93       	st	X, r25
     1b2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1b4:	fe 01       	movw	r30, r28
     1b6:	e3 57       	subi	r30, 0x73	; 115
     1b8:	fe 4f       	sbci	r31, 0xFE	; 254
     1ba:	80 81       	ld	r24, Z
     1bc:	91 81       	ldd	r25, Z+1	; 0x01
     1be:	00 97       	sbiw	r24, 0x00	; 0
     1c0:	d1 f6       	brne	.-76     	; 0x176 <LCDinit+0xe4>
     1c2:	27 c0       	rjmp	.+78     	; 0x212 <LCDinit+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1c4:	8e 01       	movw	r16, r28
     1c6:	03 57       	subi	r16, 0x73	; 115
     1c8:	1e 4f       	sbci	r17, 0xFE	; 254
     1ca:	fe 01       	movw	r30, r28
     1cc:	e1 57       	subi	r30, 0x71	; 113
     1ce:	fe 4f       	sbci	r31, 0xFE	; 254
     1d0:	60 81       	ld	r22, Z
     1d2:	71 81       	ldd	r23, Z+1	; 0x01
     1d4:	82 81       	ldd	r24, Z+2	; 0x02
     1d6:	93 81       	ldd	r25, Z+3	; 0x03
     1d8:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	f8 01       	movw	r30, r16
     1e2:	91 83       	std	Z+1, r25	; 0x01
     1e4:	80 83       	st	Z, r24
     1e6:	de 01       	movw	r26, r28
     1e8:	a7 57       	subi	r26, 0x77	; 119
     1ea:	be 4f       	sbci	r27, 0xFE	; 254
     1ec:	fe 01       	movw	r30, r28
     1ee:	e3 57       	subi	r30, 0x73	; 115
     1f0:	fe 4f       	sbci	r31, 0xFE	; 254
     1f2:	80 81       	ld	r24, Z
     1f4:	91 81       	ldd	r25, Z+1	; 0x01
     1f6:	8d 93       	st	X+, r24
     1f8:	9c 93       	st	X, r25
     1fa:	fe 01       	movw	r30, r28
     1fc:	e7 57       	subi	r30, 0x77	; 119
     1fe:	fe 4f       	sbci	r31, 0xFE	; 254
     200:	80 81       	ld	r24, Z
     202:	91 81       	ldd	r25, Z+1	; 0x01
     204:	01 97       	sbiw	r24, 0x01	; 1
     206:	f1 f7       	brne	.-4      	; 0x204 <LCDinit+0x172>
     208:	fe 01       	movw	r30, r28
     20a:	e7 57       	subi	r30, 0x77	; 119
     20c:	fe 4f       	sbci	r31, 0xFE	; 254
     20e:	91 83       	std	Z+1, r25	; 0x01
     210:	80 83       	st	Z, r24
	_delay_ms(15);
	LDP=0x00;
     212:	e2 e3       	ldi	r30, 0x32	; 50
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	10 82       	st	Z, r1
	LCP=0x00;
     218:	e2 e3       	ldi	r30, 0x32	; 50
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	10 82       	st	Z, r1
	LDDR|=1<<LCD_D7|1<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
     21e:	a1 e3       	ldi	r26, 0x31	; 49
     220:	b0 e0       	ldi	r27, 0x00	; 0
     222:	e1 e3       	ldi	r30, 0x31	; 49
     224:	f0 e0       	ldi	r31, 0x00	; 0
     226:	80 81       	ld	r24, Z
     228:	8c 63       	ori	r24, 0x3C	; 60
     22a:	8c 93       	st	X, r24
	LCDR|=1<<LCD_E|1<<LCD_RS;
     22c:	a1 e3       	ldi	r26, 0x31	; 49
     22e:	b0 e0       	ldi	r27, 0x00	; 0
     230:	e1 e3       	ldi	r30, 0x31	; 49
     232:	f0 e0       	ldi	r31, 0x00	; 0
     234:	80 81       	ld	r24, Z
     236:	83 60       	ori	r24, 0x03	; 3
     238:	8c 93       	st	X, r24
    //--------- Write 0x03 -----------
	LDP|=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
     23a:	a2 e3       	ldi	r26, 0x32	; 50
     23c:	b0 e0       	ldi	r27, 0x00	; 0
     23e:	e2 e3       	ldi	r30, 0x32	; 50
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 81       	ld	r24, Z
     244:	8c 60       	ori	r24, 0x0C	; 12
     246:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
     248:	a2 e3       	ldi	r26, 0x32	; 50
     24a:	b0 e0       	ldi	r27, 0x00	; 0
     24c:	e2 e3       	ldi	r30, 0x32	; 50
     24e:	f0 e0       	ldi	r31, 0x00	; 0
     250:	80 81       	ld	r24, Z
     252:	82 60       	ori	r24, 0x02	; 2
     254:	8c 93       	st	X, r24
     256:	fe 01       	movw	r30, r28
     258:	eb 57       	subi	r30, 0x7B	; 123
     25a:	fe 4f       	sbci	r31, 0xFE	; 254
     25c:	80 e0       	ldi	r24, 0x00	; 0
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	a0 e8       	ldi	r26, 0x80	; 128
     262:	bf e3       	ldi	r27, 0x3F	; 63
     264:	80 83       	st	Z, r24
     266:	91 83       	std	Z+1, r25	; 0x01
     268:	a2 83       	std	Z+2, r26	; 0x02
     26a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     26c:	8e 01       	movw	r16, r28
     26e:	0f 57       	subi	r16, 0x7F	; 127
     270:	1e 4f       	sbci	r17, 0xFE	; 254
     272:	fe 01       	movw	r30, r28
     274:	eb 57       	subi	r30, 0x7B	; 123
     276:	fe 4f       	sbci	r31, 0xFE	; 254
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	4a e7       	ldi	r20, 0x7A	; 122
     27e:	53 e4       	ldi	r21, 0x43	; 67
     280:	60 81       	ld	r22, Z
     282:	71 81       	ldd	r23, Z+1	; 0x01
     284:	82 81       	ldd	r24, Z+2	; 0x02
     286:	93 81       	ldd	r25, Z+3	; 0x03
     288:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     28c:	dc 01       	movw	r26, r24
     28e:	cb 01       	movw	r24, r22
     290:	f8 01       	movw	r30, r16
     292:	80 83       	st	Z, r24
     294:	91 83       	std	Z+1, r25	; 0x01
     296:	a2 83       	std	Z+2, r26	; 0x02
     298:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     29a:	fe 01       	movw	r30, r28
     29c:	ef 57       	subi	r30, 0x7F	; 127
     29e:	fe 4f       	sbci	r31, 0xFE	; 254
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	40 e8       	ldi	r20, 0x80	; 128
     2a6:	5f e3       	ldi	r21, 0x3F	; 63
     2a8:	60 81       	ld	r22, Z
     2aa:	71 81       	ldd	r23, Z+1	; 0x01
     2ac:	82 81       	ldd	r24, Z+2	; 0x02
     2ae:	93 81       	ldd	r25, Z+3	; 0x03
     2b0:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     2b4:	88 23       	and	r24, r24
     2b6:	44 f4       	brge	.+16     	; 0x2c8 <LCDinit+0x236>
		__ticks = 1;
     2b8:	fe 01       	movw	r30, r28
     2ba:	e1 58       	subi	r30, 0x81	; 129
     2bc:	fe 4f       	sbci	r31, 0xFE	; 254
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	91 83       	std	Z+1, r25	; 0x01
     2c4:	80 83       	st	Z, r24
     2c6:	64 c0       	rjmp	.+200    	; 0x390 <LCDinit+0x2fe>
	else if (__tmp > 65535)
     2c8:	fe 01       	movw	r30, r28
     2ca:	ef 57       	subi	r30, 0x7F	; 127
     2cc:	fe 4f       	sbci	r31, 0xFE	; 254
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	3f ef       	ldi	r19, 0xFF	; 255
     2d2:	4f e7       	ldi	r20, 0x7F	; 127
     2d4:	57 e4       	ldi	r21, 0x47	; 71
     2d6:	60 81       	ld	r22, Z
     2d8:	71 81       	ldd	r23, Z+1	; 0x01
     2da:	82 81       	ldd	r24, Z+2	; 0x02
     2dc:	93 81       	ldd	r25, Z+3	; 0x03
     2de:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     2e2:	18 16       	cp	r1, r24
     2e4:	0c f0       	brlt	.+2      	; 0x2e8 <LCDinit+0x256>
     2e6:	43 c0       	rjmp	.+134    	; 0x36e <LCDinit+0x2dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2e8:	fe 01       	movw	r30, r28
     2ea:	eb 57       	subi	r30, 0x7B	; 123
     2ec:	fe 4f       	sbci	r31, 0xFE	; 254
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	40 e2       	ldi	r20, 0x20	; 32
     2f4:	51 e4       	ldi	r21, 0x41	; 65
     2f6:	60 81       	ld	r22, Z
     2f8:	71 81       	ldd	r23, Z+1	; 0x01
     2fa:	82 81       	ldd	r24, Z+2	; 0x02
     2fc:	93 81       	ldd	r25, Z+3	; 0x03
     2fe:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     302:	dc 01       	movw	r26, r24
     304:	cb 01       	movw	r24, r22
     306:	8e 01       	movw	r16, r28
     308:	01 58       	subi	r16, 0x81	; 129
     30a:	1e 4f       	sbci	r17, 0xFE	; 254
     30c:	bc 01       	movw	r22, r24
     30e:	cd 01       	movw	r24, r26
     310:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     314:	dc 01       	movw	r26, r24
     316:	cb 01       	movw	r24, r22
     318:	f8 01       	movw	r30, r16
     31a:	91 83       	std	Z+1, r25	; 0x01
     31c:	80 83       	st	Z, r24
     31e:	1f c0       	rjmp	.+62     	; 0x35e <LCDinit+0x2cc>
     320:	fe 01       	movw	r30, r28
     322:	e3 58       	subi	r30, 0x83	; 131
     324:	fe 4f       	sbci	r31, 0xFE	; 254
     326:	89 e1       	ldi	r24, 0x19	; 25
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	91 83       	std	Z+1, r25	; 0x01
     32c:	80 83       	st	Z, r24
     32e:	fe 01       	movw	r30, r28
     330:	e3 58       	subi	r30, 0x83	; 131
     332:	fe 4f       	sbci	r31, 0xFE	; 254
     334:	80 81       	ld	r24, Z
     336:	91 81       	ldd	r25, Z+1	; 0x01
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <LCDinit+0x2a6>
     33c:	fe 01       	movw	r30, r28
     33e:	e3 58       	subi	r30, 0x83	; 131
     340:	fe 4f       	sbci	r31, 0xFE	; 254
     342:	91 83       	std	Z+1, r25	; 0x01
     344:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     346:	de 01       	movw	r26, r28
     348:	a1 58       	subi	r26, 0x81	; 129
     34a:	be 4f       	sbci	r27, 0xFE	; 254
     34c:	fe 01       	movw	r30, r28
     34e:	e1 58       	subi	r30, 0x81	; 129
     350:	fe 4f       	sbci	r31, 0xFE	; 254
     352:	80 81       	ld	r24, Z
     354:	91 81       	ldd	r25, Z+1	; 0x01
     356:	01 97       	sbiw	r24, 0x01	; 1
     358:	11 96       	adiw	r26, 0x01	; 1
     35a:	9c 93       	st	X, r25
     35c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     35e:	fe 01       	movw	r30, r28
     360:	e1 58       	subi	r30, 0x81	; 129
     362:	fe 4f       	sbci	r31, 0xFE	; 254
     364:	80 81       	ld	r24, Z
     366:	91 81       	ldd	r25, Z+1	; 0x01
     368:	00 97       	sbiw	r24, 0x00	; 0
     36a:	d1 f6       	brne	.-76     	; 0x320 <LCDinit+0x28e>
     36c:	27 c0       	rjmp	.+78     	; 0x3bc <LCDinit+0x32a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     36e:	8e 01       	movw	r16, r28
     370:	01 58       	subi	r16, 0x81	; 129
     372:	1e 4f       	sbci	r17, 0xFE	; 254
     374:	fe 01       	movw	r30, r28
     376:	ef 57       	subi	r30, 0x7F	; 127
     378:	fe 4f       	sbci	r31, 0xFE	; 254
     37a:	60 81       	ld	r22, Z
     37c:	71 81       	ldd	r23, Z+1	; 0x01
     37e:	82 81       	ldd	r24, Z+2	; 0x02
     380:	93 81       	ldd	r25, Z+3	; 0x03
     382:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     386:	dc 01       	movw	r26, r24
     388:	cb 01       	movw	r24, r22
     38a:	f8 01       	movw	r30, r16
     38c:	91 83       	std	Z+1, r25	; 0x01
     38e:	80 83       	st	Z, r24
     390:	de 01       	movw	r26, r28
     392:	a5 58       	subi	r26, 0x85	; 133
     394:	be 4f       	sbci	r27, 0xFE	; 254
     396:	fe 01       	movw	r30, r28
     398:	e1 58       	subi	r30, 0x81	; 129
     39a:	fe 4f       	sbci	r31, 0xFE	; 254
     39c:	80 81       	ld	r24, Z
     39e:	91 81       	ldd	r25, Z+1	; 0x01
     3a0:	8d 93       	st	X+, r24
     3a2:	9c 93       	st	X, r25
     3a4:	fe 01       	movw	r30, r28
     3a6:	e5 58       	subi	r30, 0x85	; 133
     3a8:	fe 4f       	sbci	r31, 0xFE	; 254
     3aa:	80 81       	ld	r24, Z
     3ac:	91 81       	ldd	r25, Z+1	; 0x01
     3ae:	01 97       	sbiw	r24, 0x01	; 1
     3b0:	f1 f7       	brne	.-4      	; 0x3ae <LCDinit+0x31c>
     3b2:	fe 01       	movw	r30, r28
     3b4:	e5 58       	subi	r30, 0x85	; 133
     3b6:	fe 4f       	sbci	r31, 0xFE	; 254
     3b8:	91 83       	std	Z+1, r25	; 0x01
     3ba:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     3bc:	a2 e3       	ldi	r26, 0x32	; 50
     3be:	b0 e0       	ldi	r27, 0x00	; 0
     3c0:	e2 e3       	ldi	r30, 0x32	; 50
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	80 81       	ld	r24, Z
     3c6:	8d 7f       	andi	r24, 0xFD	; 253
     3c8:	8c 93       	st	X, r24
     3ca:	fe 01       	movw	r30, r28
     3cc:	e9 58       	subi	r30, 0x89	; 137
     3ce:	fe 4f       	sbci	r31, 0xFE	; 254
     3d0:	80 e0       	ldi	r24, 0x00	; 0
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	a0 ea       	ldi	r26, 0xA0	; 160
     3d6:	b0 e4       	ldi	r27, 0x40	; 64
     3d8:	80 83       	st	Z, r24
     3da:	91 83       	std	Z+1, r25	; 0x01
     3dc:	a2 83       	std	Z+2, r26	; 0x02
     3de:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3e0:	8e 01       	movw	r16, r28
     3e2:	0d 58       	subi	r16, 0x8D	; 141
     3e4:	1e 4f       	sbci	r17, 0xFE	; 254
     3e6:	fe 01       	movw	r30, r28
     3e8:	e9 58       	subi	r30, 0x89	; 137
     3ea:	fe 4f       	sbci	r31, 0xFE	; 254
     3ec:	20 e0       	ldi	r18, 0x00	; 0
     3ee:	30 e0       	ldi	r19, 0x00	; 0
     3f0:	4a e7       	ldi	r20, 0x7A	; 122
     3f2:	53 e4       	ldi	r21, 0x43	; 67
     3f4:	60 81       	ld	r22, Z
     3f6:	71 81       	ldd	r23, Z+1	; 0x01
     3f8:	82 81       	ldd	r24, Z+2	; 0x02
     3fa:	93 81       	ldd	r25, Z+3	; 0x03
     3fc:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     400:	dc 01       	movw	r26, r24
     402:	cb 01       	movw	r24, r22
     404:	f8 01       	movw	r30, r16
     406:	80 83       	st	Z, r24
     408:	91 83       	std	Z+1, r25	; 0x01
     40a:	a2 83       	std	Z+2, r26	; 0x02
     40c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     40e:	fe 01       	movw	r30, r28
     410:	ed 58       	subi	r30, 0x8D	; 141
     412:	fe 4f       	sbci	r31, 0xFE	; 254
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	40 e8       	ldi	r20, 0x80	; 128
     41a:	5f e3       	ldi	r21, 0x3F	; 63
     41c:	60 81       	ld	r22, Z
     41e:	71 81       	ldd	r23, Z+1	; 0x01
     420:	82 81       	ldd	r24, Z+2	; 0x02
     422:	93 81       	ldd	r25, Z+3	; 0x03
     424:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     428:	88 23       	and	r24, r24
     42a:	44 f4       	brge	.+16     	; 0x43c <LCDinit+0x3aa>
		__ticks = 1;
     42c:	fe 01       	movw	r30, r28
     42e:	ef 58       	subi	r30, 0x8F	; 143
     430:	fe 4f       	sbci	r31, 0xFE	; 254
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	91 83       	std	Z+1, r25	; 0x01
     438:	80 83       	st	Z, r24
     43a:	64 c0       	rjmp	.+200    	; 0x504 <__stack+0xa5>
	else if (__tmp > 65535)
     43c:	fe 01       	movw	r30, r28
     43e:	ed 58       	subi	r30, 0x8D	; 141
     440:	fe 4f       	sbci	r31, 0xFE	; 254
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	3f ef       	ldi	r19, 0xFF	; 255
     446:	4f e7       	ldi	r20, 0x7F	; 127
     448:	57 e4       	ldi	r21, 0x47	; 71
     44a:	60 81       	ld	r22, Z
     44c:	71 81       	ldd	r23, Z+1	; 0x01
     44e:	82 81       	ldd	r24, Z+2	; 0x02
     450:	93 81       	ldd	r25, Z+3	; 0x03
     452:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     456:	18 16       	cp	r1, r24
     458:	0c f0       	brlt	.+2      	; 0x45c <LCDinit+0x3ca>
     45a:	43 c0       	rjmp	.+134    	; 0x4e2 <__stack+0x83>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     45c:	fe 01       	movw	r30, r28
     45e:	e9 58       	subi	r30, 0x89	; 137
     460:	fe 4f       	sbci	r31, 0xFE	; 254
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	40 e2       	ldi	r20, 0x20	; 32
     468:	51 e4       	ldi	r21, 0x41	; 65
     46a:	60 81       	ld	r22, Z
     46c:	71 81       	ldd	r23, Z+1	; 0x01
     46e:	82 81       	ldd	r24, Z+2	; 0x02
     470:	93 81       	ldd	r25, Z+3	; 0x03
     472:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     476:	dc 01       	movw	r26, r24
     478:	cb 01       	movw	r24, r22
     47a:	8e 01       	movw	r16, r28
     47c:	0f 58       	subi	r16, 0x8F	; 143
     47e:	1e 4f       	sbci	r17, 0xFE	; 254
     480:	bc 01       	movw	r22, r24
     482:	cd 01       	movw	r24, r26
     484:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     488:	dc 01       	movw	r26, r24
     48a:	cb 01       	movw	r24, r22
     48c:	f8 01       	movw	r30, r16
     48e:	91 83       	std	Z+1, r25	; 0x01
     490:	80 83       	st	Z, r24
     492:	1f c0       	rjmp	.+62     	; 0x4d2 <__stack+0x73>
     494:	fe 01       	movw	r30, r28
     496:	e1 59       	subi	r30, 0x91	; 145
     498:	fe 4f       	sbci	r31, 0xFE	; 254
     49a:	89 e1       	ldi	r24, 0x19	; 25
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	91 83       	std	Z+1, r25	; 0x01
     4a0:	80 83       	st	Z, r24
     4a2:	fe 01       	movw	r30, r28
     4a4:	e1 59       	subi	r30, 0x91	; 145
     4a6:	fe 4f       	sbci	r31, 0xFE	; 254
     4a8:	80 81       	ld	r24, Z
     4aa:	91 81       	ldd	r25, Z+1	; 0x01
     4ac:	01 97       	sbiw	r24, 0x01	; 1
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <__stack+0x4d>
     4b0:	fe 01       	movw	r30, r28
     4b2:	e1 59       	subi	r30, 0x91	; 145
     4b4:	fe 4f       	sbci	r31, 0xFE	; 254
     4b6:	91 83       	std	Z+1, r25	; 0x01
     4b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4ba:	de 01       	movw	r26, r28
     4bc:	af 58       	subi	r26, 0x8F	; 143
     4be:	be 4f       	sbci	r27, 0xFE	; 254
     4c0:	fe 01       	movw	r30, r28
     4c2:	ef 58       	subi	r30, 0x8F	; 143
     4c4:	fe 4f       	sbci	r31, 0xFE	; 254
     4c6:	80 81       	ld	r24, Z
     4c8:	91 81       	ldd	r25, Z+1	; 0x01
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	11 96       	adiw	r26, 0x01	; 1
     4ce:	9c 93       	st	X, r25
     4d0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4d2:	fe 01       	movw	r30, r28
     4d4:	ef 58       	subi	r30, 0x8F	; 143
     4d6:	fe 4f       	sbci	r31, 0xFE	; 254
     4d8:	80 81       	ld	r24, Z
     4da:	91 81       	ldd	r25, Z+1	; 0x01
     4dc:	00 97       	sbiw	r24, 0x00	; 0
     4de:	d1 f6       	brne	.-76     	; 0x494 <__stack+0x35>
     4e0:	27 c0       	rjmp	.+78     	; 0x530 <__stack+0xd1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4e2:	8e 01       	movw	r16, r28
     4e4:	0f 58       	subi	r16, 0x8F	; 143
     4e6:	1e 4f       	sbci	r17, 0xFE	; 254
     4e8:	fe 01       	movw	r30, r28
     4ea:	ed 58       	subi	r30, 0x8D	; 141
     4ec:	fe 4f       	sbci	r31, 0xFE	; 254
     4ee:	60 81       	ld	r22, Z
     4f0:	71 81       	ldd	r23, Z+1	; 0x01
     4f2:	82 81       	ldd	r24, Z+2	; 0x02
     4f4:	93 81       	ldd	r25, Z+3	; 0x03
     4f6:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     4fa:	dc 01       	movw	r26, r24
     4fc:	cb 01       	movw	r24, r22
     4fe:	f8 01       	movw	r30, r16
     500:	91 83       	std	Z+1, r25	; 0x01
     502:	80 83       	st	Z, r24
     504:	de 01       	movw	r26, r28
     506:	a3 59       	subi	r26, 0x93	; 147
     508:	be 4f       	sbci	r27, 0xFE	; 254
     50a:	fe 01       	movw	r30, r28
     50c:	ef 58       	subi	r30, 0x8F	; 143
     50e:	fe 4f       	sbci	r31, 0xFE	; 254
     510:	80 81       	ld	r24, Z
     512:	91 81       	ldd	r25, Z+1	; 0x01
     514:	8d 93       	st	X+, r24
     516:	9c 93       	st	X, r25
     518:	fe 01       	movw	r30, r28
     51a:	e3 59       	subi	r30, 0x93	; 147
     51c:	fe 4f       	sbci	r31, 0xFE	; 254
     51e:	80 81       	ld	r24, Z
     520:	91 81       	ldd	r25, Z+1	; 0x01
     522:	01 97       	sbiw	r24, 0x01	; 1
     524:	f1 f7       	brne	.-4      	; 0x522 <__stack+0xc3>
     526:	fe 01       	movw	r30, r28
     528:	e3 59       	subi	r30, 0x93	; 147
     52a:	fe 4f       	sbci	r31, 0xFE	; 254
     52c:	91 83       	std	Z+1, r25	; 0x01
     52e:	80 83       	st	Z, r24
	_delay_ms(5);
	//--------- Write 0x03 -----------
	LDP|=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
     530:	a2 e3       	ldi	r26, 0x32	; 50
     532:	b0 e0       	ldi	r27, 0x00	; 0
     534:	e2 e3       	ldi	r30, 0x32	; 50
     536:	f0 e0       	ldi	r31, 0x00	; 0
     538:	80 81       	ld	r24, Z
     53a:	8c 60       	ori	r24, 0x0C	; 12
     53c:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
     53e:	a2 e3       	ldi	r26, 0x32	; 50
     540:	b0 e0       	ldi	r27, 0x00	; 0
     542:	e2 e3       	ldi	r30, 0x32	; 50
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	82 60       	ori	r24, 0x02	; 2
     54a:	8c 93       	st	X, r24
     54c:	fe 01       	movw	r30, r28
     54e:	e7 59       	subi	r30, 0x97	; 151
     550:	fe 4f       	sbci	r31, 0xFE	; 254
     552:	80 e0       	ldi	r24, 0x00	; 0
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	a0 e8       	ldi	r26, 0x80	; 128
     558:	bf e3       	ldi	r27, 0x3F	; 63
     55a:	80 83       	st	Z, r24
     55c:	91 83       	std	Z+1, r25	; 0x01
     55e:	a2 83       	std	Z+2, r26	; 0x02
     560:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     562:	8e 01       	movw	r16, r28
     564:	0b 59       	subi	r16, 0x9B	; 155
     566:	1e 4f       	sbci	r17, 0xFE	; 254
     568:	fe 01       	movw	r30, r28
     56a:	e7 59       	subi	r30, 0x97	; 151
     56c:	fe 4f       	sbci	r31, 0xFE	; 254
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	4a e7       	ldi	r20, 0x7A	; 122
     574:	53 e4       	ldi	r21, 0x43	; 67
     576:	60 81       	ld	r22, Z
     578:	71 81       	ldd	r23, Z+1	; 0x01
     57a:	82 81       	ldd	r24, Z+2	; 0x02
     57c:	93 81       	ldd	r25, Z+3	; 0x03
     57e:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     582:	dc 01       	movw	r26, r24
     584:	cb 01       	movw	r24, r22
     586:	f8 01       	movw	r30, r16
     588:	80 83       	st	Z, r24
     58a:	91 83       	std	Z+1, r25	; 0x01
     58c:	a2 83       	std	Z+2, r26	; 0x02
     58e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     590:	fe 01       	movw	r30, r28
     592:	eb 59       	subi	r30, 0x9B	; 155
     594:	fe 4f       	sbci	r31, 0xFE	; 254
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	40 e8       	ldi	r20, 0x80	; 128
     59c:	5f e3       	ldi	r21, 0x3F	; 63
     59e:	60 81       	ld	r22, Z
     5a0:	71 81       	ldd	r23, Z+1	; 0x01
     5a2:	82 81       	ldd	r24, Z+2	; 0x02
     5a4:	93 81       	ldd	r25, Z+3	; 0x03
     5a6:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     5aa:	88 23       	and	r24, r24
     5ac:	44 f4       	brge	.+16     	; 0x5be <__stack+0x15f>
		__ticks = 1;
     5ae:	fe 01       	movw	r30, r28
     5b0:	ed 59       	subi	r30, 0x9D	; 157
     5b2:	fe 4f       	sbci	r31, 0xFE	; 254
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	91 83       	std	Z+1, r25	; 0x01
     5ba:	80 83       	st	Z, r24
     5bc:	64 c0       	rjmp	.+200    	; 0x686 <__stack+0x227>
	else if (__tmp > 65535)
     5be:	fe 01       	movw	r30, r28
     5c0:	eb 59       	subi	r30, 0x9B	; 155
     5c2:	fe 4f       	sbci	r31, 0xFE	; 254
     5c4:	20 e0       	ldi	r18, 0x00	; 0
     5c6:	3f ef       	ldi	r19, 0xFF	; 255
     5c8:	4f e7       	ldi	r20, 0x7F	; 127
     5ca:	57 e4       	ldi	r21, 0x47	; 71
     5cc:	60 81       	ld	r22, Z
     5ce:	71 81       	ldd	r23, Z+1	; 0x01
     5d0:	82 81       	ldd	r24, Z+2	; 0x02
     5d2:	93 81       	ldd	r25, Z+3	; 0x03
     5d4:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     5d8:	18 16       	cp	r1, r24
     5da:	0c f0       	brlt	.+2      	; 0x5de <__stack+0x17f>
     5dc:	43 c0       	rjmp	.+134    	; 0x664 <__stack+0x205>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5de:	fe 01       	movw	r30, r28
     5e0:	e7 59       	subi	r30, 0x97	; 151
     5e2:	fe 4f       	sbci	r31, 0xFE	; 254
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 e2       	ldi	r20, 0x20	; 32
     5ea:	51 e4       	ldi	r21, 0x41	; 65
     5ec:	60 81       	ld	r22, Z
     5ee:	71 81       	ldd	r23, Z+1	; 0x01
     5f0:	82 81       	ldd	r24, Z+2	; 0x02
     5f2:	93 81       	ldd	r25, Z+3	; 0x03
     5f4:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	8e 01       	movw	r16, r28
     5fe:	0d 59       	subi	r16, 0x9D	; 157
     600:	1e 4f       	sbci	r17, 0xFE	; 254
     602:	bc 01       	movw	r22, r24
     604:	cd 01       	movw	r24, r26
     606:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     60a:	dc 01       	movw	r26, r24
     60c:	cb 01       	movw	r24, r22
     60e:	f8 01       	movw	r30, r16
     610:	91 83       	std	Z+1, r25	; 0x01
     612:	80 83       	st	Z, r24
     614:	1f c0       	rjmp	.+62     	; 0x654 <__stack+0x1f5>
     616:	fe 01       	movw	r30, r28
     618:	ef 59       	subi	r30, 0x9F	; 159
     61a:	fe 4f       	sbci	r31, 0xFE	; 254
     61c:	89 e1       	ldi	r24, 0x19	; 25
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	91 83       	std	Z+1, r25	; 0x01
     622:	80 83       	st	Z, r24
     624:	fe 01       	movw	r30, r28
     626:	ef 59       	subi	r30, 0x9F	; 159
     628:	fe 4f       	sbci	r31, 0xFE	; 254
     62a:	80 81       	ld	r24, Z
     62c:	91 81       	ldd	r25, Z+1	; 0x01
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	f1 f7       	brne	.-4      	; 0x62e <__stack+0x1cf>
     632:	fe 01       	movw	r30, r28
     634:	ef 59       	subi	r30, 0x9F	; 159
     636:	fe 4f       	sbci	r31, 0xFE	; 254
     638:	91 83       	std	Z+1, r25	; 0x01
     63a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     63c:	de 01       	movw	r26, r28
     63e:	ad 59       	subi	r26, 0x9D	; 157
     640:	be 4f       	sbci	r27, 0xFE	; 254
     642:	fe 01       	movw	r30, r28
     644:	ed 59       	subi	r30, 0x9D	; 157
     646:	fe 4f       	sbci	r31, 0xFE	; 254
     648:	80 81       	ld	r24, Z
     64a:	91 81       	ldd	r25, Z+1	; 0x01
     64c:	01 97       	sbiw	r24, 0x01	; 1
     64e:	11 96       	adiw	r26, 0x01	; 1
     650:	9c 93       	st	X, r25
     652:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     654:	fe 01       	movw	r30, r28
     656:	ed 59       	subi	r30, 0x9D	; 157
     658:	fe 4f       	sbci	r31, 0xFE	; 254
     65a:	80 81       	ld	r24, Z
     65c:	91 81       	ldd	r25, Z+1	; 0x01
     65e:	00 97       	sbiw	r24, 0x00	; 0
     660:	d1 f6       	brne	.-76     	; 0x616 <__stack+0x1b7>
     662:	27 c0       	rjmp	.+78     	; 0x6b2 <__stack+0x253>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     664:	8e 01       	movw	r16, r28
     666:	0d 59       	subi	r16, 0x9D	; 157
     668:	1e 4f       	sbci	r17, 0xFE	; 254
     66a:	fe 01       	movw	r30, r28
     66c:	eb 59       	subi	r30, 0x9B	; 155
     66e:	fe 4f       	sbci	r31, 0xFE	; 254
     670:	60 81       	ld	r22, Z
     672:	71 81       	ldd	r23, Z+1	; 0x01
     674:	82 81       	ldd	r24, Z+2	; 0x02
     676:	93 81       	ldd	r25, Z+3	; 0x03
     678:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     67c:	dc 01       	movw	r26, r24
     67e:	cb 01       	movw	r24, r22
     680:	f8 01       	movw	r30, r16
     682:	91 83       	std	Z+1, r25	; 0x01
     684:	80 83       	st	Z, r24
     686:	de 01       	movw	r26, r28
     688:	a1 5a       	subi	r26, 0xA1	; 161
     68a:	be 4f       	sbci	r27, 0xFE	; 254
     68c:	fe 01       	movw	r30, r28
     68e:	ed 59       	subi	r30, 0x9D	; 157
     690:	fe 4f       	sbci	r31, 0xFE	; 254
     692:	80 81       	ld	r24, Z
     694:	91 81       	ldd	r25, Z+1	; 0x01
     696:	8d 93       	st	X+, r24
     698:	9c 93       	st	X, r25
     69a:	fe 01       	movw	r30, r28
     69c:	e1 5a       	subi	r30, 0xA1	; 161
     69e:	fe 4f       	sbci	r31, 0xFE	; 254
     6a0:	80 81       	ld	r24, Z
     6a2:	91 81       	ldd	r25, Z+1	; 0x01
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <__stack+0x245>
     6a8:	fe 01       	movw	r30, r28
     6aa:	e1 5a       	subi	r30, 0xA1	; 161
     6ac:	fe 4f       	sbci	r31, 0xFE	; 254
     6ae:	91 83       	std	Z+1, r25	; 0x01
     6b0:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     6b2:	a2 e3       	ldi	r26, 0x32	; 50
     6b4:	b0 e0       	ldi	r27, 0x00	; 0
     6b6:	e2 e3       	ldi	r30, 0x32	; 50
     6b8:	f0 e0       	ldi	r31, 0x00	; 0
     6ba:	80 81       	ld	r24, Z
     6bc:	8d 7f       	andi	r24, 0xFD	; 253
     6be:	8c 93       	st	X, r24
     6c0:	fe 01       	movw	r30, r28
     6c2:	e5 5a       	subi	r30, 0xA5	; 165
     6c4:	fe 4f       	sbci	r31, 0xFE	; 254
     6c6:	80 e0       	ldi	r24, 0x00	; 0
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	a0 e8       	ldi	r26, 0x80	; 128
     6cc:	bf e3       	ldi	r27, 0x3F	; 63
     6ce:	80 83       	st	Z, r24
     6d0:	91 83       	std	Z+1, r25	; 0x01
     6d2:	a2 83       	std	Z+2, r26	; 0x02
     6d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6d6:	8e 01       	movw	r16, r28
     6d8:	09 5a       	subi	r16, 0xA9	; 169
     6da:	1e 4f       	sbci	r17, 0xFE	; 254
     6dc:	fe 01       	movw	r30, r28
     6de:	e5 5a       	subi	r30, 0xA5	; 165
     6e0:	fe 4f       	sbci	r31, 0xFE	; 254
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	4a e7       	ldi	r20, 0x7A	; 122
     6e8:	53 e4       	ldi	r21, 0x43	; 67
     6ea:	60 81       	ld	r22, Z
     6ec:	71 81       	ldd	r23, Z+1	; 0x01
     6ee:	82 81       	ldd	r24, Z+2	; 0x02
     6f0:	93 81       	ldd	r25, Z+3	; 0x03
     6f2:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     6f6:	dc 01       	movw	r26, r24
     6f8:	cb 01       	movw	r24, r22
     6fa:	f8 01       	movw	r30, r16
     6fc:	80 83       	st	Z, r24
     6fe:	91 83       	std	Z+1, r25	; 0x01
     700:	a2 83       	std	Z+2, r26	; 0x02
     702:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     704:	fe 01       	movw	r30, r28
     706:	e9 5a       	subi	r30, 0xA9	; 169
     708:	fe 4f       	sbci	r31, 0xFE	; 254
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	40 e8       	ldi	r20, 0x80	; 128
     710:	5f e3       	ldi	r21, 0x3F	; 63
     712:	60 81       	ld	r22, Z
     714:	71 81       	ldd	r23, Z+1	; 0x01
     716:	82 81       	ldd	r24, Z+2	; 0x02
     718:	93 81       	ldd	r25, Z+3	; 0x03
     71a:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     71e:	88 23       	and	r24, r24
     720:	44 f4       	brge	.+16     	; 0x732 <__stack+0x2d3>
		__ticks = 1;
     722:	fe 01       	movw	r30, r28
     724:	eb 5a       	subi	r30, 0xAB	; 171
     726:	fe 4f       	sbci	r31, 0xFE	; 254
     728:	81 e0       	ldi	r24, 0x01	; 1
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	91 83       	std	Z+1, r25	; 0x01
     72e:	80 83       	st	Z, r24
     730:	64 c0       	rjmp	.+200    	; 0x7fa <__stack+0x39b>
	else if (__tmp > 65535)
     732:	fe 01       	movw	r30, r28
     734:	e9 5a       	subi	r30, 0xA9	; 169
     736:	fe 4f       	sbci	r31, 0xFE	; 254
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	3f ef       	ldi	r19, 0xFF	; 255
     73c:	4f e7       	ldi	r20, 0x7F	; 127
     73e:	57 e4       	ldi	r21, 0x47	; 71
     740:	60 81       	ld	r22, Z
     742:	71 81       	ldd	r23, Z+1	; 0x01
     744:	82 81       	ldd	r24, Z+2	; 0x02
     746:	93 81       	ldd	r25, Z+3	; 0x03
     748:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     74c:	18 16       	cp	r1, r24
     74e:	0c f0       	brlt	.+2      	; 0x752 <__stack+0x2f3>
     750:	43 c0       	rjmp	.+134    	; 0x7d8 <__stack+0x379>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     752:	fe 01       	movw	r30, r28
     754:	e5 5a       	subi	r30, 0xA5	; 165
     756:	fe 4f       	sbci	r31, 0xFE	; 254
     758:	20 e0       	ldi	r18, 0x00	; 0
     75a:	30 e0       	ldi	r19, 0x00	; 0
     75c:	40 e2       	ldi	r20, 0x20	; 32
     75e:	51 e4       	ldi	r21, 0x41	; 65
     760:	60 81       	ld	r22, Z
     762:	71 81       	ldd	r23, Z+1	; 0x01
     764:	82 81       	ldd	r24, Z+2	; 0x02
     766:	93 81       	ldd	r25, Z+3	; 0x03
     768:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     76c:	dc 01       	movw	r26, r24
     76e:	cb 01       	movw	r24, r22
     770:	8e 01       	movw	r16, r28
     772:	0b 5a       	subi	r16, 0xAB	; 171
     774:	1e 4f       	sbci	r17, 0xFE	; 254
     776:	bc 01       	movw	r22, r24
     778:	cd 01       	movw	r24, r26
     77a:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     77e:	dc 01       	movw	r26, r24
     780:	cb 01       	movw	r24, r22
     782:	f8 01       	movw	r30, r16
     784:	91 83       	std	Z+1, r25	; 0x01
     786:	80 83       	st	Z, r24
     788:	1f c0       	rjmp	.+62     	; 0x7c8 <__stack+0x369>
     78a:	fe 01       	movw	r30, r28
     78c:	ed 5a       	subi	r30, 0xAD	; 173
     78e:	fe 4f       	sbci	r31, 0xFE	; 254
     790:	89 e1       	ldi	r24, 0x19	; 25
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	91 83       	std	Z+1, r25	; 0x01
     796:	80 83       	st	Z, r24
     798:	fe 01       	movw	r30, r28
     79a:	ed 5a       	subi	r30, 0xAD	; 173
     79c:	fe 4f       	sbci	r31, 0xFE	; 254
     79e:	80 81       	ld	r24, Z
     7a0:	91 81       	ldd	r25, Z+1	; 0x01
     7a2:	01 97       	sbiw	r24, 0x01	; 1
     7a4:	f1 f7       	brne	.-4      	; 0x7a2 <__stack+0x343>
     7a6:	fe 01       	movw	r30, r28
     7a8:	ed 5a       	subi	r30, 0xAD	; 173
     7aa:	fe 4f       	sbci	r31, 0xFE	; 254
     7ac:	91 83       	std	Z+1, r25	; 0x01
     7ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7b0:	de 01       	movw	r26, r28
     7b2:	ab 5a       	subi	r26, 0xAB	; 171
     7b4:	be 4f       	sbci	r27, 0xFE	; 254
     7b6:	fe 01       	movw	r30, r28
     7b8:	eb 5a       	subi	r30, 0xAB	; 171
     7ba:	fe 4f       	sbci	r31, 0xFE	; 254
     7bc:	80 81       	ld	r24, Z
     7be:	91 81       	ldd	r25, Z+1	; 0x01
     7c0:	01 97       	sbiw	r24, 0x01	; 1
     7c2:	11 96       	adiw	r26, 0x01	; 1
     7c4:	9c 93       	st	X, r25
     7c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7c8:	fe 01       	movw	r30, r28
     7ca:	eb 5a       	subi	r30, 0xAB	; 171
     7cc:	fe 4f       	sbci	r31, 0xFE	; 254
     7ce:	80 81       	ld	r24, Z
     7d0:	91 81       	ldd	r25, Z+1	; 0x01
     7d2:	00 97       	sbiw	r24, 0x00	; 0
     7d4:	d1 f6       	brne	.-76     	; 0x78a <__stack+0x32b>
     7d6:	27 c0       	rjmp	.+78     	; 0x826 <__stack+0x3c7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7d8:	8e 01       	movw	r16, r28
     7da:	0b 5a       	subi	r16, 0xAB	; 171
     7dc:	1e 4f       	sbci	r17, 0xFE	; 254
     7de:	fe 01       	movw	r30, r28
     7e0:	e9 5a       	subi	r30, 0xA9	; 169
     7e2:	fe 4f       	sbci	r31, 0xFE	; 254
     7e4:	60 81       	ld	r22, Z
     7e6:	71 81       	ldd	r23, Z+1	; 0x01
     7e8:	82 81       	ldd	r24, Z+2	; 0x02
     7ea:	93 81       	ldd	r25, Z+3	; 0x03
     7ec:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     7f0:	dc 01       	movw	r26, r24
     7f2:	cb 01       	movw	r24, r22
     7f4:	f8 01       	movw	r30, r16
     7f6:	91 83       	std	Z+1, r25	; 0x01
     7f8:	80 83       	st	Z, r24
     7fa:	de 01       	movw	r26, r28
     7fc:	af 5a       	subi	r26, 0xAF	; 175
     7fe:	be 4f       	sbci	r27, 0xFE	; 254
     800:	fe 01       	movw	r30, r28
     802:	eb 5a       	subi	r30, 0xAB	; 171
     804:	fe 4f       	sbci	r31, 0xFE	; 254
     806:	80 81       	ld	r24, Z
     808:	91 81       	ldd	r25, Z+1	; 0x01
     80a:	8d 93       	st	X+, r24
     80c:	9c 93       	st	X, r25
     80e:	fe 01       	movw	r30, r28
     810:	ef 5a       	subi	r30, 0xAF	; 175
     812:	fe 4f       	sbci	r31, 0xFE	; 254
     814:	80 81       	ld	r24, Z
     816:	91 81       	ldd	r25, Z+1	; 0x01
     818:	01 97       	sbiw	r24, 0x01	; 1
     81a:	f1 f7       	brne	.-4      	; 0x818 <__stack+0x3b9>
     81c:	fe 01       	movw	r30, r28
     81e:	ef 5a       	subi	r30, 0xAF	; 175
     820:	fe 4f       	sbci	r31, 0xFE	; 254
     822:	91 83       	std	Z+1, r25	; 0x01
     824:	80 83       	st	Z, r24
	_delay_ms(1);
	//--------- Write 0x03 ------------
	LDP|=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
     826:	a2 e3       	ldi	r26, 0x32	; 50
     828:	b0 e0       	ldi	r27, 0x00	; 0
     82a:	e2 e3       	ldi	r30, 0x32	; 50
     82c:	f0 e0       	ldi	r31, 0x00	; 0
     82e:	80 81       	ld	r24, Z
     830:	8c 60       	ori	r24, 0x0C	; 12
     832:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
     834:	a2 e3       	ldi	r26, 0x32	; 50
     836:	b0 e0       	ldi	r27, 0x00	; 0
     838:	e2 e3       	ldi	r30, 0x32	; 50
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	80 81       	ld	r24, Z
     83e:	82 60       	ori	r24, 0x02	; 2
     840:	8c 93       	st	X, r24
     842:	fe 01       	movw	r30, r28
     844:	e3 5b       	subi	r30, 0xB3	; 179
     846:	fe 4f       	sbci	r31, 0xFE	; 254
     848:	80 e0       	ldi	r24, 0x00	; 0
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	a0 e8       	ldi	r26, 0x80	; 128
     84e:	bf e3       	ldi	r27, 0x3F	; 63
     850:	80 83       	st	Z, r24
     852:	91 83       	std	Z+1, r25	; 0x01
     854:	a2 83       	std	Z+2, r26	; 0x02
     856:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     858:	8e 01       	movw	r16, r28
     85a:	07 5b       	subi	r16, 0xB7	; 183
     85c:	1e 4f       	sbci	r17, 0xFE	; 254
     85e:	fe 01       	movw	r30, r28
     860:	e3 5b       	subi	r30, 0xB3	; 179
     862:	fe 4f       	sbci	r31, 0xFE	; 254
     864:	20 e0       	ldi	r18, 0x00	; 0
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	4a e7       	ldi	r20, 0x7A	; 122
     86a:	53 e4       	ldi	r21, 0x43	; 67
     86c:	60 81       	ld	r22, Z
     86e:	71 81       	ldd	r23, Z+1	; 0x01
     870:	82 81       	ldd	r24, Z+2	; 0x02
     872:	93 81       	ldd	r25, Z+3	; 0x03
     874:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     878:	dc 01       	movw	r26, r24
     87a:	cb 01       	movw	r24, r22
     87c:	f8 01       	movw	r30, r16
     87e:	80 83       	st	Z, r24
     880:	91 83       	std	Z+1, r25	; 0x01
     882:	a2 83       	std	Z+2, r26	; 0x02
     884:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     886:	fe 01       	movw	r30, r28
     888:	e7 5b       	subi	r30, 0xB7	; 183
     88a:	fe 4f       	sbci	r31, 0xFE	; 254
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	40 e8       	ldi	r20, 0x80	; 128
     892:	5f e3       	ldi	r21, 0x3F	; 63
     894:	60 81       	ld	r22, Z
     896:	71 81       	ldd	r23, Z+1	; 0x01
     898:	82 81       	ldd	r24, Z+2	; 0x02
     89a:	93 81       	ldd	r25, Z+3	; 0x03
     89c:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     8a0:	88 23       	and	r24, r24
     8a2:	44 f4       	brge	.+16     	; 0x8b4 <__stack+0x455>
		__ticks = 1;
     8a4:	fe 01       	movw	r30, r28
     8a6:	e9 5b       	subi	r30, 0xB9	; 185
     8a8:	fe 4f       	sbci	r31, 0xFE	; 254
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	91 83       	std	Z+1, r25	; 0x01
     8b0:	80 83       	st	Z, r24
     8b2:	64 c0       	rjmp	.+200    	; 0x97c <__stack+0x51d>
	else if (__tmp > 65535)
     8b4:	fe 01       	movw	r30, r28
     8b6:	e7 5b       	subi	r30, 0xB7	; 183
     8b8:	fe 4f       	sbci	r31, 0xFE	; 254
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	3f ef       	ldi	r19, 0xFF	; 255
     8be:	4f e7       	ldi	r20, 0x7F	; 127
     8c0:	57 e4       	ldi	r21, 0x47	; 71
     8c2:	60 81       	ld	r22, Z
     8c4:	71 81       	ldd	r23, Z+1	; 0x01
     8c6:	82 81       	ldd	r24, Z+2	; 0x02
     8c8:	93 81       	ldd	r25, Z+3	; 0x03
     8ca:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     8ce:	18 16       	cp	r1, r24
     8d0:	0c f0       	brlt	.+2      	; 0x8d4 <__stack+0x475>
     8d2:	43 c0       	rjmp	.+134    	; 0x95a <__stack+0x4fb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8d4:	fe 01       	movw	r30, r28
     8d6:	e3 5b       	subi	r30, 0xB3	; 179
     8d8:	fe 4f       	sbci	r31, 0xFE	; 254
     8da:	20 e0       	ldi	r18, 0x00	; 0
     8dc:	30 e0       	ldi	r19, 0x00	; 0
     8de:	40 e2       	ldi	r20, 0x20	; 32
     8e0:	51 e4       	ldi	r21, 0x41	; 65
     8e2:	60 81       	ld	r22, Z
     8e4:	71 81       	ldd	r23, Z+1	; 0x01
     8e6:	82 81       	ldd	r24, Z+2	; 0x02
     8e8:	93 81       	ldd	r25, Z+3	; 0x03
     8ea:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     8ee:	dc 01       	movw	r26, r24
     8f0:	cb 01       	movw	r24, r22
     8f2:	8e 01       	movw	r16, r28
     8f4:	09 5b       	subi	r16, 0xB9	; 185
     8f6:	1e 4f       	sbci	r17, 0xFE	; 254
     8f8:	bc 01       	movw	r22, r24
     8fa:	cd 01       	movw	r24, r26
     8fc:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     900:	dc 01       	movw	r26, r24
     902:	cb 01       	movw	r24, r22
     904:	f8 01       	movw	r30, r16
     906:	91 83       	std	Z+1, r25	; 0x01
     908:	80 83       	st	Z, r24
     90a:	1f c0       	rjmp	.+62     	; 0x94a <__stack+0x4eb>
     90c:	fe 01       	movw	r30, r28
     90e:	eb 5b       	subi	r30, 0xBB	; 187
     910:	fe 4f       	sbci	r31, 0xFE	; 254
     912:	89 e1       	ldi	r24, 0x19	; 25
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	91 83       	std	Z+1, r25	; 0x01
     918:	80 83       	st	Z, r24
     91a:	fe 01       	movw	r30, r28
     91c:	eb 5b       	subi	r30, 0xBB	; 187
     91e:	fe 4f       	sbci	r31, 0xFE	; 254
     920:	80 81       	ld	r24, Z
     922:	91 81       	ldd	r25, Z+1	; 0x01
     924:	01 97       	sbiw	r24, 0x01	; 1
     926:	f1 f7       	brne	.-4      	; 0x924 <__stack+0x4c5>
     928:	fe 01       	movw	r30, r28
     92a:	eb 5b       	subi	r30, 0xBB	; 187
     92c:	fe 4f       	sbci	r31, 0xFE	; 254
     92e:	91 83       	std	Z+1, r25	; 0x01
     930:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     932:	de 01       	movw	r26, r28
     934:	a9 5b       	subi	r26, 0xB9	; 185
     936:	be 4f       	sbci	r27, 0xFE	; 254
     938:	fe 01       	movw	r30, r28
     93a:	e9 5b       	subi	r30, 0xB9	; 185
     93c:	fe 4f       	sbci	r31, 0xFE	; 254
     93e:	80 81       	ld	r24, Z
     940:	91 81       	ldd	r25, Z+1	; 0x01
     942:	01 97       	sbiw	r24, 0x01	; 1
     944:	11 96       	adiw	r26, 0x01	; 1
     946:	9c 93       	st	X, r25
     948:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     94a:	fe 01       	movw	r30, r28
     94c:	e9 5b       	subi	r30, 0xB9	; 185
     94e:	fe 4f       	sbci	r31, 0xFE	; 254
     950:	80 81       	ld	r24, Z
     952:	91 81       	ldd	r25, Z+1	; 0x01
     954:	00 97       	sbiw	r24, 0x00	; 0
     956:	d1 f6       	brne	.-76     	; 0x90c <__stack+0x4ad>
     958:	27 c0       	rjmp	.+78     	; 0x9a8 <__stack+0x549>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     95a:	8e 01       	movw	r16, r28
     95c:	09 5b       	subi	r16, 0xB9	; 185
     95e:	1e 4f       	sbci	r17, 0xFE	; 254
     960:	fe 01       	movw	r30, r28
     962:	e7 5b       	subi	r30, 0xB7	; 183
     964:	fe 4f       	sbci	r31, 0xFE	; 254
     966:	60 81       	ld	r22, Z
     968:	71 81       	ldd	r23, Z+1	; 0x01
     96a:	82 81       	ldd	r24, Z+2	; 0x02
     96c:	93 81       	ldd	r25, Z+3	; 0x03
     96e:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     972:	dc 01       	movw	r26, r24
     974:	cb 01       	movw	r24, r22
     976:	f8 01       	movw	r30, r16
     978:	91 83       	std	Z+1, r25	; 0x01
     97a:	80 83       	st	Z, r24
     97c:	de 01       	movw	r26, r28
     97e:	ad 5b       	subi	r26, 0xBD	; 189
     980:	be 4f       	sbci	r27, 0xFE	; 254
     982:	fe 01       	movw	r30, r28
     984:	e9 5b       	subi	r30, 0xB9	; 185
     986:	fe 4f       	sbci	r31, 0xFE	; 254
     988:	80 81       	ld	r24, Z
     98a:	91 81       	ldd	r25, Z+1	; 0x01
     98c:	8d 93       	st	X+, r24
     98e:	9c 93       	st	X, r25
     990:	fe 01       	movw	r30, r28
     992:	ed 5b       	subi	r30, 0xBD	; 189
     994:	fe 4f       	sbci	r31, 0xFE	; 254
     996:	80 81       	ld	r24, Z
     998:	91 81       	ldd	r25, Z+1	; 0x01
     99a:	01 97       	sbiw	r24, 0x01	; 1
     99c:	f1 f7       	brne	.-4      	; 0x99a <__stack+0x53b>
     99e:	fe 01       	movw	r30, r28
     9a0:	ed 5b       	subi	r30, 0xBD	; 189
     9a2:	fe 4f       	sbci	r31, 0xFE	; 254
     9a4:	91 83       	std	Z+1, r25	; 0x01
     9a6:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     9a8:	a2 e3       	ldi	r26, 0x32	; 50
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	e2 e3       	ldi	r30, 0x32	; 50
     9ae:	f0 e0       	ldi	r31, 0x00	; 0
     9b0:	80 81       	ld	r24, Z
     9b2:	8d 7f       	andi	r24, 0xFD	; 253
     9b4:	8c 93       	st	X, r24
     9b6:	fe 01       	movw	r30, r28
     9b8:	e1 5c       	subi	r30, 0xC1	; 193
     9ba:	fe 4f       	sbci	r31, 0xFE	; 254
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e8       	ldi	r26, 0x80	; 128
     9c2:	bf e3       	ldi	r27, 0x3F	; 63
     9c4:	80 83       	st	Z, r24
     9c6:	91 83       	std	Z+1, r25	; 0x01
     9c8:	a2 83       	std	Z+2, r26	; 0x02
     9ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9cc:	8e 01       	movw	r16, r28
     9ce:	05 5c       	subi	r16, 0xC5	; 197
     9d0:	1e 4f       	sbci	r17, 0xFE	; 254
     9d2:	fe 01       	movw	r30, r28
     9d4:	e1 5c       	subi	r30, 0xC1	; 193
     9d6:	fe 4f       	sbci	r31, 0xFE	; 254
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	4a e7       	ldi	r20, 0x7A	; 122
     9de:	53 e4       	ldi	r21, 0x43	; 67
     9e0:	60 81       	ld	r22, Z
     9e2:	71 81       	ldd	r23, Z+1	; 0x01
     9e4:	82 81       	ldd	r24, Z+2	; 0x02
     9e6:	93 81       	ldd	r25, Z+3	; 0x03
     9e8:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     9ec:	dc 01       	movw	r26, r24
     9ee:	cb 01       	movw	r24, r22
     9f0:	f8 01       	movw	r30, r16
     9f2:	80 83       	st	Z, r24
     9f4:	91 83       	std	Z+1, r25	; 0x01
     9f6:	a2 83       	std	Z+2, r26	; 0x02
     9f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9fa:	fe 01       	movw	r30, r28
     9fc:	e5 5c       	subi	r30, 0xC5	; 197
     9fe:	fe 4f       	sbci	r31, 0xFE	; 254
     a00:	20 e0       	ldi	r18, 0x00	; 0
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	40 e8       	ldi	r20, 0x80	; 128
     a06:	5f e3       	ldi	r21, 0x3F	; 63
     a08:	60 81       	ld	r22, Z
     a0a:	71 81       	ldd	r23, Z+1	; 0x01
     a0c:	82 81       	ldd	r24, Z+2	; 0x02
     a0e:	93 81       	ldd	r25, Z+3	; 0x03
     a10:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     a14:	88 23       	and	r24, r24
     a16:	44 f4       	brge	.+16     	; 0xa28 <__stack+0x5c9>
		__ticks = 1;
     a18:	fe 01       	movw	r30, r28
     a1a:	e7 5c       	subi	r30, 0xC7	; 199
     a1c:	fe 4f       	sbci	r31, 0xFE	; 254
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	91 83       	std	Z+1, r25	; 0x01
     a24:	80 83       	st	Z, r24
     a26:	64 c0       	rjmp	.+200    	; 0xaf0 <__stack+0x691>
	else if (__tmp > 65535)
     a28:	fe 01       	movw	r30, r28
     a2a:	e5 5c       	subi	r30, 0xC5	; 197
     a2c:	fe 4f       	sbci	r31, 0xFE	; 254
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	3f ef       	ldi	r19, 0xFF	; 255
     a32:	4f e7       	ldi	r20, 0x7F	; 127
     a34:	57 e4       	ldi	r21, 0x47	; 71
     a36:	60 81       	ld	r22, Z
     a38:	71 81       	ldd	r23, Z+1	; 0x01
     a3a:	82 81       	ldd	r24, Z+2	; 0x02
     a3c:	93 81       	ldd	r25, Z+3	; 0x03
     a3e:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     a42:	18 16       	cp	r1, r24
     a44:	0c f0       	brlt	.+2      	; 0xa48 <__stack+0x5e9>
     a46:	43 c0       	rjmp	.+134    	; 0xace <__stack+0x66f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a48:	fe 01       	movw	r30, r28
     a4a:	e1 5c       	subi	r30, 0xC1	; 193
     a4c:	fe 4f       	sbci	r31, 0xFE	; 254
     a4e:	20 e0       	ldi	r18, 0x00	; 0
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	40 e2       	ldi	r20, 0x20	; 32
     a54:	51 e4       	ldi	r21, 0x41	; 65
     a56:	60 81       	ld	r22, Z
     a58:	71 81       	ldd	r23, Z+1	; 0x01
     a5a:	82 81       	ldd	r24, Z+2	; 0x02
     a5c:	93 81       	ldd	r25, Z+3	; 0x03
     a5e:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     a62:	dc 01       	movw	r26, r24
     a64:	cb 01       	movw	r24, r22
     a66:	8e 01       	movw	r16, r28
     a68:	07 5c       	subi	r16, 0xC7	; 199
     a6a:	1e 4f       	sbci	r17, 0xFE	; 254
     a6c:	bc 01       	movw	r22, r24
     a6e:	cd 01       	movw	r24, r26
     a70:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     a74:	dc 01       	movw	r26, r24
     a76:	cb 01       	movw	r24, r22
     a78:	f8 01       	movw	r30, r16
     a7a:	91 83       	std	Z+1, r25	; 0x01
     a7c:	80 83       	st	Z, r24
     a7e:	1f c0       	rjmp	.+62     	; 0xabe <__stack+0x65f>
     a80:	fe 01       	movw	r30, r28
     a82:	e9 5c       	subi	r30, 0xC9	; 201
     a84:	fe 4f       	sbci	r31, 0xFE	; 254
     a86:	89 e1       	ldi	r24, 0x19	; 25
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	91 83       	std	Z+1, r25	; 0x01
     a8c:	80 83       	st	Z, r24
     a8e:	fe 01       	movw	r30, r28
     a90:	e9 5c       	subi	r30, 0xC9	; 201
     a92:	fe 4f       	sbci	r31, 0xFE	; 254
     a94:	80 81       	ld	r24, Z
     a96:	91 81       	ldd	r25, Z+1	; 0x01
     a98:	01 97       	sbiw	r24, 0x01	; 1
     a9a:	f1 f7       	brne	.-4      	; 0xa98 <__stack+0x639>
     a9c:	fe 01       	movw	r30, r28
     a9e:	e9 5c       	subi	r30, 0xC9	; 201
     aa0:	fe 4f       	sbci	r31, 0xFE	; 254
     aa2:	91 83       	std	Z+1, r25	; 0x01
     aa4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     aa6:	de 01       	movw	r26, r28
     aa8:	a7 5c       	subi	r26, 0xC7	; 199
     aaa:	be 4f       	sbci	r27, 0xFE	; 254
     aac:	fe 01       	movw	r30, r28
     aae:	e7 5c       	subi	r30, 0xC7	; 199
     ab0:	fe 4f       	sbci	r31, 0xFE	; 254
     ab2:	80 81       	ld	r24, Z
     ab4:	91 81       	ldd	r25, Z+1	; 0x01
     ab6:	01 97       	sbiw	r24, 0x01	; 1
     ab8:	11 96       	adiw	r26, 0x01	; 1
     aba:	9c 93       	st	X, r25
     abc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     abe:	fe 01       	movw	r30, r28
     ac0:	e7 5c       	subi	r30, 0xC7	; 199
     ac2:	fe 4f       	sbci	r31, 0xFE	; 254
     ac4:	80 81       	ld	r24, Z
     ac6:	91 81       	ldd	r25, Z+1	; 0x01
     ac8:	00 97       	sbiw	r24, 0x00	; 0
     aca:	d1 f6       	brne	.-76     	; 0xa80 <__stack+0x621>
     acc:	27 c0       	rjmp	.+78     	; 0xb1c <__stack+0x6bd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ace:	8e 01       	movw	r16, r28
     ad0:	07 5c       	subi	r16, 0xC7	; 199
     ad2:	1e 4f       	sbci	r17, 0xFE	; 254
     ad4:	fe 01       	movw	r30, r28
     ad6:	e5 5c       	subi	r30, 0xC5	; 197
     ad8:	fe 4f       	sbci	r31, 0xFE	; 254
     ada:	60 81       	ld	r22, Z
     adc:	71 81       	ldd	r23, Z+1	; 0x01
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     ae6:	dc 01       	movw	r26, r24
     ae8:	cb 01       	movw	r24, r22
     aea:	f8 01       	movw	r30, r16
     aec:	91 83       	std	Z+1, r25	; 0x01
     aee:	80 83       	st	Z, r24
     af0:	de 01       	movw	r26, r28
     af2:	ab 5c       	subi	r26, 0xCB	; 203
     af4:	be 4f       	sbci	r27, 0xFE	; 254
     af6:	fe 01       	movw	r30, r28
     af8:	e7 5c       	subi	r30, 0xC7	; 199
     afa:	fe 4f       	sbci	r31, 0xFE	; 254
     afc:	80 81       	ld	r24, Z
     afe:	91 81       	ldd	r25, Z+1	; 0x01
     b00:	8d 93       	st	X+, r24
     b02:	9c 93       	st	X, r25
     b04:	fe 01       	movw	r30, r28
     b06:	eb 5c       	subi	r30, 0xCB	; 203
     b08:	fe 4f       	sbci	r31, 0xFE	; 254
     b0a:	80 81       	ld	r24, Z
     b0c:	91 81       	ldd	r25, Z+1	; 0x01
     b0e:	01 97       	sbiw	r24, 0x01	; 1
     b10:	f1 f7       	brne	.-4      	; 0xb0e <__stack+0x6af>
     b12:	fe 01       	movw	r30, r28
     b14:	eb 5c       	subi	r30, 0xCB	; 203
     b16:	fe 4f       	sbci	r31, 0xFE	; 254
     b18:	91 83       	std	Z+1, r25	; 0x01
     b1a:	80 83       	st	Z, r24
	_delay_ms(1);
	//--------- Enable Four Bit Mode ----------
	LDP&=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|0<<LCD_D4; //Write 0x2
     b1c:	a2 e3       	ldi	r26, 0x32	; 50
     b1e:	b0 e0       	ldi	r27, 0x00	; 0
     b20:	e2 e3       	ldi	r30, 0x32	; 50
     b22:	f0 e0       	ldi	r31, 0x00	; 0
     b24:	80 81       	ld	r24, Z
     b26:	88 70       	andi	r24, 0x08	; 8
     b28:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
     b2a:	a2 e3       	ldi	r26, 0x32	; 50
     b2c:	b0 e0       	ldi	r27, 0x00	; 0
     b2e:	e2 e3       	ldi	r30, 0x32	; 50
     b30:	f0 e0       	ldi	r31, 0x00	; 0
     b32:	80 81       	ld	r24, Z
     b34:	82 60       	ori	r24, 0x02	; 2
     b36:	8c 93       	st	X, r24
     b38:	fe 01       	movw	r30, r28
     b3a:	ef 5c       	subi	r30, 0xCF	; 207
     b3c:	fe 4f       	sbci	r31, 0xFE	; 254
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	a0 e8       	ldi	r26, 0x80	; 128
     b44:	bf e3       	ldi	r27, 0x3F	; 63
     b46:	80 83       	st	Z, r24
     b48:	91 83       	std	Z+1, r25	; 0x01
     b4a:	a2 83       	std	Z+2, r26	; 0x02
     b4c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b4e:	8e 01       	movw	r16, r28
     b50:	03 5d       	subi	r16, 0xD3	; 211
     b52:	1e 4f       	sbci	r17, 0xFE	; 254
     b54:	fe 01       	movw	r30, r28
     b56:	ef 5c       	subi	r30, 0xCF	; 207
     b58:	fe 4f       	sbci	r31, 0xFE	; 254
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	4a e7       	ldi	r20, 0x7A	; 122
     b60:	53 e4       	ldi	r21, 0x43	; 67
     b62:	60 81       	ld	r22, Z
     b64:	71 81       	ldd	r23, Z+1	; 0x01
     b66:	82 81       	ldd	r24, Z+2	; 0x02
     b68:	93 81       	ldd	r25, Z+3	; 0x03
     b6a:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     b6e:	dc 01       	movw	r26, r24
     b70:	cb 01       	movw	r24, r22
     b72:	f8 01       	movw	r30, r16
     b74:	80 83       	st	Z, r24
     b76:	91 83       	std	Z+1, r25	; 0x01
     b78:	a2 83       	std	Z+2, r26	; 0x02
     b7a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b7c:	fe 01       	movw	r30, r28
     b7e:	e3 5d       	subi	r30, 0xD3	; 211
     b80:	fe 4f       	sbci	r31, 0xFE	; 254
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	30 e0       	ldi	r19, 0x00	; 0
     b86:	40 e8       	ldi	r20, 0x80	; 128
     b88:	5f e3       	ldi	r21, 0x3F	; 63
     b8a:	60 81       	ld	r22, Z
     b8c:	71 81       	ldd	r23, Z+1	; 0x01
     b8e:	82 81       	ldd	r24, Z+2	; 0x02
     b90:	93 81       	ldd	r25, Z+3	; 0x03
     b92:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     b96:	88 23       	and	r24, r24
     b98:	44 f4       	brge	.+16     	; 0xbaa <__stack+0x74b>
		__ticks = 1;
     b9a:	fe 01       	movw	r30, r28
     b9c:	e5 5d       	subi	r30, 0xD5	; 213
     b9e:	fe 4f       	sbci	r31, 0xFE	; 254
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	91 83       	std	Z+1, r25	; 0x01
     ba6:	80 83       	st	Z, r24
     ba8:	64 c0       	rjmp	.+200    	; 0xc72 <__stack+0x813>
	else if (__tmp > 65535)
     baa:	fe 01       	movw	r30, r28
     bac:	e3 5d       	subi	r30, 0xD3	; 211
     bae:	fe 4f       	sbci	r31, 0xFE	; 254
     bb0:	20 e0       	ldi	r18, 0x00	; 0
     bb2:	3f ef       	ldi	r19, 0xFF	; 255
     bb4:	4f e7       	ldi	r20, 0x7F	; 127
     bb6:	57 e4       	ldi	r21, 0x47	; 71
     bb8:	60 81       	ld	r22, Z
     bba:	71 81       	ldd	r23, Z+1	; 0x01
     bbc:	82 81       	ldd	r24, Z+2	; 0x02
     bbe:	93 81       	ldd	r25, Z+3	; 0x03
     bc0:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     bc4:	18 16       	cp	r1, r24
     bc6:	0c f0       	brlt	.+2      	; 0xbca <__stack+0x76b>
     bc8:	43 c0       	rjmp	.+134    	; 0xc50 <__stack+0x7f1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bca:	fe 01       	movw	r30, r28
     bcc:	ef 5c       	subi	r30, 0xCF	; 207
     bce:	fe 4f       	sbci	r31, 0xFE	; 254
     bd0:	20 e0       	ldi	r18, 0x00	; 0
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	40 e2       	ldi	r20, 0x20	; 32
     bd6:	51 e4       	ldi	r21, 0x41	; 65
     bd8:	60 81       	ld	r22, Z
     bda:	71 81       	ldd	r23, Z+1	; 0x01
     bdc:	82 81       	ldd	r24, Z+2	; 0x02
     bde:	93 81       	ldd	r25, Z+3	; 0x03
     be0:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     be4:	dc 01       	movw	r26, r24
     be6:	cb 01       	movw	r24, r22
     be8:	8e 01       	movw	r16, r28
     bea:	05 5d       	subi	r16, 0xD5	; 213
     bec:	1e 4f       	sbci	r17, 0xFE	; 254
     bee:	bc 01       	movw	r22, r24
     bf0:	cd 01       	movw	r24, r26
     bf2:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     bf6:	dc 01       	movw	r26, r24
     bf8:	cb 01       	movw	r24, r22
     bfa:	f8 01       	movw	r30, r16
     bfc:	91 83       	std	Z+1, r25	; 0x01
     bfe:	80 83       	st	Z, r24
     c00:	1f c0       	rjmp	.+62     	; 0xc40 <__stack+0x7e1>
     c02:	fe 01       	movw	r30, r28
     c04:	e7 5d       	subi	r30, 0xD7	; 215
     c06:	fe 4f       	sbci	r31, 0xFE	; 254
     c08:	89 e1       	ldi	r24, 0x19	; 25
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	91 83       	std	Z+1, r25	; 0x01
     c0e:	80 83       	st	Z, r24
     c10:	fe 01       	movw	r30, r28
     c12:	e7 5d       	subi	r30, 0xD7	; 215
     c14:	fe 4f       	sbci	r31, 0xFE	; 254
     c16:	80 81       	ld	r24, Z
     c18:	91 81       	ldd	r25, Z+1	; 0x01
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	f1 f7       	brne	.-4      	; 0xc1a <__stack+0x7bb>
     c1e:	fe 01       	movw	r30, r28
     c20:	e7 5d       	subi	r30, 0xD7	; 215
     c22:	fe 4f       	sbci	r31, 0xFE	; 254
     c24:	91 83       	std	Z+1, r25	; 0x01
     c26:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c28:	de 01       	movw	r26, r28
     c2a:	a5 5d       	subi	r26, 0xD5	; 213
     c2c:	be 4f       	sbci	r27, 0xFE	; 254
     c2e:	fe 01       	movw	r30, r28
     c30:	e5 5d       	subi	r30, 0xD5	; 213
     c32:	fe 4f       	sbci	r31, 0xFE	; 254
     c34:	80 81       	ld	r24, Z
     c36:	91 81       	ldd	r25, Z+1	; 0x01
     c38:	01 97       	sbiw	r24, 0x01	; 1
     c3a:	11 96       	adiw	r26, 0x01	; 1
     c3c:	9c 93       	st	X, r25
     c3e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c40:	fe 01       	movw	r30, r28
     c42:	e5 5d       	subi	r30, 0xD5	; 213
     c44:	fe 4f       	sbci	r31, 0xFE	; 254
     c46:	80 81       	ld	r24, Z
     c48:	91 81       	ldd	r25, Z+1	; 0x01
     c4a:	00 97       	sbiw	r24, 0x00	; 0
     c4c:	d1 f6       	brne	.-76     	; 0xc02 <__stack+0x7a3>
     c4e:	27 c0       	rjmp	.+78     	; 0xc9e <__stack+0x83f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c50:	8e 01       	movw	r16, r28
     c52:	05 5d       	subi	r16, 0xD5	; 213
     c54:	1e 4f       	sbci	r17, 0xFE	; 254
     c56:	fe 01       	movw	r30, r28
     c58:	e3 5d       	subi	r30, 0xD3	; 211
     c5a:	fe 4f       	sbci	r31, 0xFE	; 254
     c5c:	60 81       	ld	r22, Z
     c5e:	71 81       	ldd	r23, Z+1	; 0x01
     c60:	82 81       	ldd	r24, Z+2	; 0x02
     c62:	93 81       	ldd	r25, Z+3	; 0x03
     c64:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     c68:	dc 01       	movw	r26, r24
     c6a:	cb 01       	movw	r24, r22
     c6c:	f8 01       	movw	r30, r16
     c6e:	91 83       	std	Z+1, r25	; 0x01
     c70:	80 83       	st	Z, r24
     c72:	de 01       	movw	r26, r28
     c74:	a9 5d       	subi	r26, 0xD9	; 217
     c76:	be 4f       	sbci	r27, 0xFE	; 254
     c78:	fe 01       	movw	r30, r28
     c7a:	e5 5d       	subi	r30, 0xD5	; 213
     c7c:	fe 4f       	sbci	r31, 0xFE	; 254
     c7e:	80 81       	ld	r24, Z
     c80:	91 81       	ldd	r25, Z+1	; 0x01
     c82:	8d 93       	st	X+, r24
     c84:	9c 93       	st	X, r25
     c86:	fe 01       	movw	r30, r28
     c88:	e9 5d       	subi	r30, 0xD9	; 217
     c8a:	fe 4f       	sbci	r31, 0xFE	; 254
     c8c:	80 81       	ld	r24, Z
     c8e:	91 81       	ldd	r25, Z+1	; 0x01
     c90:	01 97       	sbiw	r24, 0x01	; 1
     c92:	f1 f7       	brne	.-4      	; 0xc90 <__stack+0x831>
     c94:	fe 01       	movw	r30, r28
     c96:	e9 5d       	subi	r30, 0xD9	; 217
     c98:	fe 4f       	sbci	r31, 0xFE	; 254
     c9a:	91 83       	std	Z+1, r25	; 0x01
     c9c:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     c9e:	a2 e3       	ldi	r26, 0x32	; 50
     ca0:	b0 e0       	ldi	r27, 0x00	; 0
     ca2:	e2 e3       	ldi	r30, 0x32	; 50
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	80 81       	ld	r24, Z
     ca8:	8d 7f       	andi	r24, 0xFD	; 253
     caa:	8c 93       	st	X, r24
     cac:	fe 01       	movw	r30, r28
     cae:	ed 5d       	subi	r30, 0xDD	; 221
     cb0:	fe 4f       	sbci	r31, 0xFE	; 254
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	a0 e8       	ldi	r26, 0x80	; 128
     cb8:	bf e3       	ldi	r27, 0x3F	; 63
     cba:	80 83       	st	Z, r24
     cbc:	91 83       	std	Z+1, r25	; 0x01
     cbe:	a2 83       	std	Z+2, r26	; 0x02
     cc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cc2:	8e 01       	movw	r16, r28
     cc4:	01 5e       	subi	r16, 0xE1	; 225
     cc6:	1e 4f       	sbci	r17, 0xFE	; 254
     cc8:	fe 01       	movw	r30, r28
     cca:	ed 5d       	subi	r30, 0xDD	; 221
     ccc:	fe 4f       	sbci	r31, 0xFE	; 254
     cce:	20 e0       	ldi	r18, 0x00	; 0
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	4a e7       	ldi	r20, 0x7A	; 122
     cd4:	53 e4       	ldi	r21, 0x43	; 67
     cd6:	60 81       	ld	r22, Z
     cd8:	71 81       	ldd	r23, Z+1	; 0x01
     cda:	82 81       	ldd	r24, Z+2	; 0x02
     cdc:	93 81       	ldd	r25, Z+3	; 0x03
     cde:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     ce2:	dc 01       	movw	r26, r24
     ce4:	cb 01       	movw	r24, r22
     ce6:	f8 01       	movw	r30, r16
     ce8:	80 83       	st	Z, r24
     cea:	91 83       	std	Z+1, r25	; 0x01
     cec:	a2 83       	std	Z+2, r26	; 0x02
     cee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     cf0:	fe 01       	movw	r30, r28
     cf2:	e1 5e       	subi	r30, 0xE1	; 225
     cf4:	fe 4f       	sbci	r31, 0xFE	; 254
     cf6:	20 e0       	ldi	r18, 0x00	; 0
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	40 e8       	ldi	r20, 0x80	; 128
     cfc:	5f e3       	ldi	r21, 0x3F	; 63
     cfe:	60 81       	ld	r22, Z
     d00:	71 81       	ldd	r23, Z+1	; 0x01
     d02:	82 81       	ldd	r24, Z+2	; 0x02
     d04:	93 81       	ldd	r25, Z+3	; 0x03
     d06:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     d0a:	88 23       	and	r24, r24
     d0c:	44 f4       	brge	.+16     	; 0xd1e <__stack+0x8bf>
		__ticks = 1;
     d0e:	fe 01       	movw	r30, r28
     d10:	e3 5e       	subi	r30, 0xE3	; 227
     d12:	fe 4f       	sbci	r31, 0xFE	; 254
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	91 83       	std	Z+1, r25	; 0x01
     d1a:	80 83       	st	Z, r24
     d1c:	64 c0       	rjmp	.+200    	; 0xde6 <__stack+0x987>
	else if (__tmp > 65535)
     d1e:	fe 01       	movw	r30, r28
     d20:	e1 5e       	subi	r30, 0xE1	; 225
     d22:	fe 4f       	sbci	r31, 0xFE	; 254
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	3f ef       	ldi	r19, 0xFF	; 255
     d28:	4f e7       	ldi	r20, 0x7F	; 127
     d2a:	57 e4       	ldi	r21, 0x47	; 71
     d2c:	60 81       	ld	r22, Z
     d2e:	71 81       	ldd	r23, Z+1	; 0x01
     d30:	82 81       	ldd	r24, Z+2	; 0x02
     d32:	93 81       	ldd	r25, Z+3	; 0x03
     d34:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     d38:	18 16       	cp	r1, r24
     d3a:	0c f0       	brlt	.+2      	; 0xd3e <__stack+0x8df>
     d3c:	43 c0       	rjmp	.+134    	; 0xdc4 <__stack+0x965>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d3e:	fe 01       	movw	r30, r28
     d40:	ed 5d       	subi	r30, 0xDD	; 221
     d42:	fe 4f       	sbci	r31, 0xFE	; 254
     d44:	20 e0       	ldi	r18, 0x00	; 0
     d46:	30 e0       	ldi	r19, 0x00	; 0
     d48:	40 e2       	ldi	r20, 0x20	; 32
     d4a:	51 e4       	ldi	r21, 0x41	; 65
     d4c:	60 81       	ld	r22, Z
     d4e:	71 81       	ldd	r23, Z+1	; 0x01
     d50:	82 81       	ldd	r24, Z+2	; 0x02
     d52:	93 81       	ldd	r25, Z+3	; 0x03
     d54:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     d58:	dc 01       	movw	r26, r24
     d5a:	cb 01       	movw	r24, r22
     d5c:	8e 01       	movw	r16, r28
     d5e:	03 5e       	subi	r16, 0xE3	; 227
     d60:	1e 4f       	sbci	r17, 0xFE	; 254
     d62:	bc 01       	movw	r22, r24
     d64:	cd 01       	movw	r24, r26
     d66:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     d6a:	dc 01       	movw	r26, r24
     d6c:	cb 01       	movw	r24, r22
     d6e:	f8 01       	movw	r30, r16
     d70:	91 83       	std	Z+1, r25	; 0x01
     d72:	80 83       	st	Z, r24
     d74:	1f c0       	rjmp	.+62     	; 0xdb4 <__stack+0x955>
     d76:	fe 01       	movw	r30, r28
     d78:	e5 5e       	subi	r30, 0xE5	; 229
     d7a:	fe 4f       	sbci	r31, 0xFE	; 254
     d7c:	89 e1       	ldi	r24, 0x19	; 25
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	91 83       	std	Z+1, r25	; 0x01
     d82:	80 83       	st	Z, r24
     d84:	fe 01       	movw	r30, r28
     d86:	e5 5e       	subi	r30, 0xE5	; 229
     d88:	fe 4f       	sbci	r31, 0xFE	; 254
     d8a:	80 81       	ld	r24, Z
     d8c:	91 81       	ldd	r25, Z+1	; 0x01
     d8e:	01 97       	sbiw	r24, 0x01	; 1
     d90:	f1 f7       	brne	.-4      	; 0xd8e <__stack+0x92f>
     d92:	fe 01       	movw	r30, r28
     d94:	e5 5e       	subi	r30, 0xE5	; 229
     d96:	fe 4f       	sbci	r31, 0xFE	; 254
     d98:	91 83       	std	Z+1, r25	; 0x01
     d9a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d9c:	de 01       	movw	r26, r28
     d9e:	a3 5e       	subi	r26, 0xE3	; 227
     da0:	be 4f       	sbci	r27, 0xFE	; 254
     da2:	fe 01       	movw	r30, r28
     da4:	e3 5e       	subi	r30, 0xE3	; 227
     da6:	fe 4f       	sbci	r31, 0xFE	; 254
     da8:	80 81       	ld	r24, Z
     daa:	91 81       	ldd	r25, Z+1	; 0x01
     dac:	01 97       	sbiw	r24, 0x01	; 1
     dae:	11 96       	adiw	r26, 0x01	; 1
     db0:	9c 93       	st	X, r25
     db2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     db4:	fe 01       	movw	r30, r28
     db6:	e3 5e       	subi	r30, 0xE3	; 227
     db8:	fe 4f       	sbci	r31, 0xFE	; 254
     dba:	80 81       	ld	r24, Z
     dbc:	91 81       	ldd	r25, Z+1	; 0x01
     dbe:	00 97       	sbiw	r24, 0x00	; 0
     dc0:	d1 f6       	brne	.-76     	; 0xd76 <__stack+0x917>
     dc2:	27 c0       	rjmp	.+78     	; 0xe12 <__stack+0x9b3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dc4:	8e 01       	movw	r16, r28
     dc6:	03 5e       	subi	r16, 0xE3	; 227
     dc8:	1e 4f       	sbci	r17, 0xFE	; 254
     dca:	fe 01       	movw	r30, r28
     dcc:	e1 5e       	subi	r30, 0xE1	; 225
     dce:	fe 4f       	sbci	r31, 0xFE	; 254
     dd0:	60 81       	ld	r22, Z
     dd2:	71 81       	ldd	r23, Z+1	; 0x01
     dd4:	82 81       	ldd	r24, Z+2	; 0x02
     dd6:	93 81       	ldd	r25, Z+3	; 0x03
     dd8:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     ddc:	dc 01       	movw	r26, r24
     dde:	cb 01       	movw	r24, r22
     de0:	f8 01       	movw	r30, r16
     de2:	91 83       	std	Z+1, r25	; 0x01
     de4:	80 83       	st	Z, r24
     de6:	de 01       	movw	r26, r28
     de8:	a7 5e       	subi	r26, 0xE7	; 231
     dea:	be 4f       	sbci	r27, 0xFE	; 254
     dec:	fe 01       	movw	r30, r28
     dee:	e3 5e       	subi	r30, 0xE3	; 227
     df0:	fe 4f       	sbci	r31, 0xFE	; 254
     df2:	80 81       	ld	r24, Z
     df4:	91 81       	ldd	r25, Z+1	; 0x01
     df6:	8d 93       	st	X+, r24
     df8:	9c 93       	st	X, r25
     dfa:	fe 01       	movw	r30, r28
     dfc:	e7 5e       	subi	r30, 0xE7	; 231
     dfe:	fe 4f       	sbci	r31, 0xFE	; 254
     e00:	80 81       	ld	r24, Z
     e02:	91 81       	ldd	r25, Z+1	; 0x01
     e04:	01 97       	sbiw	r24, 0x01	; 1
     e06:	f1 f7       	brne	.-4      	; 0xe04 <__stack+0x9a5>
     e08:	fe 01       	movw	r30, r28
     e0a:	e7 5e       	subi	r30, 0xE7	; 231
     e0c:	fe 4f       	sbci	r31, 0xFE	; 254
     e0e:	91 83       	std	Z+1, r25	; 0x01
     e10:	80 83       	st	Z, r24
	_delay_ms(1);
   //---------- Set Interface Length ----------
	LDP|=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|0<<LCD_D4; //Write 0x2 - 4 bits
     e12:	a2 e3       	ldi	r26, 0x32	; 50
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	e2 e3       	ldi	r30, 0x32	; 50
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	80 81       	ld	r24, Z
     e1c:	88 60       	ori	r24, 0x08	; 8
     e1e:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
     e20:	a2 e3       	ldi	r26, 0x32	; 50
     e22:	b0 e0       	ldi	r27, 0x00	; 0
     e24:	e2 e3       	ldi	r30, 0x32	; 50
     e26:	f0 e0       	ldi	r31, 0x00	; 0
     e28:	80 81       	ld	r24, Z
     e2a:	82 60       	ori	r24, 0x02	; 2
     e2c:	8c 93       	st	X, r24
     e2e:	fe 01       	movw	r30, r28
     e30:	eb 5e       	subi	r30, 0xEB	; 235
     e32:	fe 4f       	sbci	r31, 0xFE	; 254
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	a0 e8       	ldi	r26, 0x80	; 128
     e3a:	bf e3       	ldi	r27, 0x3F	; 63
     e3c:	80 83       	st	Z, r24
     e3e:	91 83       	std	Z+1, r25	; 0x01
     e40:	a2 83       	std	Z+2, r26	; 0x02
     e42:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e44:	8e 01       	movw	r16, r28
     e46:	0f 5e       	subi	r16, 0xEF	; 239
     e48:	1e 4f       	sbci	r17, 0xFE	; 254
     e4a:	fe 01       	movw	r30, r28
     e4c:	eb 5e       	subi	r30, 0xEB	; 235
     e4e:	fe 4f       	sbci	r31, 0xFE	; 254
     e50:	20 e0       	ldi	r18, 0x00	; 0
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	4a e7       	ldi	r20, 0x7A	; 122
     e56:	53 e4       	ldi	r21, 0x43	; 67
     e58:	60 81       	ld	r22, Z
     e5a:	71 81       	ldd	r23, Z+1	; 0x01
     e5c:	82 81       	ldd	r24, Z+2	; 0x02
     e5e:	93 81       	ldd	r25, Z+3	; 0x03
     e60:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     e64:	dc 01       	movw	r26, r24
     e66:	cb 01       	movw	r24, r22
     e68:	f8 01       	movw	r30, r16
     e6a:	80 83       	st	Z, r24
     e6c:	91 83       	std	Z+1, r25	; 0x01
     e6e:	a2 83       	std	Z+2, r26	; 0x02
     e70:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e72:	fe 01       	movw	r30, r28
     e74:	ef 5e       	subi	r30, 0xEF	; 239
     e76:	fe 4f       	sbci	r31, 0xFE	; 254
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	40 e8       	ldi	r20, 0x80	; 128
     e7e:	5f e3       	ldi	r21, 0x3F	; 63
     e80:	60 81       	ld	r22, Z
     e82:	71 81       	ldd	r23, Z+1	; 0x01
     e84:	82 81       	ldd	r24, Z+2	; 0x02
     e86:	93 81       	ldd	r25, Z+3	; 0x03
     e88:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
     e8c:	88 23       	and	r24, r24
     e8e:	44 f4       	brge	.+16     	; 0xea0 <__stack+0xa41>
		__ticks = 1;
     e90:	fe 01       	movw	r30, r28
     e92:	e1 5f       	subi	r30, 0xF1	; 241
     e94:	fe 4f       	sbci	r31, 0xFE	; 254
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	91 83       	std	Z+1, r25	; 0x01
     e9c:	80 83       	st	Z, r24
     e9e:	64 c0       	rjmp	.+200    	; 0xf68 <__stack+0xb09>
	else if (__tmp > 65535)
     ea0:	fe 01       	movw	r30, r28
     ea2:	ef 5e       	subi	r30, 0xEF	; 239
     ea4:	fe 4f       	sbci	r31, 0xFE	; 254
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	3f ef       	ldi	r19, 0xFF	; 255
     eaa:	4f e7       	ldi	r20, 0x7F	; 127
     eac:	57 e4       	ldi	r21, 0x47	; 71
     eae:	60 81       	ld	r22, Z
     eb0:	71 81       	ldd	r23, Z+1	; 0x01
     eb2:	82 81       	ldd	r24, Z+2	; 0x02
     eb4:	93 81       	ldd	r25, Z+3	; 0x03
     eb6:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
     eba:	18 16       	cp	r1, r24
     ebc:	0c f0       	brlt	.+2      	; 0xec0 <__stack+0xa61>
     ebe:	43 c0       	rjmp	.+134    	; 0xf46 <__stack+0xae7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ec0:	fe 01       	movw	r30, r28
     ec2:	eb 5e       	subi	r30, 0xEB	; 235
     ec4:	fe 4f       	sbci	r31, 0xFE	; 254
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 e2       	ldi	r20, 0x20	; 32
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	60 81       	ld	r22, Z
     ed0:	71 81       	ldd	r23, Z+1	; 0x01
     ed2:	82 81       	ldd	r24, Z+2	; 0x02
     ed4:	93 81       	ldd	r25, Z+3	; 0x03
     ed6:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     eda:	dc 01       	movw	r26, r24
     edc:	cb 01       	movw	r24, r22
     ede:	8e 01       	movw	r16, r28
     ee0:	01 5f       	subi	r16, 0xF1	; 241
     ee2:	1e 4f       	sbci	r17, 0xFE	; 254
     ee4:	bc 01       	movw	r22, r24
     ee6:	cd 01       	movw	r24, r26
     ee8:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     eec:	dc 01       	movw	r26, r24
     eee:	cb 01       	movw	r24, r22
     ef0:	f8 01       	movw	r30, r16
     ef2:	91 83       	std	Z+1, r25	; 0x01
     ef4:	80 83       	st	Z, r24
     ef6:	1f c0       	rjmp	.+62     	; 0xf36 <__stack+0xad7>
     ef8:	fe 01       	movw	r30, r28
     efa:	e3 5f       	subi	r30, 0xF3	; 243
     efc:	fe 4f       	sbci	r31, 0xFE	; 254
     efe:	89 e1       	ldi	r24, 0x19	; 25
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	91 83       	std	Z+1, r25	; 0x01
     f04:	80 83       	st	Z, r24
     f06:	fe 01       	movw	r30, r28
     f08:	e3 5f       	subi	r30, 0xF3	; 243
     f0a:	fe 4f       	sbci	r31, 0xFE	; 254
     f0c:	80 81       	ld	r24, Z
     f0e:	91 81       	ldd	r25, Z+1	; 0x01
     f10:	01 97       	sbiw	r24, 0x01	; 1
     f12:	f1 f7       	brne	.-4      	; 0xf10 <__stack+0xab1>
     f14:	fe 01       	movw	r30, r28
     f16:	e3 5f       	subi	r30, 0xF3	; 243
     f18:	fe 4f       	sbci	r31, 0xFE	; 254
     f1a:	91 83       	std	Z+1, r25	; 0x01
     f1c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f1e:	de 01       	movw	r26, r28
     f20:	a1 5f       	subi	r26, 0xF1	; 241
     f22:	be 4f       	sbci	r27, 0xFE	; 254
     f24:	fe 01       	movw	r30, r28
     f26:	e1 5f       	subi	r30, 0xF1	; 241
     f28:	fe 4f       	sbci	r31, 0xFE	; 254
     f2a:	80 81       	ld	r24, Z
     f2c:	91 81       	ldd	r25, Z+1	; 0x01
     f2e:	01 97       	sbiw	r24, 0x01	; 1
     f30:	11 96       	adiw	r26, 0x01	; 1
     f32:	9c 93       	st	X, r25
     f34:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f36:	fe 01       	movw	r30, r28
     f38:	e1 5f       	subi	r30, 0xF1	; 241
     f3a:	fe 4f       	sbci	r31, 0xFE	; 254
     f3c:	80 81       	ld	r24, Z
     f3e:	91 81       	ldd	r25, Z+1	; 0x01
     f40:	00 97       	sbiw	r24, 0x00	; 0
     f42:	d1 f6       	brne	.-76     	; 0xef8 <__stack+0xa99>
     f44:	27 c0       	rjmp	.+78     	; 0xf94 <__stack+0xb35>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f46:	8e 01       	movw	r16, r28
     f48:	01 5f       	subi	r16, 0xF1	; 241
     f4a:	1e 4f       	sbci	r17, 0xFE	; 254
     f4c:	fe 01       	movw	r30, r28
     f4e:	ef 5e       	subi	r30, 0xEF	; 239
     f50:	fe 4f       	sbci	r31, 0xFE	; 254
     f52:	60 81       	ld	r22, Z
     f54:	71 81       	ldd	r23, Z+1	; 0x01
     f56:	82 81       	ldd	r24, Z+2	; 0x02
     f58:	93 81       	ldd	r25, Z+3	; 0x03
     f5a:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
     f5e:	dc 01       	movw	r26, r24
     f60:	cb 01       	movw	r24, r22
     f62:	f8 01       	movw	r30, r16
     f64:	91 83       	std	Z+1, r25	; 0x01
     f66:	80 83       	st	Z, r24
     f68:	de 01       	movw	r26, r28
     f6a:	a5 5f       	subi	r26, 0xF5	; 245
     f6c:	be 4f       	sbci	r27, 0xFE	; 254
     f6e:	fe 01       	movw	r30, r28
     f70:	e1 5f       	subi	r30, 0xF1	; 241
     f72:	fe 4f       	sbci	r31, 0xFE	; 254
     f74:	80 81       	ld	r24, Z
     f76:	91 81       	ldd	r25, Z+1	; 0x01
     f78:	8d 93       	st	X+, r24
     f7a:	9c 93       	st	X, r25
     f7c:	fe 01       	movw	r30, r28
     f7e:	e5 5f       	subi	r30, 0xF5	; 245
     f80:	fe 4f       	sbci	r31, 0xFE	; 254
     f82:	80 81       	ld	r24, Z
     f84:	91 81       	ldd	r25, Z+1	; 0x01
     f86:	01 97       	sbiw	r24, 0x01	; 1
     f88:	f1 f7       	brne	.-4      	; 0xf86 <__stack+0xb27>
     f8a:	fe 01       	movw	r30, r28
     f8c:	e5 5f       	subi	r30, 0xF5	; 245
     f8e:	fe 4f       	sbci	r31, 0xFE	; 254
     f90:	91 83       	std	Z+1, r25	; 0x01
     f92:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     f94:	a2 e3       	ldi	r26, 0x32	; 50
     f96:	b0 e0       	ldi	r27, 0x00	; 0
     f98:	e2 e3       	ldi	r30, 0x32	; 50
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	80 81       	ld	r24, Z
     f9e:	8d 7f       	andi	r24, 0xFD	; 253
     fa0:	8c 93       	st	X, r24
     fa2:	fe 01       	movw	r30, r28
     fa4:	e9 5f       	subi	r30, 0xF9	; 249
     fa6:	fe 4f       	sbci	r31, 0xFE	; 254
     fa8:	80 e0       	ldi	r24, 0x00	; 0
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	a0 e8       	ldi	r26, 0x80	; 128
     fae:	bf e3       	ldi	r27, 0x3F	; 63
     fb0:	80 83       	st	Z, r24
     fb2:	91 83       	std	Z+1, r25	; 0x01
     fb4:	a2 83       	std	Z+2, r26	; 0x02
     fb6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fb8:	8e 01       	movw	r16, r28
     fba:	0d 5f       	subi	r16, 0xFD	; 253
     fbc:	1e 4f       	sbci	r17, 0xFE	; 254
     fbe:	fe 01       	movw	r30, r28
     fc0:	e9 5f       	subi	r30, 0xF9	; 249
     fc2:	fe 4f       	sbci	r31, 0xFE	; 254
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	4a e7       	ldi	r20, 0x7A	; 122
     fca:	53 e4       	ldi	r21, 0x43	; 67
     fcc:	60 81       	ld	r22, Z
     fce:	71 81       	ldd	r23, Z+1	; 0x01
     fd0:	82 81       	ldd	r24, Z+2	; 0x02
     fd2:	93 81       	ldd	r25, Z+3	; 0x03
     fd4:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
     fd8:	dc 01       	movw	r26, r24
     fda:	cb 01       	movw	r24, r22
     fdc:	f8 01       	movw	r30, r16
     fde:	80 83       	st	Z, r24
     fe0:	91 83       	std	Z+1, r25	; 0x01
     fe2:	a2 83       	std	Z+2, r26	; 0x02
     fe4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     fe6:	fe 01       	movw	r30, r28
     fe8:	ed 5f       	subi	r30, 0xFD	; 253
     fea:	fe 4f       	sbci	r31, 0xFE	; 254
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	40 e8       	ldi	r20, 0x80	; 128
     ff2:	5f e3       	ldi	r21, 0x3F	; 63
     ff4:	60 81       	ld	r22, Z
     ff6:	71 81       	ldd	r23, Z+1	; 0x01
     ff8:	82 81       	ldd	r24, Z+2	; 0x02
     ffa:	93 81       	ldd	r25, Z+3	; 0x03
     ffc:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    1000:	88 23       	and	r24, r24
    1002:	44 f4       	brge	.+16     	; 0x1014 <__stack+0xbb5>
		__ticks = 1;
    1004:	fe 01       	movw	r30, r28
    1006:	ef 5f       	subi	r30, 0xFF	; 255
    1008:	fe 4f       	sbci	r31, 0xFE	; 254
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	91 83       	std	Z+1, r25	; 0x01
    1010:	80 83       	st	Z, r24
    1012:	64 c0       	rjmp	.+200    	; 0x10dc <__stack+0xc7d>
	else if (__tmp > 65535)
    1014:	fe 01       	movw	r30, r28
    1016:	ed 5f       	subi	r30, 0xFD	; 253
    1018:	fe 4f       	sbci	r31, 0xFE	; 254
    101a:	20 e0       	ldi	r18, 0x00	; 0
    101c:	3f ef       	ldi	r19, 0xFF	; 255
    101e:	4f e7       	ldi	r20, 0x7F	; 127
    1020:	57 e4       	ldi	r21, 0x47	; 71
    1022:	60 81       	ld	r22, Z
    1024:	71 81       	ldd	r23, Z+1	; 0x01
    1026:	82 81       	ldd	r24, Z+2	; 0x02
    1028:	93 81       	ldd	r25, Z+3	; 0x03
    102a:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    102e:	18 16       	cp	r1, r24
    1030:	0c f0       	brlt	.+2      	; 0x1034 <__stack+0xbd5>
    1032:	43 c0       	rjmp	.+134    	; 0x10ba <__stack+0xc5b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1034:	fe 01       	movw	r30, r28
    1036:	e9 5f       	subi	r30, 0xF9	; 249
    1038:	fe 4f       	sbci	r31, 0xFE	; 254
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	40 e2       	ldi	r20, 0x20	; 32
    1040:	51 e4       	ldi	r21, 0x41	; 65
    1042:	60 81       	ld	r22, Z
    1044:	71 81       	ldd	r23, Z+1	; 0x01
    1046:	82 81       	ldd	r24, Z+2	; 0x02
    1048:	93 81       	ldd	r25, Z+3	; 0x03
    104a:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    104e:	dc 01       	movw	r26, r24
    1050:	cb 01       	movw	r24, r22
    1052:	8e 01       	movw	r16, r28
    1054:	0f 5f       	subi	r16, 0xFF	; 255
    1056:	1e 4f       	sbci	r17, 0xFE	; 254
    1058:	bc 01       	movw	r22, r24
    105a:	cd 01       	movw	r24, r26
    105c:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1060:	dc 01       	movw	r26, r24
    1062:	cb 01       	movw	r24, r22
    1064:	f8 01       	movw	r30, r16
    1066:	91 83       	std	Z+1, r25	; 0x01
    1068:	80 83       	st	Z, r24
    106a:	1f c0       	rjmp	.+62     	; 0x10aa <__stack+0xc4b>
    106c:	fe 01       	movw	r30, r28
    106e:	e1 50       	subi	r30, 0x01	; 1
    1070:	ff 4f       	sbci	r31, 0xFF	; 255
    1072:	89 e1       	ldi	r24, 0x19	; 25
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	91 83       	std	Z+1, r25	; 0x01
    1078:	80 83       	st	Z, r24
    107a:	fe 01       	movw	r30, r28
    107c:	e1 50       	subi	r30, 0x01	; 1
    107e:	ff 4f       	sbci	r31, 0xFF	; 255
    1080:	80 81       	ld	r24, Z
    1082:	91 81       	ldd	r25, Z+1	; 0x01
    1084:	01 97       	sbiw	r24, 0x01	; 1
    1086:	f1 f7       	brne	.-4      	; 0x1084 <__stack+0xc25>
    1088:	fe 01       	movw	r30, r28
    108a:	e1 50       	subi	r30, 0x01	; 1
    108c:	ff 4f       	sbci	r31, 0xFF	; 255
    108e:	91 83       	std	Z+1, r25	; 0x01
    1090:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1092:	de 01       	movw	r26, r28
    1094:	af 5f       	subi	r26, 0xFF	; 255
    1096:	be 4f       	sbci	r27, 0xFE	; 254
    1098:	fe 01       	movw	r30, r28
    109a:	ef 5f       	subi	r30, 0xFF	; 255
    109c:	fe 4f       	sbci	r31, 0xFE	; 254
    109e:	80 81       	ld	r24, Z
    10a0:	91 81       	ldd	r25, Z+1	; 0x01
    10a2:	01 97       	sbiw	r24, 0x01	; 1
    10a4:	11 96       	adiw	r26, 0x01	; 1
    10a6:	9c 93       	st	X, r25
    10a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10aa:	fe 01       	movw	r30, r28
    10ac:	ef 5f       	subi	r30, 0xFF	; 255
    10ae:	fe 4f       	sbci	r31, 0xFE	; 254
    10b0:	80 81       	ld	r24, Z
    10b2:	91 81       	ldd	r25, Z+1	; 0x01
    10b4:	00 97       	sbiw	r24, 0x00	; 0
    10b6:	d1 f6       	brne	.-76     	; 0x106c <__stack+0xc0d>
    10b8:	27 c0       	rjmp	.+78     	; 0x1108 <__stack+0xca9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10ba:	8e 01       	movw	r16, r28
    10bc:	0f 5f       	subi	r16, 0xFF	; 255
    10be:	1e 4f       	sbci	r17, 0xFE	; 254
    10c0:	fe 01       	movw	r30, r28
    10c2:	ed 5f       	subi	r30, 0xFD	; 253
    10c4:	fe 4f       	sbci	r31, 0xFE	; 254
    10c6:	60 81       	ld	r22, Z
    10c8:	71 81       	ldd	r23, Z+1	; 0x01
    10ca:	82 81       	ldd	r24, Z+2	; 0x02
    10cc:	93 81       	ldd	r25, Z+3	; 0x03
    10ce:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    10d2:	dc 01       	movw	r26, r24
    10d4:	cb 01       	movw	r24, r22
    10d6:	f8 01       	movw	r30, r16
    10d8:	91 83       	std	Z+1, r25	; 0x01
    10da:	80 83       	st	Z, r24
    10dc:	de 01       	movw	r26, r28
    10de:	a3 50       	subi	r26, 0x03	; 3
    10e0:	bf 4f       	sbci	r27, 0xFF	; 255
    10e2:	fe 01       	movw	r30, r28
    10e4:	ef 5f       	subi	r30, 0xFF	; 255
    10e6:	fe 4f       	sbci	r31, 0xFE	; 254
    10e8:	80 81       	ld	r24, Z
    10ea:	91 81       	ldd	r25, Z+1	; 0x01
    10ec:	8d 93       	st	X+, r24
    10ee:	9c 93       	st	X, r25
    10f0:	fe 01       	movw	r30, r28
    10f2:	e3 50       	subi	r30, 0x03	; 3
    10f4:	ff 4f       	sbci	r31, 0xFF	; 255
    10f6:	80 81       	ld	r24, Z
    10f8:	91 81       	ldd	r25, Z+1	; 0x01
    10fa:	01 97       	sbiw	r24, 0x01	; 1
    10fc:	f1 f7       	brne	.-4      	; 0x10fa <__stack+0xc9b>
    10fe:	fe 01       	movw	r30, r28
    1100:	e3 50       	subi	r30, 0x03	; 3
    1102:	ff 4f       	sbci	r31, 0xFF	; 255
    1104:	91 83       	std	Z+1, r25	; 0x01
    1106:	80 83       	st	Z, r24
	_delay_ms(1);
	LDP|=1<<LCD_D7|0<<LCD_D6|0<<LCD_D5|0<<LCD_D4; //Write 0x8 - 2 lines, 5x7
    1108:	a2 e3       	ldi	r26, 0x32	; 50
    110a:	b0 e0       	ldi	r27, 0x00	; 0
    110c:	e2 e3       	ldi	r30, 0x32	; 50
    110e:	f0 e0       	ldi	r31, 0x00	; 0
    1110:	80 81       	ld	r24, Z
    1112:	80 62       	ori	r24, 0x20	; 32
    1114:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
    1116:	a2 e3       	ldi	r26, 0x32	; 50
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	e2 e3       	ldi	r30, 0x32	; 50
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	80 81       	ld	r24, Z
    1120:	82 60       	ori	r24, 0x02	; 2
    1122:	8c 93       	st	X, r24
    1124:	fe 01       	movw	r30, r28
    1126:	e7 50       	subi	r30, 0x07	; 7
    1128:	ff 4f       	sbci	r31, 0xFF	; 255
    112a:	80 e0       	ldi	r24, 0x00	; 0
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	a0 e8       	ldi	r26, 0x80	; 128
    1130:	bf e3       	ldi	r27, 0x3F	; 63
    1132:	80 83       	st	Z, r24
    1134:	91 83       	std	Z+1, r25	; 0x01
    1136:	a2 83       	std	Z+2, r26	; 0x02
    1138:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    113a:	8e 01       	movw	r16, r28
    113c:	0b 50       	subi	r16, 0x0B	; 11
    113e:	1f 4f       	sbci	r17, 0xFF	; 255
    1140:	fe 01       	movw	r30, r28
    1142:	e7 50       	subi	r30, 0x07	; 7
    1144:	ff 4f       	sbci	r31, 0xFF	; 255
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	4a e7       	ldi	r20, 0x7A	; 122
    114c:	53 e4       	ldi	r21, 0x43	; 67
    114e:	60 81       	ld	r22, Z
    1150:	71 81       	ldd	r23, Z+1	; 0x01
    1152:	82 81       	ldd	r24, Z+2	; 0x02
    1154:	93 81       	ldd	r25, Z+3	; 0x03
    1156:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    115a:	dc 01       	movw	r26, r24
    115c:	cb 01       	movw	r24, r22
    115e:	f8 01       	movw	r30, r16
    1160:	80 83       	st	Z, r24
    1162:	91 83       	std	Z+1, r25	; 0x01
    1164:	a2 83       	std	Z+2, r26	; 0x02
    1166:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1168:	fe 01       	movw	r30, r28
    116a:	eb 50       	subi	r30, 0x0B	; 11
    116c:	ff 4f       	sbci	r31, 0xFF	; 255
    116e:	20 e0       	ldi	r18, 0x00	; 0
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	40 e8       	ldi	r20, 0x80	; 128
    1174:	5f e3       	ldi	r21, 0x3F	; 63
    1176:	60 81       	ld	r22, Z
    1178:	71 81       	ldd	r23, Z+1	; 0x01
    117a:	82 81       	ldd	r24, Z+2	; 0x02
    117c:	93 81       	ldd	r25, Z+3	; 0x03
    117e:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    1182:	88 23       	and	r24, r24
    1184:	44 f4       	brge	.+16     	; 0x1196 <__stack+0xd37>
		__ticks = 1;
    1186:	fe 01       	movw	r30, r28
    1188:	ed 50       	subi	r30, 0x0D	; 13
    118a:	ff 4f       	sbci	r31, 0xFF	; 255
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	91 83       	std	Z+1, r25	; 0x01
    1192:	80 83       	st	Z, r24
    1194:	64 c0       	rjmp	.+200    	; 0x125e <__stack+0xdff>
	else if (__tmp > 65535)
    1196:	fe 01       	movw	r30, r28
    1198:	eb 50       	subi	r30, 0x0B	; 11
    119a:	ff 4f       	sbci	r31, 0xFF	; 255
    119c:	20 e0       	ldi	r18, 0x00	; 0
    119e:	3f ef       	ldi	r19, 0xFF	; 255
    11a0:	4f e7       	ldi	r20, 0x7F	; 127
    11a2:	57 e4       	ldi	r21, 0x47	; 71
    11a4:	60 81       	ld	r22, Z
    11a6:	71 81       	ldd	r23, Z+1	; 0x01
    11a8:	82 81       	ldd	r24, Z+2	; 0x02
    11aa:	93 81       	ldd	r25, Z+3	; 0x03
    11ac:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    11b0:	18 16       	cp	r1, r24
    11b2:	0c f0       	brlt	.+2      	; 0x11b6 <__stack+0xd57>
    11b4:	43 c0       	rjmp	.+134    	; 0x123c <__stack+0xddd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11b6:	fe 01       	movw	r30, r28
    11b8:	e7 50       	subi	r30, 0x07	; 7
    11ba:	ff 4f       	sbci	r31, 0xFF	; 255
    11bc:	20 e0       	ldi	r18, 0x00	; 0
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	40 e2       	ldi	r20, 0x20	; 32
    11c2:	51 e4       	ldi	r21, 0x41	; 65
    11c4:	60 81       	ld	r22, Z
    11c6:	71 81       	ldd	r23, Z+1	; 0x01
    11c8:	82 81       	ldd	r24, Z+2	; 0x02
    11ca:	93 81       	ldd	r25, Z+3	; 0x03
    11cc:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    11d0:	dc 01       	movw	r26, r24
    11d2:	cb 01       	movw	r24, r22
    11d4:	8e 01       	movw	r16, r28
    11d6:	0d 50       	subi	r16, 0x0D	; 13
    11d8:	1f 4f       	sbci	r17, 0xFF	; 255
    11da:	bc 01       	movw	r22, r24
    11dc:	cd 01       	movw	r24, r26
    11de:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    11e2:	dc 01       	movw	r26, r24
    11e4:	cb 01       	movw	r24, r22
    11e6:	f8 01       	movw	r30, r16
    11e8:	91 83       	std	Z+1, r25	; 0x01
    11ea:	80 83       	st	Z, r24
    11ec:	1f c0       	rjmp	.+62     	; 0x122c <__stack+0xdcd>
    11ee:	fe 01       	movw	r30, r28
    11f0:	ef 50       	subi	r30, 0x0F	; 15
    11f2:	ff 4f       	sbci	r31, 0xFF	; 255
    11f4:	89 e1       	ldi	r24, 0x19	; 25
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	91 83       	std	Z+1, r25	; 0x01
    11fa:	80 83       	st	Z, r24
    11fc:	fe 01       	movw	r30, r28
    11fe:	ef 50       	subi	r30, 0x0F	; 15
    1200:	ff 4f       	sbci	r31, 0xFF	; 255
    1202:	80 81       	ld	r24, Z
    1204:	91 81       	ldd	r25, Z+1	; 0x01
    1206:	01 97       	sbiw	r24, 0x01	; 1
    1208:	f1 f7       	brne	.-4      	; 0x1206 <__stack+0xda7>
    120a:	fe 01       	movw	r30, r28
    120c:	ef 50       	subi	r30, 0x0F	; 15
    120e:	ff 4f       	sbci	r31, 0xFF	; 255
    1210:	91 83       	std	Z+1, r25	; 0x01
    1212:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1214:	de 01       	movw	r26, r28
    1216:	ad 50       	subi	r26, 0x0D	; 13
    1218:	bf 4f       	sbci	r27, 0xFF	; 255
    121a:	fe 01       	movw	r30, r28
    121c:	ed 50       	subi	r30, 0x0D	; 13
    121e:	ff 4f       	sbci	r31, 0xFF	; 255
    1220:	80 81       	ld	r24, Z
    1222:	91 81       	ldd	r25, Z+1	; 0x01
    1224:	01 97       	sbiw	r24, 0x01	; 1
    1226:	11 96       	adiw	r26, 0x01	; 1
    1228:	9c 93       	st	X, r25
    122a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    122c:	fe 01       	movw	r30, r28
    122e:	ed 50       	subi	r30, 0x0D	; 13
    1230:	ff 4f       	sbci	r31, 0xFF	; 255
    1232:	80 81       	ld	r24, Z
    1234:	91 81       	ldd	r25, Z+1	; 0x01
    1236:	00 97       	sbiw	r24, 0x00	; 0
    1238:	d1 f6       	brne	.-76     	; 0x11ee <__stack+0xd8f>
    123a:	27 c0       	rjmp	.+78     	; 0x128a <__stack+0xe2b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    123c:	8e 01       	movw	r16, r28
    123e:	0d 50       	subi	r16, 0x0D	; 13
    1240:	1f 4f       	sbci	r17, 0xFF	; 255
    1242:	fe 01       	movw	r30, r28
    1244:	eb 50       	subi	r30, 0x0B	; 11
    1246:	ff 4f       	sbci	r31, 0xFF	; 255
    1248:	60 81       	ld	r22, Z
    124a:	71 81       	ldd	r23, Z+1	; 0x01
    124c:	82 81       	ldd	r24, Z+2	; 0x02
    124e:	93 81       	ldd	r25, Z+3	; 0x03
    1250:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1254:	dc 01       	movw	r26, r24
    1256:	cb 01       	movw	r24, r22
    1258:	f8 01       	movw	r30, r16
    125a:	91 83       	std	Z+1, r25	; 0x01
    125c:	80 83       	st	Z, r24
    125e:	de 01       	movw	r26, r28
    1260:	a1 51       	subi	r26, 0x11	; 17
    1262:	bf 4f       	sbci	r27, 0xFF	; 255
    1264:	fe 01       	movw	r30, r28
    1266:	ed 50       	subi	r30, 0x0D	; 13
    1268:	ff 4f       	sbci	r31, 0xFF	; 255
    126a:	80 81       	ld	r24, Z
    126c:	91 81       	ldd	r25, Z+1	; 0x01
    126e:	8d 93       	st	X+, r24
    1270:	9c 93       	st	X, r25
    1272:	fe 01       	movw	r30, r28
    1274:	e1 51       	subi	r30, 0x11	; 17
    1276:	ff 4f       	sbci	r31, 0xFF	; 255
    1278:	80 81       	ld	r24, Z
    127a:	91 81       	ldd	r25, Z+1	; 0x01
    127c:	01 97       	sbiw	r24, 0x01	; 1
    127e:	f1 f7       	brne	.-4      	; 0x127c <__stack+0xe1d>
    1280:	fe 01       	movw	r30, r28
    1282:	e1 51       	subi	r30, 0x11	; 17
    1284:	ff 4f       	sbci	r31, 0xFF	; 255
    1286:	91 83       	std	Z+1, r25	; 0x01
    1288:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    128a:	a2 e3       	ldi	r26, 0x32	; 50
    128c:	b0 e0       	ldi	r27, 0x00	; 0
    128e:	e2 e3       	ldi	r30, 0x32	; 50
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	80 81       	ld	r24, Z
    1294:	8d 7f       	andi	r24, 0xFD	; 253
    1296:	8c 93       	st	X, r24
    1298:	fe 01       	movw	r30, r28
    129a:	e5 51       	subi	r30, 0x15	; 21
    129c:	ff 4f       	sbci	r31, 0xFF	; 255
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	a0 e8       	ldi	r26, 0x80	; 128
    12a4:	bf e3       	ldi	r27, 0x3F	; 63
    12a6:	80 83       	st	Z, r24
    12a8:	91 83       	std	Z+1, r25	; 0x01
    12aa:	a2 83       	std	Z+2, r26	; 0x02
    12ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12ae:	8e 01       	movw	r16, r28
    12b0:	09 51       	subi	r16, 0x19	; 25
    12b2:	1f 4f       	sbci	r17, 0xFF	; 255
    12b4:	fe 01       	movw	r30, r28
    12b6:	e5 51       	subi	r30, 0x15	; 21
    12b8:	ff 4f       	sbci	r31, 0xFF	; 255
    12ba:	20 e0       	ldi	r18, 0x00	; 0
    12bc:	30 e0       	ldi	r19, 0x00	; 0
    12be:	4a e7       	ldi	r20, 0x7A	; 122
    12c0:	53 e4       	ldi	r21, 0x43	; 67
    12c2:	60 81       	ld	r22, Z
    12c4:	71 81       	ldd	r23, Z+1	; 0x01
    12c6:	82 81       	ldd	r24, Z+2	; 0x02
    12c8:	93 81       	ldd	r25, Z+3	; 0x03
    12ca:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    12ce:	dc 01       	movw	r26, r24
    12d0:	cb 01       	movw	r24, r22
    12d2:	f8 01       	movw	r30, r16
    12d4:	80 83       	st	Z, r24
    12d6:	91 83       	std	Z+1, r25	; 0x01
    12d8:	a2 83       	std	Z+2, r26	; 0x02
    12da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12dc:	fe 01       	movw	r30, r28
    12de:	e9 51       	subi	r30, 0x19	; 25
    12e0:	ff 4f       	sbci	r31, 0xFF	; 255
    12e2:	20 e0       	ldi	r18, 0x00	; 0
    12e4:	30 e0       	ldi	r19, 0x00	; 0
    12e6:	40 e8       	ldi	r20, 0x80	; 128
    12e8:	5f e3       	ldi	r21, 0x3F	; 63
    12ea:	60 81       	ld	r22, Z
    12ec:	71 81       	ldd	r23, Z+1	; 0x01
    12ee:	82 81       	ldd	r24, Z+2	; 0x02
    12f0:	93 81       	ldd	r25, Z+3	; 0x03
    12f2:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    12f6:	88 23       	and	r24, r24
    12f8:	44 f4       	brge	.+16     	; 0x130a <__stack+0xeab>
		__ticks = 1;
    12fa:	fe 01       	movw	r30, r28
    12fc:	eb 51       	subi	r30, 0x1B	; 27
    12fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	80 83       	st	Z, r24
    1308:	64 c0       	rjmp	.+200    	; 0x13d2 <__stack+0xf73>
	else if (__tmp > 65535)
    130a:	fe 01       	movw	r30, r28
    130c:	e9 51       	subi	r30, 0x19	; 25
    130e:	ff 4f       	sbci	r31, 0xFF	; 255
    1310:	20 e0       	ldi	r18, 0x00	; 0
    1312:	3f ef       	ldi	r19, 0xFF	; 255
    1314:	4f e7       	ldi	r20, 0x7F	; 127
    1316:	57 e4       	ldi	r21, 0x47	; 71
    1318:	60 81       	ld	r22, Z
    131a:	71 81       	ldd	r23, Z+1	; 0x01
    131c:	82 81       	ldd	r24, Z+2	; 0x02
    131e:	93 81       	ldd	r25, Z+3	; 0x03
    1320:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    1324:	18 16       	cp	r1, r24
    1326:	0c f0       	brlt	.+2      	; 0x132a <__stack+0xecb>
    1328:	43 c0       	rjmp	.+134    	; 0x13b0 <__stack+0xf51>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    132a:	fe 01       	movw	r30, r28
    132c:	e5 51       	subi	r30, 0x15	; 21
    132e:	ff 4f       	sbci	r31, 0xFF	; 255
    1330:	20 e0       	ldi	r18, 0x00	; 0
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	40 e2       	ldi	r20, 0x20	; 32
    1336:	51 e4       	ldi	r21, 0x41	; 65
    1338:	60 81       	ld	r22, Z
    133a:	71 81       	ldd	r23, Z+1	; 0x01
    133c:	82 81       	ldd	r24, Z+2	; 0x02
    133e:	93 81       	ldd	r25, Z+3	; 0x03
    1340:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1344:	dc 01       	movw	r26, r24
    1346:	cb 01       	movw	r24, r22
    1348:	8e 01       	movw	r16, r28
    134a:	0b 51       	subi	r16, 0x1B	; 27
    134c:	1f 4f       	sbci	r17, 0xFF	; 255
    134e:	bc 01       	movw	r22, r24
    1350:	cd 01       	movw	r24, r26
    1352:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1356:	dc 01       	movw	r26, r24
    1358:	cb 01       	movw	r24, r22
    135a:	f8 01       	movw	r30, r16
    135c:	91 83       	std	Z+1, r25	; 0x01
    135e:	80 83       	st	Z, r24
    1360:	1f c0       	rjmp	.+62     	; 0x13a0 <__stack+0xf41>
    1362:	fe 01       	movw	r30, r28
    1364:	ed 51       	subi	r30, 0x1D	; 29
    1366:	ff 4f       	sbci	r31, 0xFF	; 255
    1368:	89 e1       	ldi	r24, 0x19	; 25
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	91 83       	std	Z+1, r25	; 0x01
    136e:	80 83       	st	Z, r24
    1370:	fe 01       	movw	r30, r28
    1372:	ed 51       	subi	r30, 0x1D	; 29
    1374:	ff 4f       	sbci	r31, 0xFF	; 255
    1376:	80 81       	ld	r24, Z
    1378:	91 81       	ldd	r25, Z+1	; 0x01
    137a:	01 97       	sbiw	r24, 0x01	; 1
    137c:	f1 f7       	brne	.-4      	; 0x137a <__stack+0xf1b>
    137e:	fe 01       	movw	r30, r28
    1380:	ed 51       	subi	r30, 0x1D	; 29
    1382:	ff 4f       	sbci	r31, 0xFF	; 255
    1384:	91 83       	std	Z+1, r25	; 0x01
    1386:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1388:	de 01       	movw	r26, r28
    138a:	ab 51       	subi	r26, 0x1B	; 27
    138c:	bf 4f       	sbci	r27, 0xFF	; 255
    138e:	fe 01       	movw	r30, r28
    1390:	eb 51       	subi	r30, 0x1B	; 27
    1392:	ff 4f       	sbci	r31, 0xFF	; 255
    1394:	80 81       	ld	r24, Z
    1396:	91 81       	ldd	r25, Z+1	; 0x01
    1398:	01 97       	sbiw	r24, 0x01	; 1
    139a:	11 96       	adiw	r26, 0x01	; 1
    139c:	9c 93       	st	X, r25
    139e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13a0:	fe 01       	movw	r30, r28
    13a2:	eb 51       	subi	r30, 0x1B	; 27
    13a4:	ff 4f       	sbci	r31, 0xFF	; 255
    13a6:	80 81       	ld	r24, Z
    13a8:	91 81       	ldd	r25, Z+1	; 0x01
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	d1 f6       	brne	.-76     	; 0x1362 <__stack+0xf03>
    13ae:	27 c0       	rjmp	.+78     	; 0x13fe <__stack+0xf9f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13b0:	8e 01       	movw	r16, r28
    13b2:	0b 51       	subi	r16, 0x1B	; 27
    13b4:	1f 4f       	sbci	r17, 0xFF	; 255
    13b6:	fe 01       	movw	r30, r28
    13b8:	e9 51       	subi	r30, 0x19	; 25
    13ba:	ff 4f       	sbci	r31, 0xFF	; 255
    13bc:	60 81       	ld	r22, Z
    13be:	71 81       	ldd	r23, Z+1	; 0x01
    13c0:	82 81       	ldd	r24, Z+2	; 0x02
    13c2:	93 81       	ldd	r25, Z+3	; 0x03
    13c4:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    13c8:	dc 01       	movw	r26, r24
    13ca:	cb 01       	movw	r24, r22
    13cc:	f8 01       	movw	r30, r16
    13ce:	91 83       	std	Z+1, r25	; 0x01
    13d0:	80 83       	st	Z, r24
    13d2:	de 01       	movw	r26, r28
    13d4:	af 51       	subi	r26, 0x1F	; 31
    13d6:	bf 4f       	sbci	r27, 0xFF	; 255
    13d8:	fe 01       	movw	r30, r28
    13da:	eb 51       	subi	r30, 0x1B	; 27
    13dc:	ff 4f       	sbci	r31, 0xFF	; 255
    13de:	80 81       	ld	r24, Z
    13e0:	91 81       	ldd	r25, Z+1	; 0x01
    13e2:	8d 93       	st	X+, r24
    13e4:	9c 93       	st	X, r25
    13e6:	fe 01       	movw	r30, r28
    13e8:	ef 51       	subi	r30, 0x1F	; 31
    13ea:	ff 4f       	sbci	r31, 0xFF	; 255
    13ec:	80 81       	ld	r24, Z
    13ee:	91 81       	ldd	r25, Z+1	; 0x01
    13f0:	01 97       	sbiw	r24, 0x01	; 1
    13f2:	f1 f7       	brne	.-4      	; 0x13f0 <__stack+0xf91>
    13f4:	fe 01       	movw	r30, r28
    13f6:	ef 51       	subi	r30, 0x1F	; 31
    13f8:	ff 4f       	sbci	r31, 0xFF	; 255
    13fa:	91 83       	std	Z+1, r25	; 0x01
    13fc:	80 83       	st	Z, r24
	_delay_ms(1);
   //---------- Turn off the Display ----------
	LDP&=0<<LCD_D7|0<<LCD_D6|0<<LCD_D5|0<<LCD_D4; //Write 0x0
    13fe:	e2 e3       	ldi	r30, 0x32	; 50
    1400:	f0 e0       	ldi	r31, 0x00	; 0
    1402:	80 81       	ld	r24, Z
    1404:	e2 e3       	ldi	r30, 0x32	; 50
    1406:	f0 e0       	ldi	r31, 0x00	; 0
    1408:	10 82       	st	Z, r1
	LCP|=1<<LCD_E|0<<LCD_RS;
    140a:	a2 e3       	ldi	r26, 0x32	; 50
    140c:	b0 e0       	ldi	r27, 0x00	; 0
    140e:	e2 e3       	ldi	r30, 0x32	; 50
    1410:	f0 e0       	ldi	r31, 0x00	; 0
    1412:	80 81       	ld	r24, Z
    1414:	82 60       	ori	r24, 0x02	; 2
    1416:	8c 93       	st	X, r24
    1418:	fe 01       	movw	r30, r28
    141a:	e3 52       	subi	r30, 0x23	; 35
    141c:	ff 4f       	sbci	r31, 0xFF	; 255
    141e:	80 e0       	ldi	r24, 0x00	; 0
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	a0 e8       	ldi	r26, 0x80	; 128
    1424:	bf e3       	ldi	r27, 0x3F	; 63
    1426:	80 83       	st	Z, r24
    1428:	91 83       	std	Z+1, r25	; 0x01
    142a:	a2 83       	std	Z+2, r26	; 0x02
    142c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    142e:	8e 01       	movw	r16, r28
    1430:	07 52       	subi	r16, 0x27	; 39
    1432:	1f 4f       	sbci	r17, 0xFF	; 255
    1434:	fe 01       	movw	r30, r28
    1436:	e3 52       	subi	r30, 0x23	; 35
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	20 e0       	ldi	r18, 0x00	; 0
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	4a e7       	ldi	r20, 0x7A	; 122
    1440:	53 e4       	ldi	r21, 0x43	; 67
    1442:	60 81       	ld	r22, Z
    1444:	71 81       	ldd	r23, Z+1	; 0x01
    1446:	82 81       	ldd	r24, Z+2	; 0x02
    1448:	93 81       	ldd	r25, Z+3	; 0x03
    144a:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    144e:	dc 01       	movw	r26, r24
    1450:	cb 01       	movw	r24, r22
    1452:	f8 01       	movw	r30, r16
    1454:	80 83       	st	Z, r24
    1456:	91 83       	std	Z+1, r25	; 0x01
    1458:	a2 83       	std	Z+2, r26	; 0x02
    145a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    145c:	fe 01       	movw	r30, r28
    145e:	e7 52       	subi	r30, 0x27	; 39
    1460:	ff 4f       	sbci	r31, 0xFF	; 255
    1462:	20 e0       	ldi	r18, 0x00	; 0
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	40 e8       	ldi	r20, 0x80	; 128
    1468:	5f e3       	ldi	r21, 0x3F	; 63
    146a:	60 81       	ld	r22, Z
    146c:	71 81       	ldd	r23, Z+1	; 0x01
    146e:	82 81       	ldd	r24, Z+2	; 0x02
    1470:	93 81       	ldd	r25, Z+3	; 0x03
    1472:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    1476:	88 23       	and	r24, r24
    1478:	44 f4       	brge	.+16     	; 0x148a <__stack+0x102b>
		__ticks = 1;
    147a:	fe 01       	movw	r30, r28
    147c:	e9 52       	subi	r30, 0x29	; 41
    147e:	ff 4f       	sbci	r31, 0xFF	; 255
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	91 83       	std	Z+1, r25	; 0x01
    1486:	80 83       	st	Z, r24
    1488:	64 c0       	rjmp	.+200    	; 0x1552 <__stack+0x10f3>
	else if (__tmp > 65535)
    148a:	fe 01       	movw	r30, r28
    148c:	e7 52       	subi	r30, 0x27	; 39
    148e:	ff 4f       	sbci	r31, 0xFF	; 255
    1490:	20 e0       	ldi	r18, 0x00	; 0
    1492:	3f ef       	ldi	r19, 0xFF	; 255
    1494:	4f e7       	ldi	r20, 0x7F	; 127
    1496:	57 e4       	ldi	r21, 0x47	; 71
    1498:	60 81       	ld	r22, Z
    149a:	71 81       	ldd	r23, Z+1	; 0x01
    149c:	82 81       	ldd	r24, Z+2	; 0x02
    149e:	93 81       	ldd	r25, Z+3	; 0x03
    14a0:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    14a4:	18 16       	cp	r1, r24
    14a6:	0c f0       	brlt	.+2      	; 0x14aa <__stack+0x104b>
    14a8:	43 c0       	rjmp	.+134    	; 0x1530 <__stack+0x10d1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14aa:	fe 01       	movw	r30, r28
    14ac:	e3 52       	subi	r30, 0x23	; 35
    14ae:	ff 4f       	sbci	r31, 0xFF	; 255
    14b0:	20 e0       	ldi	r18, 0x00	; 0
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	40 e2       	ldi	r20, 0x20	; 32
    14b6:	51 e4       	ldi	r21, 0x41	; 65
    14b8:	60 81       	ld	r22, Z
    14ba:	71 81       	ldd	r23, Z+1	; 0x01
    14bc:	82 81       	ldd	r24, Z+2	; 0x02
    14be:	93 81       	ldd	r25, Z+3	; 0x03
    14c0:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    14c4:	dc 01       	movw	r26, r24
    14c6:	cb 01       	movw	r24, r22
    14c8:	8e 01       	movw	r16, r28
    14ca:	09 52       	subi	r16, 0x29	; 41
    14cc:	1f 4f       	sbci	r17, 0xFF	; 255
    14ce:	bc 01       	movw	r22, r24
    14d0:	cd 01       	movw	r24, r26
    14d2:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    14d6:	dc 01       	movw	r26, r24
    14d8:	cb 01       	movw	r24, r22
    14da:	f8 01       	movw	r30, r16
    14dc:	91 83       	std	Z+1, r25	; 0x01
    14de:	80 83       	st	Z, r24
    14e0:	1f c0       	rjmp	.+62     	; 0x1520 <__stack+0x10c1>
    14e2:	fe 01       	movw	r30, r28
    14e4:	eb 52       	subi	r30, 0x2B	; 43
    14e6:	ff 4f       	sbci	r31, 0xFF	; 255
    14e8:	89 e1       	ldi	r24, 0x19	; 25
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	91 83       	std	Z+1, r25	; 0x01
    14ee:	80 83       	st	Z, r24
    14f0:	fe 01       	movw	r30, r28
    14f2:	eb 52       	subi	r30, 0x2B	; 43
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	80 81       	ld	r24, Z
    14f8:	91 81       	ldd	r25, Z+1	; 0x01
    14fa:	01 97       	sbiw	r24, 0x01	; 1
    14fc:	f1 f7       	brne	.-4      	; 0x14fa <__stack+0x109b>
    14fe:	fe 01       	movw	r30, r28
    1500:	eb 52       	subi	r30, 0x2B	; 43
    1502:	ff 4f       	sbci	r31, 0xFF	; 255
    1504:	91 83       	std	Z+1, r25	; 0x01
    1506:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1508:	de 01       	movw	r26, r28
    150a:	a9 52       	subi	r26, 0x29	; 41
    150c:	bf 4f       	sbci	r27, 0xFF	; 255
    150e:	fe 01       	movw	r30, r28
    1510:	e9 52       	subi	r30, 0x29	; 41
    1512:	ff 4f       	sbci	r31, 0xFF	; 255
    1514:	80 81       	ld	r24, Z
    1516:	91 81       	ldd	r25, Z+1	; 0x01
    1518:	01 97       	sbiw	r24, 0x01	; 1
    151a:	11 96       	adiw	r26, 0x01	; 1
    151c:	9c 93       	st	X, r25
    151e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1520:	fe 01       	movw	r30, r28
    1522:	e9 52       	subi	r30, 0x29	; 41
    1524:	ff 4f       	sbci	r31, 0xFF	; 255
    1526:	80 81       	ld	r24, Z
    1528:	91 81       	ldd	r25, Z+1	; 0x01
    152a:	00 97       	sbiw	r24, 0x00	; 0
    152c:	d1 f6       	brne	.-76     	; 0x14e2 <__stack+0x1083>
    152e:	27 c0       	rjmp	.+78     	; 0x157e <__stack+0x111f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1530:	8e 01       	movw	r16, r28
    1532:	09 52       	subi	r16, 0x29	; 41
    1534:	1f 4f       	sbci	r17, 0xFF	; 255
    1536:	fe 01       	movw	r30, r28
    1538:	e7 52       	subi	r30, 0x27	; 39
    153a:	ff 4f       	sbci	r31, 0xFF	; 255
    153c:	60 81       	ld	r22, Z
    153e:	71 81       	ldd	r23, Z+1	; 0x01
    1540:	82 81       	ldd	r24, Z+2	; 0x02
    1542:	93 81       	ldd	r25, Z+3	; 0x03
    1544:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1548:	dc 01       	movw	r26, r24
    154a:	cb 01       	movw	r24, r22
    154c:	f8 01       	movw	r30, r16
    154e:	91 83       	std	Z+1, r25	; 0x01
    1550:	80 83       	st	Z, r24
    1552:	de 01       	movw	r26, r28
    1554:	ad 52       	subi	r26, 0x2D	; 45
    1556:	bf 4f       	sbci	r27, 0xFF	; 255
    1558:	fe 01       	movw	r30, r28
    155a:	e9 52       	subi	r30, 0x29	; 41
    155c:	ff 4f       	sbci	r31, 0xFF	; 255
    155e:	80 81       	ld	r24, Z
    1560:	91 81       	ldd	r25, Z+1	; 0x01
    1562:	8d 93       	st	X+, r24
    1564:	9c 93       	st	X, r25
    1566:	fe 01       	movw	r30, r28
    1568:	ed 52       	subi	r30, 0x2D	; 45
    156a:	ff 4f       	sbci	r31, 0xFF	; 255
    156c:	80 81       	ld	r24, Z
    156e:	91 81       	ldd	r25, Z+1	; 0x01
    1570:	01 97       	sbiw	r24, 0x01	; 1
    1572:	f1 f7       	brne	.-4      	; 0x1570 <__stack+0x1111>
    1574:	fe 01       	movw	r30, r28
    1576:	ed 52       	subi	r30, 0x2D	; 45
    1578:	ff 4f       	sbci	r31, 0xFF	; 255
    157a:	91 83       	std	Z+1, r25	; 0x01
    157c:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    157e:	a2 e3       	ldi	r26, 0x32	; 50
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	e2 e3       	ldi	r30, 0x32	; 50
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	80 81       	ld	r24, Z
    1588:	8d 7f       	andi	r24, 0xFD	; 253
    158a:	8c 93       	st	X, r24
    158c:	fe 01       	movw	r30, r28
    158e:	e1 53       	subi	r30, 0x31	; 49
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	a0 e8       	ldi	r26, 0x80	; 128
    1598:	bf e3       	ldi	r27, 0x3F	; 63
    159a:	80 83       	st	Z, r24
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	a2 83       	std	Z+2, r26	; 0x02
    15a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15a2:	8e 01       	movw	r16, r28
    15a4:	05 53       	subi	r16, 0x35	; 53
    15a6:	1f 4f       	sbci	r17, 0xFF	; 255
    15a8:	fe 01       	movw	r30, r28
    15aa:	e1 53       	subi	r30, 0x31	; 49
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	4a e7       	ldi	r20, 0x7A	; 122
    15b4:	53 e4       	ldi	r21, 0x43	; 67
    15b6:	60 81       	ld	r22, Z
    15b8:	71 81       	ldd	r23, Z+1	; 0x01
    15ba:	82 81       	ldd	r24, Z+2	; 0x02
    15bc:	93 81       	ldd	r25, Z+3	; 0x03
    15be:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	f8 01       	movw	r30, r16
    15c8:	80 83       	st	Z, r24
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	a2 83       	std	Z+2, r26	; 0x02
    15ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15d0:	fe 01       	movw	r30, r28
    15d2:	e5 53       	subi	r30, 0x35	; 53
    15d4:	ff 4f       	sbci	r31, 0xFF	; 255
    15d6:	20 e0       	ldi	r18, 0x00	; 0
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	40 e8       	ldi	r20, 0x80	; 128
    15dc:	5f e3       	ldi	r21, 0x3F	; 63
    15de:	60 81       	ld	r22, Z
    15e0:	71 81       	ldd	r23, Z+1	; 0x01
    15e2:	82 81       	ldd	r24, Z+2	; 0x02
    15e4:	93 81       	ldd	r25, Z+3	; 0x03
    15e6:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    15ea:	88 23       	and	r24, r24
    15ec:	44 f4       	brge	.+16     	; 0x15fe <__stack+0x119f>
		__ticks = 1;
    15ee:	fe 01       	movw	r30, r28
    15f0:	e7 53       	subi	r30, 0x37	; 55
    15f2:	ff 4f       	sbci	r31, 0xFF	; 255
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	91 83       	std	Z+1, r25	; 0x01
    15fa:	80 83       	st	Z, r24
    15fc:	64 c0       	rjmp	.+200    	; 0x16c6 <__stack+0x1267>
	else if (__tmp > 65535)
    15fe:	fe 01       	movw	r30, r28
    1600:	e5 53       	subi	r30, 0x35	; 53
    1602:	ff 4f       	sbci	r31, 0xFF	; 255
    1604:	20 e0       	ldi	r18, 0x00	; 0
    1606:	3f ef       	ldi	r19, 0xFF	; 255
    1608:	4f e7       	ldi	r20, 0x7F	; 127
    160a:	57 e4       	ldi	r21, 0x47	; 71
    160c:	60 81       	ld	r22, Z
    160e:	71 81       	ldd	r23, Z+1	; 0x01
    1610:	82 81       	ldd	r24, Z+2	; 0x02
    1612:	93 81       	ldd	r25, Z+3	; 0x03
    1614:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    1618:	18 16       	cp	r1, r24
    161a:	0c f0       	brlt	.+2      	; 0x161e <__stack+0x11bf>
    161c:	43 c0       	rjmp	.+134    	; 0x16a4 <__stack+0x1245>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    161e:	fe 01       	movw	r30, r28
    1620:	e1 53       	subi	r30, 0x31	; 49
    1622:	ff 4f       	sbci	r31, 0xFF	; 255
    1624:	20 e0       	ldi	r18, 0x00	; 0
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	40 e2       	ldi	r20, 0x20	; 32
    162a:	51 e4       	ldi	r21, 0x41	; 65
    162c:	60 81       	ld	r22, Z
    162e:	71 81       	ldd	r23, Z+1	; 0x01
    1630:	82 81       	ldd	r24, Z+2	; 0x02
    1632:	93 81       	ldd	r25, Z+3	; 0x03
    1634:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1638:	dc 01       	movw	r26, r24
    163a:	cb 01       	movw	r24, r22
    163c:	8e 01       	movw	r16, r28
    163e:	07 53       	subi	r16, 0x37	; 55
    1640:	1f 4f       	sbci	r17, 0xFF	; 255
    1642:	bc 01       	movw	r22, r24
    1644:	cd 01       	movw	r24, r26
    1646:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    164a:	dc 01       	movw	r26, r24
    164c:	cb 01       	movw	r24, r22
    164e:	f8 01       	movw	r30, r16
    1650:	91 83       	std	Z+1, r25	; 0x01
    1652:	80 83       	st	Z, r24
    1654:	1f c0       	rjmp	.+62     	; 0x1694 <__stack+0x1235>
    1656:	fe 01       	movw	r30, r28
    1658:	e9 53       	subi	r30, 0x39	; 57
    165a:	ff 4f       	sbci	r31, 0xFF	; 255
    165c:	89 e1       	ldi	r24, 0x19	; 25
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	91 83       	std	Z+1, r25	; 0x01
    1662:	80 83       	st	Z, r24
    1664:	fe 01       	movw	r30, r28
    1666:	e9 53       	subi	r30, 0x39	; 57
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	80 81       	ld	r24, Z
    166c:	91 81       	ldd	r25, Z+1	; 0x01
    166e:	01 97       	sbiw	r24, 0x01	; 1
    1670:	f1 f7       	brne	.-4      	; 0x166e <__stack+0x120f>
    1672:	fe 01       	movw	r30, r28
    1674:	e9 53       	subi	r30, 0x39	; 57
    1676:	ff 4f       	sbci	r31, 0xFF	; 255
    1678:	91 83       	std	Z+1, r25	; 0x01
    167a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    167c:	de 01       	movw	r26, r28
    167e:	a7 53       	subi	r26, 0x37	; 55
    1680:	bf 4f       	sbci	r27, 0xFF	; 255
    1682:	fe 01       	movw	r30, r28
    1684:	e7 53       	subi	r30, 0x37	; 55
    1686:	ff 4f       	sbci	r31, 0xFF	; 255
    1688:	80 81       	ld	r24, Z
    168a:	91 81       	ldd	r25, Z+1	; 0x01
    168c:	01 97       	sbiw	r24, 0x01	; 1
    168e:	11 96       	adiw	r26, 0x01	; 1
    1690:	9c 93       	st	X, r25
    1692:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1694:	fe 01       	movw	r30, r28
    1696:	e7 53       	subi	r30, 0x37	; 55
    1698:	ff 4f       	sbci	r31, 0xFF	; 255
    169a:	80 81       	ld	r24, Z
    169c:	91 81       	ldd	r25, Z+1	; 0x01
    169e:	00 97       	sbiw	r24, 0x00	; 0
    16a0:	d1 f6       	brne	.-76     	; 0x1656 <__stack+0x11f7>
    16a2:	27 c0       	rjmp	.+78     	; 0x16f2 <__stack+0x1293>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16a4:	8e 01       	movw	r16, r28
    16a6:	07 53       	subi	r16, 0x37	; 55
    16a8:	1f 4f       	sbci	r17, 0xFF	; 255
    16aa:	fe 01       	movw	r30, r28
    16ac:	e5 53       	subi	r30, 0x35	; 53
    16ae:	ff 4f       	sbci	r31, 0xFF	; 255
    16b0:	60 81       	ld	r22, Z
    16b2:	71 81       	ldd	r23, Z+1	; 0x01
    16b4:	82 81       	ldd	r24, Z+2	; 0x02
    16b6:	93 81       	ldd	r25, Z+3	; 0x03
    16b8:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	f8 01       	movw	r30, r16
    16c2:	91 83       	std	Z+1, r25	; 0x01
    16c4:	80 83       	st	Z, r24
    16c6:	de 01       	movw	r26, r28
    16c8:	ab 53       	subi	r26, 0x3B	; 59
    16ca:	bf 4f       	sbci	r27, 0xFF	; 255
    16cc:	fe 01       	movw	r30, r28
    16ce:	e7 53       	subi	r30, 0x37	; 55
    16d0:	ff 4f       	sbci	r31, 0xFF	; 255
    16d2:	80 81       	ld	r24, Z
    16d4:	91 81       	ldd	r25, Z+1	; 0x01
    16d6:	8d 93       	st	X+, r24
    16d8:	9c 93       	st	X, r25
    16da:	fe 01       	movw	r30, r28
    16dc:	eb 53       	subi	r30, 0x3B	; 59
    16de:	ff 4f       	sbci	r31, 0xFF	; 255
    16e0:	80 81       	ld	r24, Z
    16e2:	91 81       	ldd	r25, Z+1	; 0x01
    16e4:	01 97       	sbiw	r24, 0x01	; 1
    16e6:	f1 f7       	brne	.-4      	; 0x16e4 <__stack+0x1285>
    16e8:	fe 01       	movw	r30, r28
    16ea:	eb 53       	subi	r30, 0x3B	; 59
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	91 83       	std	Z+1, r25	; 0x01
    16f0:	80 83       	st	Z, r24
	_delay_ms(1);
	LDP|=1<<LCD_D7|0<<LCD_D6|0<<LCD_D5|0<<LCD_D4; //Write 0x8
    16f2:	a2 e3       	ldi	r26, 0x32	; 50
    16f4:	b0 e0       	ldi	r27, 0x00	; 0
    16f6:	e2 e3       	ldi	r30, 0x32	; 50
    16f8:	f0 e0       	ldi	r31, 0x00	; 0
    16fa:	80 81       	ld	r24, Z
    16fc:	80 62       	ori	r24, 0x20	; 32
    16fe:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
    1700:	a2 e3       	ldi	r26, 0x32	; 50
    1702:	b0 e0       	ldi	r27, 0x00	; 0
    1704:	e2 e3       	ldi	r30, 0x32	; 50
    1706:	f0 e0       	ldi	r31, 0x00	; 0
    1708:	80 81       	ld	r24, Z
    170a:	82 60       	ori	r24, 0x02	; 2
    170c:	8c 93       	st	X, r24
    170e:	fe 01       	movw	r30, r28
    1710:	ef 53       	subi	r30, 0x3F	; 63
    1712:	ff 4f       	sbci	r31, 0xFF	; 255
    1714:	80 e0       	ldi	r24, 0x00	; 0
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	a0 e8       	ldi	r26, 0x80	; 128
    171a:	bf e3       	ldi	r27, 0x3F	; 63
    171c:	80 83       	st	Z, r24
    171e:	91 83       	std	Z+1, r25	; 0x01
    1720:	a2 83       	std	Z+2, r26	; 0x02
    1722:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1724:	8e 01       	movw	r16, r28
    1726:	03 54       	subi	r16, 0x43	; 67
    1728:	1f 4f       	sbci	r17, 0xFF	; 255
    172a:	fe 01       	movw	r30, r28
    172c:	ef 53       	subi	r30, 0x3F	; 63
    172e:	ff 4f       	sbci	r31, 0xFF	; 255
    1730:	20 e0       	ldi	r18, 0x00	; 0
    1732:	30 e0       	ldi	r19, 0x00	; 0
    1734:	4a e7       	ldi	r20, 0x7A	; 122
    1736:	53 e4       	ldi	r21, 0x43	; 67
    1738:	60 81       	ld	r22, Z
    173a:	71 81       	ldd	r23, Z+1	; 0x01
    173c:	82 81       	ldd	r24, Z+2	; 0x02
    173e:	93 81       	ldd	r25, Z+3	; 0x03
    1740:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1744:	dc 01       	movw	r26, r24
    1746:	cb 01       	movw	r24, r22
    1748:	f8 01       	movw	r30, r16
    174a:	80 83       	st	Z, r24
    174c:	91 83       	std	Z+1, r25	; 0x01
    174e:	a2 83       	std	Z+2, r26	; 0x02
    1750:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1752:	fe 01       	movw	r30, r28
    1754:	e3 54       	subi	r30, 0x43	; 67
    1756:	ff 4f       	sbci	r31, 0xFF	; 255
    1758:	20 e0       	ldi	r18, 0x00	; 0
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	40 e8       	ldi	r20, 0x80	; 128
    175e:	5f e3       	ldi	r21, 0x3F	; 63
    1760:	60 81       	ld	r22, Z
    1762:	71 81       	ldd	r23, Z+1	; 0x01
    1764:	82 81       	ldd	r24, Z+2	; 0x02
    1766:	93 81       	ldd	r25, Z+3	; 0x03
    1768:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    176c:	88 23       	and	r24, r24
    176e:	44 f4       	brge	.+16     	; 0x1780 <__stack+0x1321>
		__ticks = 1;
    1770:	fe 01       	movw	r30, r28
    1772:	e5 54       	subi	r30, 0x45	; 69
    1774:	ff 4f       	sbci	r31, 0xFF	; 255
    1776:	81 e0       	ldi	r24, 0x01	; 1
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	91 83       	std	Z+1, r25	; 0x01
    177c:	80 83       	st	Z, r24
    177e:	64 c0       	rjmp	.+200    	; 0x1848 <__stack+0x13e9>
	else if (__tmp > 65535)
    1780:	fe 01       	movw	r30, r28
    1782:	e3 54       	subi	r30, 0x43	; 67
    1784:	ff 4f       	sbci	r31, 0xFF	; 255
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	3f ef       	ldi	r19, 0xFF	; 255
    178a:	4f e7       	ldi	r20, 0x7F	; 127
    178c:	57 e4       	ldi	r21, 0x47	; 71
    178e:	60 81       	ld	r22, Z
    1790:	71 81       	ldd	r23, Z+1	; 0x01
    1792:	82 81       	ldd	r24, Z+2	; 0x02
    1794:	93 81       	ldd	r25, Z+3	; 0x03
    1796:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    179a:	18 16       	cp	r1, r24
    179c:	0c f0       	brlt	.+2      	; 0x17a0 <__stack+0x1341>
    179e:	43 c0       	rjmp	.+134    	; 0x1826 <__stack+0x13c7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17a0:	fe 01       	movw	r30, r28
    17a2:	ef 53       	subi	r30, 0x3F	; 63
    17a4:	ff 4f       	sbci	r31, 0xFF	; 255
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	40 e2       	ldi	r20, 0x20	; 32
    17ac:	51 e4       	ldi	r21, 0x41	; 65
    17ae:	60 81       	ld	r22, Z
    17b0:	71 81       	ldd	r23, Z+1	; 0x01
    17b2:	82 81       	ldd	r24, Z+2	; 0x02
    17b4:	93 81       	ldd	r25, Z+3	; 0x03
    17b6:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    17ba:	dc 01       	movw	r26, r24
    17bc:	cb 01       	movw	r24, r22
    17be:	8e 01       	movw	r16, r28
    17c0:	05 54       	subi	r16, 0x45	; 69
    17c2:	1f 4f       	sbci	r17, 0xFF	; 255
    17c4:	bc 01       	movw	r22, r24
    17c6:	cd 01       	movw	r24, r26
    17c8:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    17cc:	dc 01       	movw	r26, r24
    17ce:	cb 01       	movw	r24, r22
    17d0:	f8 01       	movw	r30, r16
    17d2:	91 83       	std	Z+1, r25	; 0x01
    17d4:	80 83       	st	Z, r24
    17d6:	1f c0       	rjmp	.+62     	; 0x1816 <__stack+0x13b7>
    17d8:	fe 01       	movw	r30, r28
    17da:	e7 54       	subi	r30, 0x47	; 71
    17dc:	ff 4f       	sbci	r31, 0xFF	; 255
    17de:	89 e1       	ldi	r24, 0x19	; 25
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	91 83       	std	Z+1, r25	; 0x01
    17e4:	80 83       	st	Z, r24
    17e6:	fe 01       	movw	r30, r28
    17e8:	e7 54       	subi	r30, 0x47	; 71
    17ea:	ff 4f       	sbci	r31, 0xFF	; 255
    17ec:	80 81       	ld	r24, Z
    17ee:	91 81       	ldd	r25, Z+1	; 0x01
    17f0:	01 97       	sbiw	r24, 0x01	; 1
    17f2:	f1 f7       	brne	.-4      	; 0x17f0 <__stack+0x1391>
    17f4:	fe 01       	movw	r30, r28
    17f6:	e7 54       	subi	r30, 0x47	; 71
    17f8:	ff 4f       	sbci	r31, 0xFF	; 255
    17fa:	91 83       	std	Z+1, r25	; 0x01
    17fc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17fe:	de 01       	movw	r26, r28
    1800:	a5 54       	subi	r26, 0x45	; 69
    1802:	bf 4f       	sbci	r27, 0xFF	; 255
    1804:	fe 01       	movw	r30, r28
    1806:	e5 54       	subi	r30, 0x45	; 69
    1808:	ff 4f       	sbci	r31, 0xFF	; 255
    180a:	80 81       	ld	r24, Z
    180c:	91 81       	ldd	r25, Z+1	; 0x01
    180e:	01 97       	sbiw	r24, 0x01	; 1
    1810:	11 96       	adiw	r26, 0x01	; 1
    1812:	9c 93       	st	X, r25
    1814:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1816:	fe 01       	movw	r30, r28
    1818:	e5 54       	subi	r30, 0x45	; 69
    181a:	ff 4f       	sbci	r31, 0xFF	; 255
    181c:	80 81       	ld	r24, Z
    181e:	91 81       	ldd	r25, Z+1	; 0x01
    1820:	00 97       	sbiw	r24, 0x00	; 0
    1822:	d1 f6       	brne	.-76     	; 0x17d8 <__stack+0x1379>
    1824:	27 c0       	rjmp	.+78     	; 0x1874 <__stack+0x1415>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1826:	8e 01       	movw	r16, r28
    1828:	05 54       	subi	r16, 0x45	; 69
    182a:	1f 4f       	sbci	r17, 0xFF	; 255
    182c:	fe 01       	movw	r30, r28
    182e:	e3 54       	subi	r30, 0x43	; 67
    1830:	ff 4f       	sbci	r31, 0xFF	; 255
    1832:	60 81       	ld	r22, Z
    1834:	71 81       	ldd	r23, Z+1	; 0x01
    1836:	82 81       	ldd	r24, Z+2	; 0x02
    1838:	93 81       	ldd	r25, Z+3	; 0x03
    183a:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    183e:	dc 01       	movw	r26, r24
    1840:	cb 01       	movw	r24, r22
    1842:	f8 01       	movw	r30, r16
    1844:	91 83       	std	Z+1, r25	; 0x01
    1846:	80 83       	st	Z, r24
    1848:	de 01       	movw	r26, r28
    184a:	a9 54       	subi	r26, 0x49	; 73
    184c:	bf 4f       	sbci	r27, 0xFF	; 255
    184e:	fe 01       	movw	r30, r28
    1850:	e5 54       	subi	r30, 0x45	; 69
    1852:	ff 4f       	sbci	r31, 0xFF	; 255
    1854:	80 81       	ld	r24, Z
    1856:	91 81       	ldd	r25, Z+1	; 0x01
    1858:	8d 93       	st	X+, r24
    185a:	9c 93       	st	X, r25
    185c:	fe 01       	movw	r30, r28
    185e:	e9 54       	subi	r30, 0x49	; 73
    1860:	ff 4f       	sbci	r31, 0xFF	; 255
    1862:	80 81       	ld	r24, Z
    1864:	91 81       	ldd	r25, Z+1	; 0x01
    1866:	01 97       	sbiw	r24, 0x01	; 1
    1868:	f1 f7       	brne	.-4      	; 0x1866 <__stack+0x1407>
    186a:	fe 01       	movw	r30, r28
    186c:	e9 54       	subi	r30, 0x49	; 73
    186e:	ff 4f       	sbci	r31, 0xFF	; 255
    1870:	91 83       	std	Z+1, r25	; 0x01
    1872:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    1874:	a2 e3       	ldi	r26, 0x32	; 50
    1876:	b0 e0       	ldi	r27, 0x00	; 0
    1878:	e2 e3       	ldi	r30, 0x32	; 50
    187a:	f0 e0       	ldi	r31, 0x00	; 0
    187c:	80 81       	ld	r24, Z
    187e:	8d 7f       	andi	r24, 0xFD	; 253
    1880:	8c 93       	st	X, r24
    1882:	fe 01       	movw	r30, r28
    1884:	ed 54       	subi	r30, 0x4D	; 77
    1886:	ff 4f       	sbci	r31, 0xFF	; 255
    1888:	80 e0       	ldi	r24, 0x00	; 0
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	a0 e8       	ldi	r26, 0x80	; 128
    188e:	bf e3       	ldi	r27, 0x3F	; 63
    1890:	80 83       	st	Z, r24
    1892:	91 83       	std	Z+1, r25	; 0x01
    1894:	a2 83       	std	Z+2, r26	; 0x02
    1896:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1898:	8e 01       	movw	r16, r28
    189a:	01 55       	subi	r16, 0x51	; 81
    189c:	1f 4f       	sbci	r17, 0xFF	; 255
    189e:	fe 01       	movw	r30, r28
    18a0:	ed 54       	subi	r30, 0x4D	; 77
    18a2:	ff 4f       	sbci	r31, 0xFF	; 255
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	4a e7       	ldi	r20, 0x7A	; 122
    18aa:	53 e4       	ldi	r21, 0x43	; 67
    18ac:	60 81       	ld	r22, Z
    18ae:	71 81       	ldd	r23, Z+1	; 0x01
    18b0:	82 81       	ldd	r24, Z+2	; 0x02
    18b2:	93 81       	ldd	r25, Z+3	; 0x03
    18b4:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    18b8:	dc 01       	movw	r26, r24
    18ba:	cb 01       	movw	r24, r22
    18bc:	f8 01       	movw	r30, r16
    18be:	80 83       	st	Z, r24
    18c0:	91 83       	std	Z+1, r25	; 0x01
    18c2:	a2 83       	std	Z+2, r26	; 0x02
    18c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18c6:	fe 01       	movw	r30, r28
    18c8:	e1 55       	subi	r30, 0x51	; 81
    18ca:	ff 4f       	sbci	r31, 0xFF	; 255
    18cc:	20 e0       	ldi	r18, 0x00	; 0
    18ce:	30 e0       	ldi	r19, 0x00	; 0
    18d0:	40 e8       	ldi	r20, 0x80	; 128
    18d2:	5f e3       	ldi	r21, 0x3F	; 63
    18d4:	60 81       	ld	r22, Z
    18d6:	71 81       	ldd	r23, Z+1	; 0x01
    18d8:	82 81       	ldd	r24, Z+2	; 0x02
    18da:	93 81       	ldd	r25, Z+3	; 0x03
    18dc:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    18e0:	88 23       	and	r24, r24
    18e2:	44 f4       	brge	.+16     	; 0x18f4 <__stack+0x1495>
		__ticks = 1;
    18e4:	fe 01       	movw	r30, r28
    18e6:	e3 55       	subi	r30, 0x53	; 83
    18e8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ea:	81 e0       	ldi	r24, 0x01	; 1
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	91 83       	std	Z+1, r25	; 0x01
    18f0:	80 83       	st	Z, r24
    18f2:	64 c0       	rjmp	.+200    	; 0x19bc <__stack+0x155d>
	else if (__tmp > 65535)
    18f4:	fe 01       	movw	r30, r28
    18f6:	e1 55       	subi	r30, 0x51	; 81
    18f8:	ff 4f       	sbci	r31, 0xFF	; 255
    18fa:	20 e0       	ldi	r18, 0x00	; 0
    18fc:	3f ef       	ldi	r19, 0xFF	; 255
    18fe:	4f e7       	ldi	r20, 0x7F	; 127
    1900:	57 e4       	ldi	r21, 0x47	; 71
    1902:	60 81       	ld	r22, Z
    1904:	71 81       	ldd	r23, Z+1	; 0x01
    1906:	82 81       	ldd	r24, Z+2	; 0x02
    1908:	93 81       	ldd	r25, Z+3	; 0x03
    190a:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    190e:	18 16       	cp	r1, r24
    1910:	0c f0       	brlt	.+2      	; 0x1914 <__stack+0x14b5>
    1912:	43 c0       	rjmp	.+134    	; 0x199a <__stack+0x153b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1914:	fe 01       	movw	r30, r28
    1916:	ed 54       	subi	r30, 0x4D	; 77
    1918:	ff 4f       	sbci	r31, 0xFF	; 255
    191a:	20 e0       	ldi	r18, 0x00	; 0
    191c:	30 e0       	ldi	r19, 0x00	; 0
    191e:	40 e2       	ldi	r20, 0x20	; 32
    1920:	51 e4       	ldi	r21, 0x41	; 65
    1922:	60 81       	ld	r22, Z
    1924:	71 81       	ldd	r23, Z+1	; 0x01
    1926:	82 81       	ldd	r24, Z+2	; 0x02
    1928:	93 81       	ldd	r25, Z+3	; 0x03
    192a:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    192e:	dc 01       	movw	r26, r24
    1930:	cb 01       	movw	r24, r22
    1932:	8e 01       	movw	r16, r28
    1934:	03 55       	subi	r16, 0x53	; 83
    1936:	1f 4f       	sbci	r17, 0xFF	; 255
    1938:	bc 01       	movw	r22, r24
    193a:	cd 01       	movw	r24, r26
    193c:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1940:	dc 01       	movw	r26, r24
    1942:	cb 01       	movw	r24, r22
    1944:	f8 01       	movw	r30, r16
    1946:	91 83       	std	Z+1, r25	; 0x01
    1948:	80 83       	st	Z, r24
    194a:	1f c0       	rjmp	.+62     	; 0x198a <__stack+0x152b>
    194c:	fe 01       	movw	r30, r28
    194e:	e5 55       	subi	r30, 0x55	; 85
    1950:	ff 4f       	sbci	r31, 0xFF	; 255
    1952:	89 e1       	ldi	r24, 0x19	; 25
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	91 83       	std	Z+1, r25	; 0x01
    1958:	80 83       	st	Z, r24
    195a:	fe 01       	movw	r30, r28
    195c:	e5 55       	subi	r30, 0x55	; 85
    195e:	ff 4f       	sbci	r31, 0xFF	; 255
    1960:	80 81       	ld	r24, Z
    1962:	91 81       	ldd	r25, Z+1	; 0x01
    1964:	01 97       	sbiw	r24, 0x01	; 1
    1966:	f1 f7       	brne	.-4      	; 0x1964 <__stack+0x1505>
    1968:	fe 01       	movw	r30, r28
    196a:	e5 55       	subi	r30, 0x55	; 85
    196c:	ff 4f       	sbci	r31, 0xFF	; 255
    196e:	91 83       	std	Z+1, r25	; 0x01
    1970:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1972:	de 01       	movw	r26, r28
    1974:	a3 55       	subi	r26, 0x53	; 83
    1976:	bf 4f       	sbci	r27, 0xFF	; 255
    1978:	fe 01       	movw	r30, r28
    197a:	e3 55       	subi	r30, 0x53	; 83
    197c:	ff 4f       	sbci	r31, 0xFF	; 255
    197e:	80 81       	ld	r24, Z
    1980:	91 81       	ldd	r25, Z+1	; 0x01
    1982:	01 97       	sbiw	r24, 0x01	; 1
    1984:	11 96       	adiw	r26, 0x01	; 1
    1986:	9c 93       	st	X, r25
    1988:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    198a:	fe 01       	movw	r30, r28
    198c:	e3 55       	subi	r30, 0x53	; 83
    198e:	ff 4f       	sbci	r31, 0xFF	; 255
    1990:	80 81       	ld	r24, Z
    1992:	91 81       	ldd	r25, Z+1	; 0x01
    1994:	00 97       	sbiw	r24, 0x00	; 0
    1996:	d1 f6       	brne	.-76     	; 0x194c <__stack+0x14ed>
    1998:	27 c0       	rjmp	.+78     	; 0x19e8 <__stack+0x1589>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    199a:	8e 01       	movw	r16, r28
    199c:	03 55       	subi	r16, 0x53	; 83
    199e:	1f 4f       	sbci	r17, 0xFF	; 255
    19a0:	fe 01       	movw	r30, r28
    19a2:	e1 55       	subi	r30, 0x51	; 81
    19a4:	ff 4f       	sbci	r31, 0xFF	; 255
    19a6:	60 81       	ld	r22, Z
    19a8:	71 81       	ldd	r23, Z+1	; 0x01
    19aa:	82 81       	ldd	r24, Z+2	; 0x02
    19ac:	93 81       	ldd	r25, Z+3	; 0x03
    19ae:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    19b2:	dc 01       	movw	r26, r24
    19b4:	cb 01       	movw	r24, r22
    19b6:	f8 01       	movw	r30, r16
    19b8:	91 83       	std	Z+1, r25	; 0x01
    19ba:	80 83       	st	Z, r24
    19bc:	de 01       	movw	r26, r28
    19be:	a7 55       	subi	r26, 0x57	; 87
    19c0:	bf 4f       	sbci	r27, 0xFF	; 255
    19c2:	fe 01       	movw	r30, r28
    19c4:	e3 55       	subi	r30, 0x53	; 83
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	80 81       	ld	r24, Z
    19ca:	91 81       	ldd	r25, Z+1	; 0x01
    19cc:	8d 93       	st	X+, r24
    19ce:	9c 93       	st	X, r25
    19d0:	fe 01       	movw	r30, r28
    19d2:	e7 55       	subi	r30, 0x57	; 87
    19d4:	ff 4f       	sbci	r31, 0xFF	; 255
    19d6:	80 81       	ld	r24, Z
    19d8:	91 81       	ldd	r25, Z+1	; 0x01
    19da:	01 97       	sbiw	r24, 0x01	; 1
    19dc:	f1 f7       	brne	.-4      	; 0x19da <__stack+0x157b>
    19de:	fe 01       	movw	r30, r28
    19e0:	e7 55       	subi	r30, 0x57	; 87
    19e2:	ff 4f       	sbci	r31, 0xFF	; 255
    19e4:	91 83       	std	Z+1, r25	; 0x01
    19e6:	80 83       	st	Z, r24
	_delay_ms(1);
   //------------ Clear the Display -----------
	LDP&=0<<LCD_D7|0<<LCD_D6|0<<LCD_D5|0<<LCD_D4; //Write 0x0
    19e8:	e2 e3       	ldi	r30, 0x32	; 50
    19ea:	f0 e0       	ldi	r31, 0x00	; 0
    19ec:	80 81       	ld	r24, Z
    19ee:	e2 e3       	ldi	r30, 0x32	; 50
    19f0:	f0 e0       	ldi	r31, 0x00	; 0
    19f2:	10 82       	st	Z, r1
	LCP|=1<<LCD_E|0<<LCD_RS;
    19f4:	a2 e3       	ldi	r26, 0x32	; 50
    19f6:	b0 e0       	ldi	r27, 0x00	; 0
    19f8:	e2 e3       	ldi	r30, 0x32	; 50
    19fa:	f0 e0       	ldi	r31, 0x00	; 0
    19fc:	80 81       	ld	r24, Z
    19fe:	82 60       	ori	r24, 0x02	; 2
    1a00:	8c 93       	st	X, r24
    1a02:	fe 01       	movw	r30, r28
    1a04:	eb 55       	subi	r30, 0x5B	; 91
    1a06:	ff 4f       	sbci	r31, 0xFF	; 255
    1a08:	80 e0       	ldi	r24, 0x00	; 0
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	a0 e8       	ldi	r26, 0x80	; 128
    1a0e:	bf e3       	ldi	r27, 0x3F	; 63
    1a10:	80 83       	st	Z, r24
    1a12:	91 83       	std	Z+1, r25	; 0x01
    1a14:	a2 83       	std	Z+2, r26	; 0x02
    1a16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a18:	8e 01       	movw	r16, r28
    1a1a:	0f 55       	subi	r16, 0x5F	; 95
    1a1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a1e:	fe 01       	movw	r30, r28
    1a20:	eb 55       	subi	r30, 0x5B	; 91
    1a22:	ff 4f       	sbci	r31, 0xFF	; 255
    1a24:	20 e0       	ldi	r18, 0x00	; 0
    1a26:	30 e0       	ldi	r19, 0x00	; 0
    1a28:	4a e7       	ldi	r20, 0x7A	; 122
    1a2a:	53 e4       	ldi	r21, 0x43	; 67
    1a2c:	60 81       	ld	r22, Z
    1a2e:	71 81       	ldd	r23, Z+1	; 0x01
    1a30:	82 81       	ldd	r24, Z+2	; 0x02
    1a32:	93 81       	ldd	r25, Z+3	; 0x03
    1a34:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1a38:	dc 01       	movw	r26, r24
    1a3a:	cb 01       	movw	r24, r22
    1a3c:	f8 01       	movw	r30, r16
    1a3e:	80 83       	st	Z, r24
    1a40:	91 83       	std	Z+1, r25	; 0x01
    1a42:	a2 83       	std	Z+2, r26	; 0x02
    1a44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a46:	fe 01       	movw	r30, r28
    1a48:	ef 55       	subi	r30, 0x5F	; 95
    1a4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4c:	20 e0       	ldi	r18, 0x00	; 0
    1a4e:	30 e0       	ldi	r19, 0x00	; 0
    1a50:	40 e8       	ldi	r20, 0x80	; 128
    1a52:	5f e3       	ldi	r21, 0x3F	; 63
    1a54:	60 81       	ld	r22, Z
    1a56:	71 81       	ldd	r23, Z+1	; 0x01
    1a58:	82 81       	ldd	r24, Z+2	; 0x02
    1a5a:	93 81       	ldd	r25, Z+3	; 0x03
    1a5c:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    1a60:	88 23       	and	r24, r24
    1a62:	44 f4       	brge	.+16     	; 0x1a74 <__stack+0x1615>
		__ticks = 1;
    1a64:	fe 01       	movw	r30, r28
    1a66:	e1 56       	subi	r30, 0x61	; 97
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	91 83       	std	Z+1, r25	; 0x01
    1a70:	80 83       	st	Z, r24
    1a72:	64 c0       	rjmp	.+200    	; 0x1b3c <__stack+0x16dd>
	else if (__tmp > 65535)
    1a74:	fe 01       	movw	r30, r28
    1a76:	ef 55       	subi	r30, 0x5F	; 95
    1a78:	ff 4f       	sbci	r31, 0xFF	; 255
    1a7a:	20 e0       	ldi	r18, 0x00	; 0
    1a7c:	3f ef       	ldi	r19, 0xFF	; 255
    1a7e:	4f e7       	ldi	r20, 0x7F	; 127
    1a80:	57 e4       	ldi	r21, 0x47	; 71
    1a82:	60 81       	ld	r22, Z
    1a84:	71 81       	ldd	r23, Z+1	; 0x01
    1a86:	82 81       	ldd	r24, Z+2	; 0x02
    1a88:	93 81       	ldd	r25, Z+3	; 0x03
    1a8a:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    1a8e:	18 16       	cp	r1, r24
    1a90:	0c f0       	brlt	.+2      	; 0x1a94 <__stack+0x1635>
    1a92:	43 c0       	rjmp	.+134    	; 0x1b1a <__stack+0x16bb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a94:	fe 01       	movw	r30, r28
    1a96:	eb 55       	subi	r30, 0x5B	; 91
    1a98:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9a:	20 e0       	ldi	r18, 0x00	; 0
    1a9c:	30 e0       	ldi	r19, 0x00	; 0
    1a9e:	40 e2       	ldi	r20, 0x20	; 32
    1aa0:	51 e4       	ldi	r21, 0x41	; 65
    1aa2:	60 81       	ld	r22, Z
    1aa4:	71 81       	ldd	r23, Z+1	; 0x01
    1aa6:	82 81       	ldd	r24, Z+2	; 0x02
    1aa8:	93 81       	ldd	r25, Z+3	; 0x03
    1aaa:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1aae:	dc 01       	movw	r26, r24
    1ab0:	cb 01       	movw	r24, r22
    1ab2:	8e 01       	movw	r16, r28
    1ab4:	01 56       	subi	r16, 0x61	; 97
    1ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ab8:	bc 01       	movw	r22, r24
    1aba:	cd 01       	movw	r24, r26
    1abc:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1ac0:	dc 01       	movw	r26, r24
    1ac2:	cb 01       	movw	r24, r22
    1ac4:	f8 01       	movw	r30, r16
    1ac6:	91 83       	std	Z+1, r25	; 0x01
    1ac8:	80 83       	st	Z, r24
    1aca:	1f c0       	rjmp	.+62     	; 0x1b0a <__stack+0x16ab>
    1acc:	fe 01       	movw	r30, r28
    1ace:	e3 56       	subi	r30, 0x63	; 99
    1ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad2:	89 e1       	ldi	r24, 0x19	; 25
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	91 83       	std	Z+1, r25	; 0x01
    1ad8:	80 83       	st	Z, r24
    1ada:	fe 01       	movw	r30, r28
    1adc:	e3 56       	subi	r30, 0x63	; 99
    1ade:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae0:	80 81       	ld	r24, Z
    1ae2:	91 81       	ldd	r25, Z+1	; 0x01
    1ae4:	01 97       	sbiw	r24, 0x01	; 1
    1ae6:	f1 f7       	brne	.-4      	; 0x1ae4 <__stack+0x1685>
    1ae8:	fe 01       	movw	r30, r28
    1aea:	e3 56       	subi	r30, 0x63	; 99
    1aec:	ff 4f       	sbci	r31, 0xFF	; 255
    1aee:	91 83       	std	Z+1, r25	; 0x01
    1af0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1af2:	de 01       	movw	r26, r28
    1af4:	a1 56       	subi	r26, 0x61	; 97
    1af6:	bf 4f       	sbci	r27, 0xFF	; 255
    1af8:	fe 01       	movw	r30, r28
    1afa:	e1 56       	subi	r30, 0x61	; 97
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	80 81       	ld	r24, Z
    1b00:	91 81       	ldd	r25, Z+1	; 0x01
    1b02:	01 97       	sbiw	r24, 0x01	; 1
    1b04:	11 96       	adiw	r26, 0x01	; 1
    1b06:	9c 93       	st	X, r25
    1b08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b0a:	fe 01       	movw	r30, r28
    1b0c:	e1 56       	subi	r30, 0x61	; 97
    1b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b10:	80 81       	ld	r24, Z
    1b12:	91 81       	ldd	r25, Z+1	; 0x01
    1b14:	00 97       	sbiw	r24, 0x00	; 0
    1b16:	d1 f6       	brne	.-76     	; 0x1acc <__stack+0x166d>
    1b18:	27 c0       	rjmp	.+78     	; 0x1b68 <__stack+0x1709>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b1a:	8e 01       	movw	r16, r28
    1b1c:	01 56       	subi	r16, 0x61	; 97
    1b1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b20:	fe 01       	movw	r30, r28
    1b22:	ef 55       	subi	r30, 0x5F	; 95
    1b24:	ff 4f       	sbci	r31, 0xFF	; 255
    1b26:	60 81       	ld	r22, Z
    1b28:	71 81       	ldd	r23, Z+1	; 0x01
    1b2a:	82 81       	ldd	r24, Z+2	; 0x02
    1b2c:	93 81       	ldd	r25, Z+3	; 0x03
    1b2e:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1b32:	dc 01       	movw	r26, r24
    1b34:	cb 01       	movw	r24, r22
    1b36:	f8 01       	movw	r30, r16
    1b38:	91 83       	std	Z+1, r25	; 0x01
    1b3a:	80 83       	st	Z, r24
    1b3c:	de 01       	movw	r26, r28
    1b3e:	a5 56       	subi	r26, 0x65	; 101
    1b40:	bf 4f       	sbci	r27, 0xFF	; 255
    1b42:	fe 01       	movw	r30, r28
    1b44:	e1 56       	subi	r30, 0x61	; 97
    1b46:	ff 4f       	sbci	r31, 0xFF	; 255
    1b48:	80 81       	ld	r24, Z
    1b4a:	91 81       	ldd	r25, Z+1	; 0x01
    1b4c:	8d 93       	st	X+, r24
    1b4e:	9c 93       	st	X, r25
    1b50:	fe 01       	movw	r30, r28
    1b52:	e5 56       	subi	r30, 0x65	; 101
    1b54:	ff 4f       	sbci	r31, 0xFF	; 255
    1b56:	80 81       	ld	r24, Z
    1b58:	91 81       	ldd	r25, Z+1	; 0x01
    1b5a:	01 97       	sbiw	r24, 0x01	; 1
    1b5c:	f1 f7       	brne	.-4      	; 0x1b5a <__stack+0x16fb>
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e5 56       	subi	r30, 0x65	; 101
    1b62:	ff 4f       	sbci	r31, 0xFF	; 255
    1b64:	91 83       	std	Z+1, r25	; 0x01
    1b66:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    1b68:	a2 e3       	ldi	r26, 0x32	; 50
    1b6a:	b0 e0       	ldi	r27, 0x00	; 0
    1b6c:	e2 e3       	ldi	r30, 0x32	; 50
    1b6e:	f0 e0       	ldi	r31, 0x00	; 0
    1b70:	80 81       	ld	r24, Z
    1b72:	8d 7f       	andi	r24, 0xFD	; 253
    1b74:	8c 93       	st	X, r24
    1b76:	fe 01       	movw	r30, r28
    1b78:	e9 56       	subi	r30, 0x69	; 105
    1b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7c:	80 e0       	ldi	r24, 0x00	; 0
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	a0 e8       	ldi	r26, 0x80	; 128
    1b82:	bf e3       	ldi	r27, 0x3F	; 63
    1b84:	80 83       	st	Z, r24
    1b86:	91 83       	std	Z+1, r25	; 0x01
    1b88:	a2 83       	std	Z+2, r26	; 0x02
    1b8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b8c:	8e 01       	movw	r16, r28
    1b8e:	0d 56       	subi	r16, 0x6D	; 109
    1b90:	1f 4f       	sbci	r17, 0xFF	; 255
    1b92:	fe 01       	movw	r30, r28
    1b94:	e9 56       	subi	r30, 0x69	; 105
    1b96:	ff 4f       	sbci	r31, 0xFF	; 255
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	4a e7       	ldi	r20, 0x7A	; 122
    1b9e:	53 e4       	ldi	r21, 0x43	; 67
    1ba0:	60 81       	ld	r22, Z
    1ba2:	71 81       	ldd	r23, Z+1	; 0x01
    1ba4:	82 81       	ldd	r24, Z+2	; 0x02
    1ba6:	93 81       	ldd	r25, Z+3	; 0x03
    1ba8:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1bac:	dc 01       	movw	r26, r24
    1bae:	cb 01       	movw	r24, r22
    1bb0:	f8 01       	movw	r30, r16
    1bb2:	80 83       	st	Z, r24
    1bb4:	91 83       	std	Z+1, r25	; 0x01
    1bb6:	a2 83       	std	Z+2, r26	; 0x02
    1bb8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bba:	fe 01       	movw	r30, r28
    1bbc:	ed 56       	subi	r30, 0x6D	; 109
    1bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc0:	20 e0       	ldi	r18, 0x00	; 0
    1bc2:	30 e0       	ldi	r19, 0x00	; 0
    1bc4:	40 e8       	ldi	r20, 0x80	; 128
    1bc6:	5f e3       	ldi	r21, 0x3F	; 63
    1bc8:	60 81       	ld	r22, Z
    1bca:	71 81       	ldd	r23, Z+1	; 0x01
    1bcc:	82 81       	ldd	r24, Z+2	; 0x02
    1bce:	93 81       	ldd	r25, Z+3	; 0x03
    1bd0:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    1bd4:	88 23       	and	r24, r24
    1bd6:	44 f4       	brge	.+16     	; 0x1be8 <__stack+0x1789>
		__ticks = 1;
    1bd8:	fe 01       	movw	r30, r28
    1bda:	ef 56       	subi	r30, 0x6F	; 111
    1bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bde:	81 e0       	ldi	r24, 0x01	; 1
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	91 83       	std	Z+1, r25	; 0x01
    1be4:	80 83       	st	Z, r24
    1be6:	64 c0       	rjmp	.+200    	; 0x1cb0 <__stack+0x1851>
	else if (__tmp > 65535)
    1be8:	fe 01       	movw	r30, r28
    1bea:	ed 56       	subi	r30, 0x6D	; 109
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	20 e0       	ldi	r18, 0x00	; 0
    1bf0:	3f ef       	ldi	r19, 0xFF	; 255
    1bf2:	4f e7       	ldi	r20, 0x7F	; 127
    1bf4:	57 e4       	ldi	r21, 0x47	; 71
    1bf6:	60 81       	ld	r22, Z
    1bf8:	71 81       	ldd	r23, Z+1	; 0x01
    1bfa:	82 81       	ldd	r24, Z+2	; 0x02
    1bfc:	93 81       	ldd	r25, Z+3	; 0x03
    1bfe:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    1c02:	18 16       	cp	r1, r24
    1c04:	0c f0       	brlt	.+2      	; 0x1c08 <__stack+0x17a9>
    1c06:	43 c0       	rjmp	.+134    	; 0x1c8e <__stack+0x182f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c08:	fe 01       	movw	r30, r28
    1c0a:	e9 56       	subi	r30, 0x69	; 105
    1c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	30 e0       	ldi	r19, 0x00	; 0
    1c12:	40 e2       	ldi	r20, 0x20	; 32
    1c14:	51 e4       	ldi	r21, 0x41	; 65
    1c16:	60 81       	ld	r22, Z
    1c18:	71 81       	ldd	r23, Z+1	; 0x01
    1c1a:	82 81       	ldd	r24, Z+2	; 0x02
    1c1c:	93 81       	ldd	r25, Z+3	; 0x03
    1c1e:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1c22:	dc 01       	movw	r26, r24
    1c24:	cb 01       	movw	r24, r22
    1c26:	8e 01       	movw	r16, r28
    1c28:	0f 56       	subi	r16, 0x6F	; 111
    1c2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c2c:	bc 01       	movw	r22, r24
    1c2e:	cd 01       	movw	r24, r26
    1c30:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1c34:	dc 01       	movw	r26, r24
    1c36:	cb 01       	movw	r24, r22
    1c38:	f8 01       	movw	r30, r16
    1c3a:	91 83       	std	Z+1, r25	; 0x01
    1c3c:	80 83       	st	Z, r24
    1c3e:	1f c0       	rjmp	.+62     	; 0x1c7e <__stack+0x181f>
    1c40:	fe 01       	movw	r30, r28
    1c42:	e1 57       	subi	r30, 0x71	; 113
    1c44:	ff 4f       	sbci	r31, 0xFF	; 255
    1c46:	89 e1       	ldi	r24, 0x19	; 25
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	91 83       	std	Z+1, r25	; 0x01
    1c4c:	80 83       	st	Z, r24
    1c4e:	fe 01       	movw	r30, r28
    1c50:	e1 57       	subi	r30, 0x71	; 113
    1c52:	ff 4f       	sbci	r31, 0xFF	; 255
    1c54:	80 81       	ld	r24, Z
    1c56:	91 81       	ldd	r25, Z+1	; 0x01
    1c58:	01 97       	sbiw	r24, 0x01	; 1
    1c5a:	f1 f7       	brne	.-4      	; 0x1c58 <__stack+0x17f9>
    1c5c:	fe 01       	movw	r30, r28
    1c5e:	e1 57       	subi	r30, 0x71	; 113
    1c60:	ff 4f       	sbci	r31, 0xFF	; 255
    1c62:	91 83       	std	Z+1, r25	; 0x01
    1c64:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c66:	de 01       	movw	r26, r28
    1c68:	af 56       	subi	r26, 0x6F	; 111
    1c6a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c6c:	fe 01       	movw	r30, r28
    1c6e:	ef 56       	subi	r30, 0x6F	; 111
    1c70:	ff 4f       	sbci	r31, 0xFF	; 255
    1c72:	80 81       	ld	r24, Z
    1c74:	91 81       	ldd	r25, Z+1	; 0x01
    1c76:	01 97       	sbiw	r24, 0x01	; 1
    1c78:	11 96       	adiw	r26, 0x01	; 1
    1c7a:	9c 93       	st	X, r25
    1c7c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c7e:	fe 01       	movw	r30, r28
    1c80:	ef 56       	subi	r30, 0x6F	; 111
    1c82:	ff 4f       	sbci	r31, 0xFF	; 255
    1c84:	80 81       	ld	r24, Z
    1c86:	91 81       	ldd	r25, Z+1	; 0x01
    1c88:	00 97       	sbiw	r24, 0x00	; 0
    1c8a:	d1 f6       	brne	.-76     	; 0x1c40 <__stack+0x17e1>
    1c8c:	27 c0       	rjmp	.+78     	; 0x1cdc <__stack+0x187d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c8e:	8e 01       	movw	r16, r28
    1c90:	0f 56       	subi	r16, 0x6F	; 111
    1c92:	1f 4f       	sbci	r17, 0xFF	; 255
    1c94:	fe 01       	movw	r30, r28
    1c96:	ed 56       	subi	r30, 0x6D	; 109
    1c98:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9a:	60 81       	ld	r22, Z
    1c9c:	71 81       	ldd	r23, Z+1	; 0x01
    1c9e:	82 81       	ldd	r24, Z+2	; 0x02
    1ca0:	93 81       	ldd	r25, Z+3	; 0x03
    1ca2:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1ca6:	dc 01       	movw	r26, r24
    1ca8:	cb 01       	movw	r24, r22
    1caa:	f8 01       	movw	r30, r16
    1cac:	91 83       	std	Z+1, r25	; 0x01
    1cae:	80 83       	st	Z, r24
    1cb0:	de 01       	movw	r26, r28
    1cb2:	a3 57       	subi	r26, 0x73	; 115
    1cb4:	bf 4f       	sbci	r27, 0xFF	; 255
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	ef 56       	subi	r30, 0x6F	; 111
    1cba:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbc:	80 81       	ld	r24, Z
    1cbe:	91 81       	ldd	r25, Z+1	; 0x01
    1cc0:	8d 93       	st	X+, r24
    1cc2:	9c 93       	st	X, r25
    1cc4:	fe 01       	movw	r30, r28
    1cc6:	e3 57       	subi	r30, 0x73	; 115
    1cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cca:	80 81       	ld	r24, Z
    1ccc:	91 81       	ldd	r25, Z+1	; 0x01
    1cce:	01 97       	sbiw	r24, 0x01	; 1
    1cd0:	f1 f7       	brne	.-4      	; 0x1cce <__stack+0x186f>
    1cd2:	fe 01       	movw	r30, r28
    1cd4:	e3 57       	subi	r30, 0x73	; 115
    1cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd8:	91 83       	std	Z+1, r25	; 0x01
    1cda:	80 83       	st	Z, r24
	_delay_ms(1);
	LDP|=0<<LCD_D7|0<<LCD_D6|0<<LCD_D5|1<<LCD_D4; //Write 0x1
    1cdc:	a2 e3       	ldi	r26, 0x32	; 50
    1cde:	b0 e0       	ldi	r27, 0x00	; 0
    1ce0:	e2 e3       	ldi	r30, 0x32	; 50
    1ce2:	f0 e0       	ldi	r31, 0x00	; 0
    1ce4:	80 81       	ld	r24, Z
    1ce6:	84 60       	ori	r24, 0x04	; 4
    1ce8:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
    1cea:	a2 e3       	ldi	r26, 0x32	; 50
    1cec:	b0 e0       	ldi	r27, 0x00	; 0
    1cee:	e2 e3       	ldi	r30, 0x32	; 50
    1cf0:	f0 e0       	ldi	r31, 0x00	; 0
    1cf2:	80 81       	ld	r24, Z
    1cf4:	82 60       	ori	r24, 0x02	; 2
    1cf6:	8c 93       	st	X, r24
    1cf8:	fe 01       	movw	r30, r28
    1cfa:	e7 57       	subi	r30, 0x77	; 119
    1cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfe:	80 e0       	ldi	r24, 0x00	; 0
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	a0 e8       	ldi	r26, 0x80	; 128
    1d04:	bf e3       	ldi	r27, 0x3F	; 63
    1d06:	80 83       	st	Z, r24
    1d08:	91 83       	std	Z+1, r25	; 0x01
    1d0a:	a2 83       	std	Z+2, r26	; 0x02
    1d0c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d0e:	8e 01       	movw	r16, r28
    1d10:	0b 57       	subi	r16, 0x7B	; 123
    1d12:	1f 4f       	sbci	r17, 0xFF	; 255
    1d14:	fe 01       	movw	r30, r28
    1d16:	e7 57       	subi	r30, 0x77	; 119
    1d18:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1a:	20 e0       	ldi	r18, 0x00	; 0
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	4a e7       	ldi	r20, 0x7A	; 122
    1d20:	53 e4       	ldi	r21, 0x43	; 67
    1d22:	60 81       	ld	r22, Z
    1d24:	71 81       	ldd	r23, Z+1	; 0x01
    1d26:	82 81       	ldd	r24, Z+2	; 0x02
    1d28:	93 81       	ldd	r25, Z+3	; 0x03
    1d2a:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1d2e:	dc 01       	movw	r26, r24
    1d30:	cb 01       	movw	r24, r22
    1d32:	f8 01       	movw	r30, r16
    1d34:	80 83       	st	Z, r24
    1d36:	91 83       	std	Z+1, r25	; 0x01
    1d38:	a2 83       	std	Z+2, r26	; 0x02
    1d3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d3c:	fe 01       	movw	r30, r28
    1d3e:	eb 57       	subi	r30, 0x7B	; 123
    1d40:	ff 4f       	sbci	r31, 0xFF	; 255
    1d42:	20 e0       	ldi	r18, 0x00	; 0
    1d44:	30 e0       	ldi	r19, 0x00	; 0
    1d46:	40 e8       	ldi	r20, 0x80	; 128
    1d48:	5f e3       	ldi	r21, 0x3F	; 63
    1d4a:	60 81       	ld	r22, Z
    1d4c:	71 81       	ldd	r23, Z+1	; 0x01
    1d4e:	82 81       	ldd	r24, Z+2	; 0x02
    1d50:	93 81       	ldd	r25, Z+3	; 0x03
    1d52:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    1d56:	88 23       	and	r24, r24
    1d58:	44 f4       	brge	.+16     	; 0x1d6a <__stack+0x190b>
		__ticks = 1;
    1d5a:	fe 01       	movw	r30, r28
    1d5c:	ed 57       	subi	r30, 0x7D	; 125
    1d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d60:	81 e0       	ldi	r24, 0x01	; 1
    1d62:	90 e0       	ldi	r25, 0x00	; 0
    1d64:	91 83       	std	Z+1, r25	; 0x01
    1d66:	80 83       	st	Z, r24
    1d68:	64 c0       	rjmp	.+200    	; 0x1e32 <__stack+0x19d3>
	else if (__tmp > 65535)
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	eb 57       	subi	r30, 0x7B	; 123
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	20 e0       	ldi	r18, 0x00	; 0
    1d72:	3f ef       	ldi	r19, 0xFF	; 255
    1d74:	4f e7       	ldi	r20, 0x7F	; 127
    1d76:	57 e4       	ldi	r21, 0x47	; 71
    1d78:	60 81       	ld	r22, Z
    1d7a:	71 81       	ldd	r23, Z+1	; 0x01
    1d7c:	82 81       	ldd	r24, Z+2	; 0x02
    1d7e:	93 81       	ldd	r25, Z+3	; 0x03
    1d80:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    1d84:	18 16       	cp	r1, r24
    1d86:	0c f0       	brlt	.+2      	; 0x1d8a <__stack+0x192b>
    1d88:	43 c0       	rjmp	.+134    	; 0x1e10 <__stack+0x19b1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	e7 57       	subi	r30, 0x77	; 119
    1d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d90:	20 e0       	ldi	r18, 0x00	; 0
    1d92:	30 e0       	ldi	r19, 0x00	; 0
    1d94:	40 e2       	ldi	r20, 0x20	; 32
    1d96:	51 e4       	ldi	r21, 0x41	; 65
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	82 81       	ldd	r24, Z+2	; 0x02
    1d9e:	93 81       	ldd	r25, Z+3	; 0x03
    1da0:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1da4:	dc 01       	movw	r26, r24
    1da6:	cb 01       	movw	r24, r22
    1da8:	8e 01       	movw	r16, r28
    1daa:	0d 57       	subi	r16, 0x7D	; 125
    1dac:	1f 4f       	sbci	r17, 0xFF	; 255
    1dae:	bc 01       	movw	r22, r24
    1db0:	cd 01       	movw	r24, r26
    1db2:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1db6:	dc 01       	movw	r26, r24
    1db8:	cb 01       	movw	r24, r22
    1dba:	f8 01       	movw	r30, r16
    1dbc:	91 83       	std	Z+1, r25	; 0x01
    1dbe:	80 83       	st	Z, r24
    1dc0:	1f c0       	rjmp	.+62     	; 0x1e00 <__stack+0x19a1>
    1dc2:	fe 01       	movw	r30, r28
    1dc4:	ef 57       	subi	r30, 0x7F	; 127
    1dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc8:	89 e1       	ldi	r24, 0x19	; 25
    1dca:	90 e0       	ldi	r25, 0x00	; 0
    1dcc:	91 83       	std	Z+1, r25	; 0x01
    1dce:	80 83       	st	Z, r24
    1dd0:	fe 01       	movw	r30, r28
    1dd2:	ef 57       	subi	r30, 0x7F	; 127
    1dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd6:	80 81       	ld	r24, Z
    1dd8:	91 81       	ldd	r25, Z+1	; 0x01
    1dda:	01 97       	sbiw	r24, 0x01	; 1
    1ddc:	f1 f7       	brne	.-4      	; 0x1dda <__stack+0x197b>
    1dde:	fe 01       	movw	r30, r28
    1de0:	ef 57       	subi	r30, 0x7F	; 127
    1de2:	ff 4f       	sbci	r31, 0xFF	; 255
    1de4:	91 83       	std	Z+1, r25	; 0x01
    1de6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1de8:	de 01       	movw	r26, r28
    1dea:	ad 57       	subi	r26, 0x7D	; 125
    1dec:	bf 4f       	sbci	r27, 0xFF	; 255
    1dee:	fe 01       	movw	r30, r28
    1df0:	ed 57       	subi	r30, 0x7D	; 125
    1df2:	ff 4f       	sbci	r31, 0xFF	; 255
    1df4:	80 81       	ld	r24, Z
    1df6:	91 81       	ldd	r25, Z+1	; 0x01
    1df8:	01 97       	sbiw	r24, 0x01	; 1
    1dfa:	11 96       	adiw	r26, 0x01	; 1
    1dfc:	9c 93       	st	X, r25
    1dfe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e00:	fe 01       	movw	r30, r28
    1e02:	ed 57       	subi	r30, 0x7D	; 125
    1e04:	ff 4f       	sbci	r31, 0xFF	; 255
    1e06:	80 81       	ld	r24, Z
    1e08:	91 81       	ldd	r25, Z+1	; 0x01
    1e0a:	00 97       	sbiw	r24, 0x00	; 0
    1e0c:	d1 f6       	brne	.-76     	; 0x1dc2 <__stack+0x1963>
    1e0e:	27 c0       	rjmp	.+78     	; 0x1e5e <__stack+0x19ff>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e10:	8e 01       	movw	r16, r28
    1e12:	0d 57       	subi	r16, 0x7D	; 125
    1e14:	1f 4f       	sbci	r17, 0xFF	; 255
    1e16:	fe 01       	movw	r30, r28
    1e18:	eb 57       	subi	r30, 0x7B	; 123
    1e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1c:	60 81       	ld	r22, Z
    1e1e:	71 81       	ldd	r23, Z+1	; 0x01
    1e20:	82 81       	ldd	r24, Z+2	; 0x02
    1e22:	93 81       	ldd	r25, Z+3	; 0x03
    1e24:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1e28:	dc 01       	movw	r26, r24
    1e2a:	cb 01       	movw	r24, r22
    1e2c:	f8 01       	movw	r30, r16
    1e2e:	91 83       	std	Z+1, r25	; 0x01
    1e30:	80 83       	st	Z, r24
    1e32:	de 01       	movw	r26, r28
    1e34:	a1 58       	subi	r26, 0x81	; 129
    1e36:	bf 4f       	sbci	r27, 0xFF	; 255
    1e38:	fe 01       	movw	r30, r28
    1e3a:	ed 57       	subi	r30, 0x7D	; 125
    1e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3e:	80 81       	ld	r24, Z
    1e40:	91 81       	ldd	r25, Z+1	; 0x01
    1e42:	8d 93       	st	X+, r24
    1e44:	9c 93       	st	X, r25
    1e46:	fe 01       	movw	r30, r28
    1e48:	e1 58       	subi	r30, 0x81	; 129
    1e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4c:	80 81       	ld	r24, Z
    1e4e:	91 81       	ldd	r25, Z+1	; 0x01
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	f1 f7       	brne	.-4      	; 0x1e50 <__stack+0x19f1>
    1e54:	fe 01       	movw	r30, r28
    1e56:	e1 58       	subi	r30, 0x81	; 129
    1e58:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5a:	91 83       	std	Z+1, r25	; 0x01
    1e5c:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    1e5e:	a2 e3       	ldi	r26, 0x32	; 50
    1e60:	b0 e0       	ldi	r27, 0x00	; 0
    1e62:	e2 e3       	ldi	r30, 0x32	; 50
    1e64:	f0 e0       	ldi	r31, 0x00	; 0
    1e66:	80 81       	ld	r24, Z
    1e68:	8d 7f       	andi	r24, 0xFD	; 253
    1e6a:	8c 93       	st	X, r24
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	e5 58       	subi	r30, 0x85	; 133
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	80 e0       	ldi	r24, 0x00	; 0
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	a0 e8       	ldi	r26, 0x80	; 128
    1e78:	bf e3       	ldi	r27, 0x3F	; 63
    1e7a:	80 83       	st	Z, r24
    1e7c:	91 83       	std	Z+1, r25	; 0x01
    1e7e:	a2 83       	std	Z+2, r26	; 0x02
    1e80:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e82:	8e 01       	movw	r16, r28
    1e84:	09 58       	subi	r16, 0x89	; 137
    1e86:	1f 4f       	sbci	r17, 0xFF	; 255
    1e88:	fe 01       	movw	r30, r28
    1e8a:	e5 58       	subi	r30, 0x85	; 133
    1e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8e:	20 e0       	ldi	r18, 0x00	; 0
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	4a e7       	ldi	r20, 0x7A	; 122
    1e94:	53 e4       	ldi	r21, 0x43	; 67
    1e96:	60 81       	ld	r22, Z
    1e98:	71 81       	ldd	r23, Z+1	; 0x01
    1e9a:	82 81       	ldd	r24, Z+2	; 0x02
    1e9c:	93 81       	ldd	r25, Z+3	; 0x03
    1e9e:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1ea2:	dc 01       	movw	r26, r24
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	f8 01       	movw	r30, r16
    1ea8:	80 83       	st	Z, r24
    1eaa:	91 83       	std	Z+1, r25	; 0x01
    1eac:	a2 83       	std	Z+2, r26	; 0x02
    1eae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1eb0:	fe 01       	movw	r30, r28
    1eb2:	e9 58       	subi	r30, 0x89	; 137
    1eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb6:	20 e0       	ldi	r18, 0x00	; 0
    1eb8:	30 e0       	ldi	r19, 0x00	; 0
    1eba:	40 e8       	ldi	r20, 0x80	; 128
    1ebc:	5f e3       	ldi	r21, 0x3F	; 63
    1ebe:	60 81       	ld	r22, Z
    1ec0:	71 81       	ldd	r23, Z+1	; 0x01
    1ec2:	82 81       	ldd	r24, Z+2	; 0x02
    1ec4:	93 81       	ldd	r25, Z+3	; 0x03
    1ec6:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    1eca:	88 23       	and	r24, r24
    1ecc:	44 f4       	brge	.+16     	; 0x1ede <__stack+0x1a7f>
		__ticks = 1;
    1ece:	fe 01       	movw	r30, r28
    1ed0:	eb 58       	subi	r30, 0x8B	; 139
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	81 e0       	ldi	r24, 0x01	; 1
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	91 83       	std	Z+1, r25	; 0x01
    1eda:	80 83       	st	Z, r24
    1edc:	64 c0       	rjmp	.+200    	; 0x1fa6 <__stack+0x1b47>
	else if (__tmp > 65535)
    1ede:	fe 01       	movw	r30, r28
    1ee0:	e9 58       	subi	r30, 0x89	; 137
    1ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee4:	20 e0       	ldi	r18, 0x00	; 0
    1ee6:	3f ef       	ldi	r19, 0xFF	; 255
    1ee8:	4f e7       	ldi	r20, 0x7F	; 127
    1eea:	57 e4       	ldi	r21, 0x47	; 71
    1eec:	60 81       	ld	r22, Z
    1eee:	71 81       	ldd	r23, Z+1	; 0x01
    1ef0:	82 81       	ldd	r24, Z+2	; 0x02
    1ef2:	93 81       	ldd	r25, Z+3	; 0x03
    1ef4:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    1ef8:	18 16       	cp	r1, r24
    1efa:	0c f0       	brlt	.+2      	; 0x1efe <__stack+0x1a9f>
    1efc:	43 c0       	rjmp	.+134    	; 0x1f84 <__stack+0x1b25>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1efe:	fe 01       	movw	r30, r28
    1f00:	e5 58       	subi	r30, 0x85	; 133
    1f02:	ff 4f       	sbci	r31, 0xFF	; 255
    1f04:	20 e0       	ldi	r18, 0x00	; 0
    1f06:	30 e0       	ldi	r19, 0x00	; 0
    1f08:	40 e2       	ldi	r20, 0x20	; 32
    1f0a:	51 e4       	ldi	r21, 0x41	; 65
    1f0c:	60 81       	ld	r22, Z
    1f0e:	71 81       	ldd	r23, Z+1	; 0x01
    1f10:	82 81       	ldd	r24, Z+2	; 0x02
    1f12:	93 81       	ldd	r25, Z+3	; 0x03
    1f14:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	8e 01       	movw	r16, r28
    1f1e:	0b 58       	subi	r16, 0x8B	; 139
    1f20:	1f 4f       	sbci	r17, 0xFF	; 255
    1f22:	bc 01       	movw	r22, r24
    1f24:	cd 01       	movw	r24, r26
    1f26:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1f2a:	dc 01       	movw	r26, r24
    1f2c:	cb 01       	movw	r24, r22
    1f2e:	f8 01       	movw	r30, r16
    1f30:	91 83       	std	Z+1, r25	; 0x01
    1f32:	80 83       	st	Z, r24
    1f34:	1f c0       	rjmp	.+62     	; 0x1f74 <__stack+0x1b15>
    1f36:	fe 01       	movw	r30, r28
    1f38:	ed 58       	subi	r30, 0x8D	; 141
    1f3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3c:	89 e1       	ldi	r24, 0x19	; 25
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	91 83       	std	Z+1, r25	; 0x01
    1f42:	80 83       	st	Z, r24
    1f44:	fe 01       	movw	r30, r28
    1f46:	ed 58       	subi	r30, 0x8D	; 141
    1f48:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4a:	80 81       	ld	r24, Z
    1f4c:	91 81       	ldd	r25, Z+1	; 0x01
    1f4e:	01 97       	sbiw	r24, 0x01	; 1
    1f50:	f1 f7       	brne	.-4      	; 0x1f4e <__stack+0x1aef>
    1f52:	fe 01       	movw	r30, r28
    1f54:	ed 58       	subi	r30, 0x8D	; 141
    1f56:	ff 4f       	sbci	r31, 0xFF	; 255
    1f58:	91 83       	std	Z+1, r25	; 0x01
    1f5a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f5c:	de 01       	movw	r26, r28
    1f5e:	ab 58       	subi	r26, 0x8B	; 139
    1f60:	bf 4f       	sbci	r27, 0xFF	; 255
    1f62:	fe 01       	movw	r30, r28
    1f64:	eb 58       	subi	r30, 0x8B	; 139
    1f66:	ff 4f       	sbci	r31, 0xFF	; 255
    1f68:	80 81       	ld	r24, Z
    1f6a:	91 81       	ldd	r25, Z+1	; 0x01
    1f6c:	01 97       	sbiw	r24, 0x01	; 1
    1f6e:	11 96       	adiw	r26, 0x01	; 1
    1f70:	9c 93       	st	X, r25
    1f72:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f74:	fe 01       	movw	r30, r28
    1f76:	eb 58       	subi	r30, 0x8B	; 139
    1f78:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7a:	80 81       	ld	r24, Z
    1f7c:	91 81       	ldd	r25, Z+1	; 0x01
    1f7e:	00 97       	sbiw	r24, 0x00	; 0
    1f80:	d1 f6       	brne	.-76     	; 0x1f36 <__stack+0x1ad7>
    1f82:	27 c0       	rjmp	.+78     	; 0x1fd2 <__stack+0x1b73>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f84:	8e 01       	movw	r16, r28
    1f86:	0b 58       	subi	r16, 0x8B	; 139
    1f88:	1f 4f       	sbci	r17, 0xFF	; 255
    1f8a:	fe 01       	movw	r30, r28
    1f8c:	e9 58       	subi	r30, 0x89	; 137
    1f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f90:	60 81       	ld	r22, Z
    1f92:	71 81       	ldd	r23, Z+1	; 0x01
    1f94:	82 81       	ldd	r24, Z+2	; 0x02
    1f96:	93 81       	ldd	r25, Z+3	; 0x03
    1f98:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	cb 01       	movw	r24, r22
    1fa0:	f8 01       	movw	r30, r16
    1fa2:	91 83       	std	Z+1, r25	; 0x01
    1fa4:	80 83       	st	Z, r24
    1fa6:	de 01       	movw	r26, r28
    1fa8:	af 58       	subi	r26, 0x8F	; 143
    1faa:	bf 4f       	sbci	r27, 0xFF	; 255
    1fac:	fe 01       	movw	r30, r28
    1fae:	eb 58       	subi	r30, 0x8B	; 139
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	80 81       	ld	r24, Z
    1fb4:	91 81       	ldd	r25, Z+1	; 0x01
    1fb6:	8d 93       	st	X+, r24
    1fb8:	9c 93       	st	X, r25
    1fba:	fe 01       	movw	r30, r28
    1fbc:	ef 58       	subi	r30, 0x8F	; 143
    1fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc0:	80 81       	ld	r24, Z
    1fc2:	91 81       	ldd	r25, Z+1	; 0x01
    1fc4:	01 97       	sbiw	r24, 0x01	; 1
    1fc6:	f1 f7       	brne	.-4      	; 0x1fc4 <__stack+0x1b65>
    1fc8:	fe 01       	movw	r30, r28
    1fca:	ef 58       	subi	r30, 0x8F	; 143
    1fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fce:	91 83       	std	Z+1, r25	; 0x01
    1fd0:	80 83       	st	Z, r24
	_delay_ms(1);
   //-------- Set Cursor Move Direction --------
	LDP&=0<<LCD_D7|0<<LCD_D6|0<<LCD_D5|0<<LCD_D4; //Write 0x0
    1fd2:	e2 e3       	ldi	r30, 0x32	; 50
    1fd4:	f0 e0       	ldi	r31, 0x00	; 0
    1fd6:	80 81       	ld	r24, Z
    1fd8:	e2 e3       	ldi	r30, 0x32	; 50
    1fda:	f0 e0       	ldi	r31, 0x00	; 0
    1fdc:	10 82       	st	Z, r1
	LCP|=1<<LCD_E|0<<LCD_RS;
    1fde:	a2 e3       	ldi	r26, 0x32	; 50
    1fe0:	b0 e0       	ldi	r27, 0x00	; 0
    1fe2:	e2 e3       	ldi	r30, 0x32	; 50
    1fe4:	f0 e0       	ldi	r31, 0x00	; 0
    1fe6:	80 81       	ld	r24, Z
    1fe8:	82 60       	ori	r24, 0x02	; 2
    1fea:	8c 93       	st	X, r24
    1fec:	fe 01       	movw	r30, r28
    1fee:	e3 59       	subi	r30, 0x93	; 147
    1ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff2:	80 e0       	ldi	r24, 0x00	; 0
    1ff4:	90 e0       	ldi	r25, 0x00	; 0
    1ff6:	a0 e8       	ldi	r26, 0x80	; 128
    1ff8:	bf e3       	ldi	r27, 0x3F	; 63
    1ffa:	80 83       	st	Z, r24
    1ffc:	91 83       	std	Z+1, r25	; 0x01
    1ffe:	a2 83       	std	Z+2, r26	; 0x02
    2000:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2002:	8e 01       	movw	r16, r28
    2004:	07 59       	subi	r16, 0x97	; 151
    2006:	1f 4f       	sbci	r17, 0xFF	; 255
    2008:	fe 01       	movw	r30, r28
    200a:	e3 59       	subi	r30, 0x93	; 147
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	20 e0       	ldi	r18, 0x00	; 0
    2010:	30 e0       	ldi	r19, 0x00	; 0
    2012:	4a e7       	ldi	r20, 0x7A	; 122
    2014:	53 e4       	ldi	r21, 0x43	; 67
    2016:	60 81       	ld	r22, Z
    2018:	71 81       	ldd	r23, Z+1	; 0x01
    201a:	82 81       	ldd	r24, Z+2	; 0x02
    201c:	93 81       	ldd	r25, Z+3	; 0x03
    201e:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2022:	dc 01       	movw	r26, r24
    2024:	cb 01       	movw	r24, r22
    2026:	f8 01       	movw	r30, r16
    2028:	80 83       	st	Z, r24
    202a:	91 83       	std	Z+1, r25	; 0x01
    202c:	a2 83       	std	Z+2, r26	; 0x02
    202e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2030:	fe 01       	movw	r30, r28
    2032:	e7 59       	subi	r30, 0x97	; 151
    2034:	ff 4f       	sbci	r31, 0xFF	; 255
    2036:	20 e0       	ldi	r18, 0x00	; 0
    2038:	30 e0       	ldi	r19, 0x00	; 0
    203a:	40 e8       	ldi	r20, 0x80	; 128
    203c:	5f e3       	ldi	r21, 0x3F	; 63
    203e:	60 81       	ld	r22, Z
    2040:	71 81       	ldd	r23, Z+1	; 0x01
    2042:	82 81       	ldd	r24, Z+2	; 0x02
    2044:	93 81       	ldd	r25, Z+3	; 0x03
    2046:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    204a:	88 23       	and	r24, r24
    204c:	44 f4       	brge	.+16     	; 0x205e <__stack+0x1bff>
		__ticks = 1;
    204e:	fe 01       	movw	r30, r28
    2050:	e9 59       	subi	r30, 0x99	; 153
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	81 e0       	ldi	r24, 0x01	; 1
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	91 83       	std	Z+1, r25	; 0x01
    205a:	80 83       	st	Z, r24
    205c:	64 c0       	rjmp	.+200    	; 0x2126 <__stack+0x1cc7>
	else if (__tmp > 65535)
    205e:	fe 01       	movw	r30, r28
    2060:	e7 59       	subi	r30, 0x97	; 151
    2062:	ff 4f       	sbci	r31, 0xFF	; 255
    2064:	20 e0       	ldi	r18, 0x00	; 0
    2066:	3f ef       	ldi	r19, 0xFF	; 255
    2068:	4f e7       	ldi	r20, 0x7F	; 127
    206a:	57 e4       	ldi	r21, 0x47	; 71
    206c:	60 81       	ld	r22, Z
    206e:	71 81       	ldd	r23, Z+1	; 0x01
    2070:	82 81       	ldd	r24, Z+2	; 0x02
    2072:	93 81       	ldd	r25, Z+3	; 0x03
    2074:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    2078:	18 16       	cp	r1, r24
    207a:	0c f0       	brlt	.+2      	; 0x207e <__stack+0x1c1f>
    207c:	43 c0       	rjmp	.+134    	; 0x2104 <__stack+0x1ca5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    207e:	fe 01       	movw	r30, r28
    2080:	e3 59       	subi	r30, 0x93	; 147
    2082:	ff 4f       	sbci	r31, 0xFF	; 255
    2084:	20 e0       	ldi	r18, 0x00	; 0
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	40 e2       	ldi	r20, 0x20	; 32
    208a:	51 e4       	ldi	r21, 0x41	; 65
    208c:	60 81       	ld	r22, Z
    208e:	71 81       	ldd	r23, Z+1	; 0x01
    2090:	82 81       	ldd	r24, Z+2	; 0x02
    2092:	93 81       	ldd	r25, Z+3	; 0x03
    2094:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2098:	dc 01       	movw	r26, r24
    209a:	cb 01       	movw	r24, r22
    209c:	8e 01       	movw	r16, r28
    209e:	09 59       	subi	r16, 0x99	; 153
    20a0:	1f 4f       	sbci	r17, 0xFF	; 255
    20a2:	bc 01       	movw	r22, r24
    20a4:	cd 01       	movw	r24, r26
    20a6:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    20aa:	dc 01       	movw	r26, r24
    20ac:	cb 01       	movw	r24, r22
    20ae:	f8 01       	movw	r30, r16
    20b0:	91 83       	std	Z+1, r25	; 0x01
    20b2:	80 83       	st	Z, r24
    20b4:	1f c0       	rjmp	.+62     	; 0x20f4 <__stack+0x1c95>
    20b6:	fe 01       	movw	r30, r28
    20b8:	eb 59       	subi	r30, 0x9B	; 155
    20ba:	ff 4f       	sbci	r31, 0xFF	; 255
    20bc:	89 e1       	ldi	r24, 0x19	; 25
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	91 83       	std	Z+1, r25	; 0x01
    20c2:	80 83       	st	Z, r24
    20c4:	fe 01       	movw	r30, r28
    20c6:	eb 59       	subi	r30, 0x9B	; 155
    20c8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ca:	80 81       	ld	r24, Z
    20cc:	91 81       	ldd	r25, Z+1	; 0x01
    20ce:	01 97       	sbiw	r24, 0x01	; 1
    20d0:	f1 f7       	brne	.-4      	; 0x20ce <__stack+0x1c6f>
    20d2:	fe 01       	movw	r30, r28
    20d4:	eb 59       	subi	r30, 0x9B	; 155
    20d6:	ff 4f       	sbci	r31, 0xFF	; 255
    20d8:	91 83       	std	Z+1, r25	; 0x01
    20da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20dc:	de 01       	movw	r26, r28
    20de:	a9 59       	subi	r26, 0x99	; 153
    20e0:	bf 4f       	sbci	r27, 0xFF	; 255
    20e2:	fe 01       	movw	r30, r28
    20e4:	e9 59       	subi	r30, 0x99	; 153
    20e6:	ff 4f       	sbci	r31, 0xFF	; 255
    20e8:	80 81       	ld	r24, Z
    20ea:	91 81       	ldd	r25, Z+1	; 0x01
    20ec:	01 97       	sbiw	r24, 0x01	; 1
    20ee:	11 96       	adiw	r26, 0x01	; 1
    20f0:	9c 93       	st	X, r25
    20f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20f4:	fe 01       	movw	r30, r28
    20f6:	e9 59       	subi	r30, 0x99	; 153
    20f8:	ff 4f       	sbci	r31, 0xFF	; 255
    20fa:	80 81       	ld	r24, Z
    20fc:	91 81       	ldd	r25, Z+1	; 0x01
    20fe:	00 97       	sbiw	r24, 0x00	; 0
    2100:	d1 f6       	brne	.-76     	; 0x20b6 <__stack+0x1c57>
    2102:	27 c0       	rjmp	.+78     	; 0x2152 <__stack+0x1cf3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2104:	8e 01       	movw	r16, r28
    2106:	09 59       	subi	r16, 0x99	; 153
    2108:	1f 4f       	sbci	r17, 0xFF	; 255
    210a:	fe 01       	movw	r30, r28
    210c:	e7 59       	subi	r30, 0x97	; 151
    210e:	ff 4f       	sbci	r31, 0xFF	; 255
    2110:	60 81       	ld	r22, Z
    2112:	71 81       	ldd	r23, Z+1	; 0x01
    2114:	82 81       	ldd	r24, Z+2	; 0x02
    2116:	93 81       	ldd	r25, Z+3	; 0x03
    2118:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    211c:	dc 01       	movw	r26, r24
    211e:	cb 01       	movw	r24, r22
    2120:	f8 01       	movw	r30, r16
    2122:	91 83       	std	Z+1, r25	; 0x01
    2124:	80 83       	st	Z, r24
    2126:	de 01       	movw	r26, r28
    2128:	ad 59       	subi	r26, 0x9D	; 157
    212a:	bf 4f       	sbci	r27, 0xFF	; 255
    212c:	fe 01       	movw	r30, r28
    212e:	e9 59       	subi	r30, 0x99	; 153
    2130:	ff 4f       	sbci	r31, 0xFF	; 255
    2132:	80 81       	ld	r24, Z
    2134:	91 81       	ldd	r25, Z+1	; 0x01
    2136:	8d 93       	st	X+, r24
    2138:	9c 93       	st	X, r25
    213a:	fe 01       	movw	r30, r28
    213c:	ed 59       	subi	r30, 0x9D	; 157
    213e:	ff 4f       	sbci	r31, 0xFF	; 255
    2140:	80 81       	ld	r24, Z
    2142:	91 81       	ldd	r25, Z+1	; 0x01
    2144:	01 97       	sbiw	r24, 0x01	; 1
    2146:	f1 f7       	brne	.-4      	; 0x2144 <__stack+0x1ce5>
    2148:	fe 01       	movw	r30, r28
    214a:	ed 59       	subi	r30, 0x9D	; 157
    214c:	ff 4f       	sbci	r31, 0xFF	; 255
    214e:	91 83       	std	Z+1, r25	; 0x01
    2150:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    2152:	a2 e3       	ldi	r26, 0x32	; 50
    2154:	b0 e0       	ldi	r27, 0x00	; 0
    2156:	e2 e3       	ldi	r30, 0x32	; 50
    2158:	f0 e0       	ldi	r31, 0x00	; 0
    215a:	80 81       	ld	r24, Z
    215c:	8d 7f       	andi	r24, 0xFD	; 253
    215e:	8c 93       	st	X, r24
    2160:	fe 01       	movw	r30, r28
    2162:	e1 5a       	subi	r30, 0xA1	; 161
    2164:	ff 4f       	sbci	r31, 0xFF	; 255
    2166:	80 e0       	ldi	r24, 0x00	; 0
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	a0 e8       	ldi	r26, 0x80	; 128
    216c:	bf e3       	ldi	r27, 0x3F	; 63
    216e:	80 83       	st	Z, r24
    2170:	91 83       	std	Z+1, r25	; 0x01
    2172:	a2 83       	std	Z+2, r26	; 0x02
    2174:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2176:	8e 01       	movw	r16, r28
    2178:	05 5a       	subi	r16, 0xA5	; 165
    217a:	1f 4f       	sbci	r17, 0xFF	; 255
    217c:	fe 01       	movw	r30, r28
    217e:	e1 5a       	subi	r30, 0xA1	; 161
    2180:	ff 4f       	sbci	r31, 0xFF	; 255
    2182:	20 e0       	ldi	r18, 0x00	; 0
    2184:	30 e0       	ldi	r19, 0x00	; 0
    2186:	4a e7       	ldi	r20, 0x7A	; 122
    2188:	53 e4       	ldi	r21, 0x43	; 67
    218a:	60 81       	ld	r22, Z
    218c:	71 81       	ldd	r23, Z+1	; 0x01
    218e:	82 81       	ldd	r24, Z+2	; 0x02
    2190:	93 81       	ldd	r25, Z+3	; 0x03
    2192:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2196:	dc 01       	movw	r26, r24
    2198:	cb 01       	movw	r24, r22
    219a:	f8 01       	movw	r30, r16
    219c:	80 83       	st	Z, r24
    219e:	91 83       	std	Z+1, r25	; 0x01
    21a0:	a2 83       	std	Z+2, r26	; 0x02
    21a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21a4:	fe 01       	movw	r30, r28
    21a6:	e5 5a       	subi	r30, 0xA5	; 165
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	30 e0       	ldi	r19, 0x00	; 0
    21ae:	40 e8       	ldi	r20, 0x80	; 128
    21b0:	5f e3       	ldi	r21, 0x3F	; 63
    21b2:	60 81       	ld	r22, Z
    21b4:	71 81       	ldd	r23, Z+1	; 0x01
    21b6:	82 81       	ldd	r24, Z+2	; 0x02
    21b8:	93 81       	ldd	r25, Z+3	; 0x03
    21ba:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    21be:	88 23       	and	r24, r24
    21c0:	44 f4       	brge	.+16     	; 0x21d2 <__stack+0x1d73>
		__ticks = 1;
    21c2:	fe 01       	movw	r30, r28
    21c4:	e7 5a       	subi	r30, 0xA7	; 167
    21c6:	ff 4f       	sbci	r31, 0xFF	; 255
    21c8:	81 e0       	ldi	r24, 0x01	; 1
    21ca:	90 e0       	ldi	r25, 0x00	; 0
    21cc:	91 83       	std	Z+1, r25	; 0x01
    21ce:	80 83       	st	Z, r24
    21d0:	64 c0       	rjmp	.+200    	; 0x229a <__stack+0x1e3b>
	else if (__tmp > 65535)
    21d2:	fe 01       	movw	r30, r28
    21d4:	e5 5a       	subi	r30, 0xA5	; 165
    21d6:	ff 4f       	sbci	r31, 0xFF	; 255
    21d8:	20 e0       	ldi	r18, 0x00	; 0
    21da:	3f ef       	ldi	r19, 0xFF	; 255
    21dc:	4f e7       	ldi	r20, 0x7F	; 127
    21de:	57 e4       	ldi	r21, 0x47	; 71
    21e0:	60 81       	ld	r22, Z
    21e2:	71 81       	ldd	r23, Z+1	; 0x01
    21e4:	82 81       	ldd	r24, Z+2	; 0x02
    21e6:	93 81       	ldd	r25, Z+3	; 0x03
    21e8:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    21ec:	18 16       	cp	r1, r24
    21ee:	0c f0       	brlt	.+2      	; 0x21f2 <__stack+0x1d93>
    21f0:	43 c0       	rjmp	.+134    	; 0x2278 <__stack+0x1e19>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21f2:	fe 01       	movw	r30, r28
    21f4:	e1 5a       	subi	r30, 0xA1	; 161
    21f6:	ff 4f       	sbci	r31, 0xFF	; 255
    21f8:	20 e0       	ldi	r18, 0x00	; 0
    21fa:	30 e0       	ldi	r19, 0x00	; 0
    21fc:	40 e2       	ldi	r20, 0x20	; 32
    21fe:	51 e4       	ldi	r21, 0x41	; 65
    2200:	60 81       	ld	r22, Z
    2202:	71 81       	ldd	r23, Z+1	; 0x01
    2204:	82 81       	ldd	r24, Z+2	; 0x02
    2206:	93 81       	ldd	r25, Z+3	; 0x03
    2208:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    220c:	dc 01       	movw	r26, r24
    220e:	cb 01       	movw	r24, r22
    2210:	8e 01       	movw	r16, r28
    2212:	07 5a       	subi	r16, 0xA7	; 167
    2214:	1f 4f       	sbci	r17, 0xFF	; 255
    2216:	bc 01       	movw	r22, r24
    2218:	cd 01       	movw	r24, r26
    221a:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    221e:	dc 01       	movw	r26, r24
    2220:	cb 01       	movw	r24, r22
    2222:	f8 01       	movw	r30, r16
    2224:	91 83       	std	Z+1, r25	; 0x01
    2226:	80 83       	st	Z, r24
    2228:	1f c0       	rjmp	.+62     	; 0x2268 <__stack+0x1e09>
    222a:	fe 01       	movw	r30, r28
    222c:	e9 5a       	subi	r30, 0xA9	; 169
    222e:	ff 4f       	sbci	r31, 0xFF	; 255
    2230:	89 e1       	ldi	r24, 0x19	; 25
    2232:	90 e0       	ldi	r25, 0x00	; 0
    2234:	91 83       	std	Z+1, r25	; 0x01
    2236:	80 83       	st	Z, r24
    2238:	fe 01       	movw	r30, r28
    223a:	e9 5a       	subi	r30, 0xA9	; 169
    223c:	ff 4f       	sbci	r31, 0xFF	; 255
    223e:	80 81       	ld	r24, Z
    2240:	91 81       	ldd	r25, Z+1	; 0x01
    2242:	01 97       	sbiw	r24, 0x01	; 1
    2244:	f1 f7       	brne	.-4      	; 0x2242 <__stack+0x1de3>
    2246:	fe 01       	movw	r30, r28
    2248:	e9 5a       	subi	r30, 0xA9	; 169
    224a:	ff 4f       	sbci	r31, 0xFF	; 255
    224c:	91 83       	std	Z+1, r25	; 0x01
    224e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2250:	de 01       	movw	r26, r28
    2252:	a7 5a       	subi	r26, 0xA7	; 167
    2254:	bf 4f       	sbci	r27, 0xFF	; 255
    2256:	fe 01       	movw	r30, r28
    2258:	e7 5a       	subi	r30, 0xA7	; 167
    225a:	ff 4f       	sbci	r31, 0xFF	; 255
    225c:	80 81       	ld	r24, Z
    225e:	91 81       	ldd	r25, Z+1	; 0x01
    2260:	01 97       	sbiw	r24, 0x01	; 1
    2262:	11 96       	adiw	r26, 0x01	; 1
    2264:	9c 93       	st	X, r25
    2266:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2268:	fe 01       	movw	r30, r28
    226a:	e7 5a       	subi	r30, 0xA7	; 167
    226c:	ff 4f       	sbci	r31, 0xFF	; 255
    226e:	80 81       	ld	r24, Z
    2270:	91 81       	ldd	r25, Z+1	; 0x01
    2272:	00 97       	sbiw	r24, 0x00	; 0
    2274:	d1 f6       	brne	.-76     	; 0x222a <__stack+0x1dcb>
    2276:	27 c0       	rjmp	.+78     	; 0x22c6 <__stack+0x1e67>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2278:	8e 01       	movw	r16, r28
    227a:	07 5a       	subi	r16, 0xA7	; 167
    227c:	1f 4f       	sbci	r17, 0xFF	; 255
    227e:	fe 01       	movw	r30, r28
    2280:	e5 5a       	subi	r30, 0xA5	; 165
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	60 81       	ld	r22, Z
    2286:	71 81       	ldd	r23, Z+1	; 0x01
    2288:	82 81       	ldd	r24, Z+2	; 0x02
    228a:	93 81       	ldd	r25, Z+3	; 0x03
    228c:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2290:	dc 01       	movw	r26, r24
    2292:	cb 01       	movw	r24, r22
    2294:	f8 01       	movw	r30, r16
    2296:	91 83       	std	Z+1, r25	; 0x01
    2298:	80 83       	st	Z, r24
    229a:	de 01       	movw	r26, r28
    229c:	ab 5a       	subi	r26, 0xAB	; 171
    229e:	bf 4f       	sbci	r27, 0xFF	; 255
    22a0:	fe 01       	movw	r30, r28
    22a2:	e7 5a       	subi	r30, 0xA7	; 167
    22a4:	ff 4f       	sbci	r31, 0xFF	; 255
    22a6:	80 81       	ld	r24, Z
    22a8:	91 81       	ldd	r25, Z+1	; 0x01
    22aa:	8d 93       	st	X+, r24
    22ac:	9c 93       	st	X, r25
    22ae:	fe 01       	movw	r30, r28
    22b0:	eb 5a       	subi	r30, 0xAB	; 171
    22b2:	ff 4f       	sbci	r31, 0xFF	; 255
    22b4:	80 81       	ld	r24, Z
    22b6:	91 81       	ldd	r25, Z+1	; 0x01
    22b8:	01 97       	sbiw	r24, 0x01	; 1
    22ba:	f1 f7       	brne	.-4      	; 0x22b8 <__stack+0x1e59>
    22bc:	fe 01       	movw	r30, r28
    22be:	eb 5a       	subi	r30, 0xAB	; 171
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	91 83       	std	Z+1, r25	; 0x01
    22c4:	80 83       	st	Z, r24
	_delay_ms(1);
	LDP|=0<<LCD_D7|1<<LCD_D6|1<<LCD_D5|0<<LCD_D4; //Write 0x6 - Increment the Cursor
    22c6:	a2 e3       	ldi	r26, 0x32	; 50
    22c8:	b0 e0       	ldi	r27, 0x00	; 0
    22ca:	e2 e3       	ldi	r30, 0x32	; 50
    22cc:	f0 e0       	ldi	r31, 0x00	; 0
    22ce:	80 81       	ld	r24, Z
    22d0:	88 61       	ori	r24, 0x18	; 24
    22d2:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
    22d4:	a2 e3       	ldi	r26, 0x32	; 50
    22d6:	b0 e0       	ldi	r27, 0x00	; 0
    22d8:	e2 e3       	ldi	r30, 0x32	; 50
    22da:	f0 e0       	ldi	r31, 0x00	; 0
    22dc:	80 81       	ld	r24, Z
    22de:	82 60       	ori	r24, 0x02	; 2
    22e0:	8c 93       	st	X, r24
    22e2:	fe 01       	movw	r30, r28
    22e4:	ef 5a       	subi	r30, 0xAF	; 175
    22e6:	ff 4f       	sbci	r31, 0xFF	; 255
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	90 e0       	ldi	r25, 0x00	; 0
    22ec:	a0 e8       	ldi	r26, 0x80	; 128
    22ee:	bf e3       	ldi	r27, 0x3F	; 63
    22f0:	80 83       	st	Z, r24
    22f2:	91 83       	std	Z+1, r25	; 0x01
    22f4:	a2 83       	std	Z+2, r26	; 0x02
    22f6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22f8:	8e 01       	movw	r16, r28
    22fa:	03 5b       	subi	r16, 0xB3	; 179
    22fc:	1f 4f       	sbci	r17, 0xFF	; 255
    22fe:	fe 01       	movw	r30, r28
    2300:	ef 5a       	subi	r30, 0xAF	; 175
    2302:	ff 4f       	sbci	r31, 0xFF	; 255
    2304:	20 e0       	ldi	r18, 0x00	; 0
    2306:	30 e0       	ldi	r19, 0x00	; 0
    2308:	4a e7       	ldi	r20, 0x7A	; 122
    230a:	53 e4       	ldi	r21, 0x43	; 67
    230c:	60 81       	ld	r22, Z
    230e:	71 81       	ldd	r23, Z+1	; 0x01
    2310:	82 81       	ldd	r24, Z+2	; 0x02
    2312:	93 81       	ldd	r25, Z+3	; 0x03
    2314:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2318:	dc 01       	movw	r26, r24
    231a:	cb 01       	movw	r24, r22
    231c:	f8 01       	movw	r30, r16
    231e:	80 83       	st	Z, r24
    2320:	91 83       	std	Z+1, r25	; 0x01
    2322:	a2 83       	std	Z+2, r26	; 0x02
    2324:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2326:	fe 01       	movw	r30, r28
    2328:	e3 5b       	subi	r30, 0xB3	; 179
    232a:	ff 4f       	sbci	r31, 0xFF	; 255
    232c:	20 e0       	ldi	r18, 0x00	; 0
    232e:	30 e0       	ldi	r19, 0x00	; 0
    2330:	40 e8       	ldi	r20, 0x80	; 128
    2332:	5f e3       	ldi	r21, 0x3F	; 63
    2334:	60 81       	ld	r22, Z
    2336:	71 81       	ldd	r23, Z+1	; 0x01
    2338:	82 81       	ldd	r24, Z+2	; 0x02
    233a:	93 81       	ldd	r25, Z+3	; 0x03
    233c:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    2340:	88 23       	and	r24, r24
    2342:	44 f4       	brge	.+16     	; 0x2354 <__stack+0x1ef5>
		__ticks = 1;
    2344:	fe 01       	movw	r30, r28
    2346:	e5 5b       	subi	r30, 0xB5	; 181
    2348:	ff 4f       	sbci	r31, 0xFF	; 255
    234a:	81 e0       	ldi	r24, 0x01	; 1
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	91 83       	std	Z+1, r25	; 0x01
    2350:	80 83       	st	Z, r24
    2352:	64 c0       	rjmp	.+200    	; 0x241c <__stack+0x1fbd>
	else if (__tmp > 65535)
    2354:	fe 01       	movw	r30, r28
    2356:	e3 5b       	subi	r30, 0xB3	; 179
    2358:	ff 4f       	sbci	r31, 0xFF	; 255
    235a:	20 e0       	ldi	r18, 0x00	; 0
    235c:	3f ef       	ldi	r19, 0xFF	; 255
    235e:	4f e7       	ldi	r20, 0x7F	; 127
    2360:	57 e4       	ldi	r21, 0x47	; 71
    2362:	60 81       	ld	r22, Z
    2364:	71 81       	ldd	r23, Z+1	; 0x01
    2366:	82 81       	ldd	r24, Z+2	; 0x02
    2368:	93 81       	ldd	r25, Z+3	; 0x03
    236a:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    236e:	18 16       	cp	r1, r24
    2370:	0c f0       	brlt	.+2      	; 0x2374 <__stack+0x1f15>
    2372:	43 c0       	rjmp	.+134    	; 0x23fa <__stack+0x1f9b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2374:	fe 01       	movw	r30, r28
    2376:	ef 5a       	subi	r30, 0xAF	; 175
    2378:	ff 4f       	sbci	r31, 0xFF	; 255
    237a:	20 e0       	ldi	r18, 0x00	; 0
    237c:	30 e0       	ldi	r19, 0x00	; 0
    237e:	40 e2       	ldi	r20, 0x20	; 32
    2380:	51 e4       	ldi	r21, 0x41	; 65
    2382:	60 81       	ld	r22, Z
    2384:	71 81       	ldd	r23, Z+1	; 0x01
    2386:	82 81       	ldd	r24, Z+2	; 0x02
    2388:	93 81       	ldd	r25, Z+3	; 0x03
    238a:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    238e:	dc 01       	movw	r26, r24
    2390:	cb 01       	movw	r24, r22
    2392:	8e 01       	movw	r16, r28
    2394:	05 5b       	subi	r16, 0xB5	; 181
    2396:	1f 4f       	sbci	r17, 0xFF	; 255
    2398:	bc 01       	movw	r22, r24
    239a:	cd 01       	movw	r24, r26
    239c:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    23a0:	dc 01       	movw	r26, r24
    23a2:	cb 01       	movw	r24, r22
    23a4:	f8 01       	movw	r30, r16
    23a6:	91 83       	std	Z+1, r25	; 0x01
    23a8:	80 83       	st	Z, r24
    23aa:	1f c0       	rjmp	.+62     	; 0x23ea <__stack+0x1f8b>
    23ac:	fe 01       	movw	r30, r28
    23ae:	e7 5b       	subi	r30, 0xB7	; 183
    23b0:	ff 4f       	sbci	r31, 0xFF	; 255
    23b2:	89 e1       	ldi	r24, 0x19	; 25
    23b4:	90 e0       	ldi	r25, 0x00	; 0
    23b6:	91 83       	std	Z+1, r25	; 0x01
    23b8:	80 83       	st	Z, r24
    23ba:	fe 01       	movw	r30, r28
    23bc:	e7 5b       	subi	r30, 0xB7	; 183
    23be:	ff 4f       	sbci	r31, 0xFF	; 255
    23c0:	80 81       	ld	r24, Z
    23c2:	91 81       	ldd	r25, Z+1	; 0x01
    23c4:	01 97       	sbiw	r24, 0x01	; 1
    23c6:	f1 f7       	brne	.-4      	; 0x23c4 <__stack+0x1f65>
    23c8:	fe 01       	movw	r30, r28
    23ca:	e7 5b       	subi	r30, 0xB7	; 183
    23cc:	ff 4f       	sbci	r31, 0xFF	; 255
    23ce:	91 83       	std	Z+1, r25	; 0x01
    23d0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23d2:	de 01       	movw	r26, r28
    23d4:	a5 5b       	subi	r26, 0xB5	; 181
    23d6:	bf 4f       	sbci	r27, 0xFF	; 255
    23d8:	fe 01       	movw	r30, r28
    23da:	e5 5b       	subi	r30, 0xB5	; 181
    23dc:	ff 4f       	sbci	r31, 0xFF	; 255
    23de:	80 81       	ld	r24, Z
    23e0:	91 81       	ldd	r25, Z+1	; 0x01
    23e2:	01 97       	sbiw	r24, 0x01	; 1
    23e4:	11 96       	adiw	r26, 0x01	; 1
    23e6:	9c 93       	st	X, r25
    23e8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23ea:	fe 01       	movw	r30, r28
    23ec:	e5 5b       	subi	r30, 0xB5	; 181
    23ee:	ff 4f       	sbci	r31, 0xFF	; 255
    23f0:	80 81       	ld	r24, Z
    23f2:	91 81       	ldd	r25, Z+1	; 0x01
    23f4:	00 97       	sbiw	r24, 0x00	; 0
    23f6:	d1 f6       	brne	.-76     	; 0x23ac <__stack+0x1f4d>
    23f8:	27 c0       	rjmp	.+78     	; 0x2448 <__stack+0x1fe9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23fa:	8e 01       	movw	r16, r28
    23fc:	05 5b       	subi	r16, 0xB5	; 181
    23fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2400:	fe 01       	movw	r30, r28
    2402:	e3 5b       	subi	r30, 0xB3	; 179
    2404:	ff 4f       	sbci	r31, 0xFF	; 255
    2406:	60 81       	ld	r22, Z
    2408:	71 81       	ldd	r23, Z+1	; 0x01
    240a:	82 81       	ldd	r24, Z+2	; 0x02
    240c:	93 81       	ldd	r25, Z+3	; 0x03
    240e:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2412:	dc 01       	movw	r26, r24
    2414:	cb 01       	movw	r24, r22
    2416:	f8 01       	movw	r30, r16
    2418:	91 83       	std	Z+1, r25	; 0x01
    241a:	80 83       	st	Z, r24
    241c:	de 01       	movw	r26, r28
    241e:	a9 5b       	subi	r26, 0xB9	; 185
    2420:	bf 4f       	sbci	r27, 0xFF	; 255
    2422:	fe 01       	movw	r30, r28
    2424:	e5 5b       	subi	r30, 0xB5	; 181
    2426:	ff 4f       	sbci	r31, 0xFF	; 255
    2428:	80 81       	ld	r24, Z
    242a:	91 81       	ldd	r25, Z+1	; 0x01
    242c:	8d 93       	st	X+, r24
    242e:	9c 93       	st	X, r25
    2430:	fe 01       	movw	r30, r28
    2432:	e9 5b       	subi	r30, 0xB9	; 185
    2434:	ff 4f       	sbci	r31, 0xFF	; 255
    2436:	80 81       	ld	r24, Z
    2438:	91 81       	ldd	r25, Z+1	; 0x01
    243a:	01 97       	sbiw	r24, 0x01	; 1
    243c:	f1 f7       	brne	.-4      	; 0x243a <__stack+0x1fdb>
    243e:	fe 01       	movw	r30, r28
    2440:	e9 5b       	subi	r30, 0xB9	; 185
    2442:	ff 4f       	sbci	r31, 0xFF	; 255
    2444:	91 83       	std	Z+1, r25	; 0x01
    2446:	80 83       	st	Z, r24
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    2448:	a2 e3       	ldi	r26, 0x32	; 50
    244a:	b0 e0       	ldi	r27, 0x00	; 0
    244c:	e2 e3       	ldi	r30, 0x32	; 50
    244e:	f0 e0       	ldi	r31, 0x00	; 0
    2450:	80 81       	ld	r24, Z
    2452:	8d 7f       	andi	r24, 0xFD	; 253
    2454:	8c 93       	st	X, r24
    2456:	fe 01       	movw	r30, r28
    2458:	ed 5b       	subi	r30, 0xBD	; 189
    245a:	ff 4f       	sbci	r31, 0xFF	; 255
    245c:	80 e0       	ldi	r24, 0x00	; 0
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	a0 e8       	ldi	r26, 0x80	; 128
    2462:	bf e3       	ldi	r27, 0x3F	; 63
    2464:	80 83       	st	Z, r24
    2466:	91 83       	std	Z+1, r25	; 0x01
    2468:	a2 83       	std	Z+2, r26	; 0x02
    246a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    246c:	8e 01       	movw	r16, r28
    246e:	01 5c       	subi	r16, 0xC1	; 193
    2470:	1f 4f       	sbci	r17, 0xFF	; 255
    2472:	fe 01       	movw	r30, r28
    2474:	ed 5b       	subi	r30, 0xBD	; 189
    2476:	ff 4f       	sbci	r31, 0xFF	; 255
    2478:	20 e0       	ldi	r18, 0x00	; 0
    247a:	30 e0       	ldi	r19, 0x00	; 0
    247c:	4a e7       	ldi	r20, 0x7A	; 122
    247e:	53 e4       	ldi	r21, 0x43	; 67
    2480:	60 81       	ld	r22, Z
    2482:	71 81       	ldd	r23, Z+1	; 0x01
    2484:	82 81       	ldd	r24, Z+2	; 0x02
    2486:	93 81       	ldd	r25, Z+3	; 0x03
    2488:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    248c:	dc 01       	movw	r26, r24
    248e:	cb 01       	movw	r24, r22
    2490:	f8 01       	movw	r30, r16
    2492:	80 83       	st	Z, r24
    2494:	91 83       	std	Z+1, r25	; 0x01
    2496:	a2 83       	std	Z+2, r26	; 0x02
    2498:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    249a:	fe 01       	movw	r30, r28
    249c:	ff 96       	adiw	r30, 0x3f	; 63
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	40 e8       	ldi	r20, 0x80	; 128
    24a4:	5f e3       	ldi	r21, 0x3F	; 63
    24a6:	60 81       	ld	r22, Z
    24a8:	71 81       	ldd	r23, Z+1	; 0x01
    24aa:	82 81       	ldd	r24, Z+2	; 0x02
    24ac:	93 81       	ldd	r25, Z+3	; 0x03
    24ae:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    24b2:	88 23       	and	r24, r24
    24b4:	2c f4       	brge	.+10     	; 0x24c0 <__stack+0x2061>
		__ticks = 1;
    24b6:	81 e0       	ldi	r24, 0x01	; 1
    24b8:	90 e0       	ldi	r25, 0x00	; 0
    24ba:	9e af       	std	Y+62, r25	; 0x3e
    24bc:	8d af       	std	Y+61, r24	; 0x3d
    24be:	46 c0       	rjmp	.+140    	; 0x254c <__stack+0x20ed>
	else if (__tmp > 65535)
    24c0:	fe 01       	movw	r30, r28
    24c2:	ff 96       	adiw	r30, 0x3f	; 63
    24c4:	20 e0       	ldi	r18, 0x00	; 0
    24c6:	3f ef       	ldi	r19, 0xFF	; 255
    24c8:	4f e7       	ldi	r20, 0x7F	; 127
    24ca:	57 e4       	ldi	r21, 0x47	; 71
    24cc:	60 81       	ld	r22, Z
    24ce:	71 81       	ldd	r23, Z+1	; 0x01
    24d0:	82 81       	ldd	r24, Z+2	; 0x02
    24d2:	93 81       	ldd	r25, Z+3	; 0x03
    24d4:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    24d8:	18 16       	cp	r1, r24
    24da:	64 f5       	brge	.+88     	; 0x2534 <__stack+0x20d5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24dc:	fe 01       	movw	r30, r28
    24de:	ed 5b       	subi	r30, 0xBD	; 189
    24e0:	ff 4f       	sbci	r31, 0xFF	; 255
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	30 e0       	ldi	r19, 0x00	; 0
    24e6:	40 e2       	ldi	r20, 0x20	; 32
    24e8:	51 e4       	ldi	r21, 0x41	; 65
    24ea:	60 81       	ld	r22, Z
    24ec:	71 81       	ldd	r23, Z+1	; 0x01
    24ee:	82 81       	ldd	r24, Z+2	; 0x02
    24f0:	93 81       	ldd	r25, Z+3	; 0x03
    24f2:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    24f6:	dc 01       	movw	r26, r24
    24f8:	cb 01       	movw	r24, r22
    24fa:	bc 01       	movw	r22, r24
    24fc:	cd 01       	movw	r24, r26
    24fe:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2502:	dc 01       	movw	r26, r24
    2504:	cb 01       	movw	r24, r22
    2506:	9e af       	std	Y+62, r25	; 0x3e
    2508:	8d af       	std	Y+61, r24	; 0x3d
    250a:	0f c0       	rjmp	.+30     	; 0x252a <__stack+0x20cb>
    250c:	89 e1       	ldi	r24, 0x19	; 25
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	9c af       	std	Y+60, r25	; 0x3c
    2512:	8b af       	std	Y+59, r24	; 0x3b
    2514:	8b ad       	ldd	r24, Y+59	; 0x3b
    2516:	9c ad       	ldd	r25, Y+60	; 0x3c
    2518:	01 97       	sbiw	r24, 0x01	; 1
    251a:	f1 f7       	brne	.-4      	; 0x2518 <__stack+0x20b9>
    251c:	9c af       	std	Y+60, r25	; 0x3c
    251e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2520:	8d ad       	ldd	r24, Y+61	; 0x3d
    2522:	9e ad       	ldd	r25, Y+62	; 0x3e
    2524:	01 97       	sbiw	r24, 0x01	; 1
    2526:	9e af       	std	Y+62, r25	; 0x3e
    2528:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    252a:	8d ad       	ldd	r24, Y+61	; 0x3d
    252c:	9e ad       	ldd	r25, Y+62	; 0x3e
    252e:	00 97       	sbiw	r24, 0x00	; 0
    2530:	69 f7       	brne	.-38     	; 0x250c <__stack+0x20ad>
    2532:	16 c0       	rjmp	.+44     	; 0x2560 <__stack+0x2101>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2534:	fe 01       	movw	r30, r28
    2536:	ff 96       	adiw	r30, 0x3f	; 63
    2538:	60 81       	ld	r22, Z
    253a:	71 81       	ldd	r23, Z+1	; 0x01
    253c:	82 81       	ldd	r24, Z+2	; 0x02
    253e:	93 81       	ldd	r25, Z+3	; 0x03
    2540:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2544:	dc 01       	movw	r26, r24
    2546:	cb 01       	movw	r24, r22
    2548:	9e af       	std	Y+62, r25	; 0x3e
    254a:	8d af       	std	Y+61, r24	; 0x3d
    254c:	8d ad       	ldd	r24, Y+61	; 0x3d
    254e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2550:	9a af       	std	Y+58, r25	; 0x3a
    2552:	89 af       	std	Y+57, r24	; 0x39
    2554:	89 ad       	ldd	r24, Y+57	; 0x39
    2556:	9a ad       	ldd	r25, Y+58	; 0x3a
    2558:	01 97       	sbiw	r24, 0x01	; 1
    255a:	f1 f7       	brne	.-4      	; 0x2558 <__stack+0x20f9>
    255c:	9a af       	std	Y+58, r25	; 0x3a
    255e:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1);
   //---------- Enable Display/Cursor ----------
	LDP&=0<<LCD_D7|0<<LCD_D6|0<<LCD_D5|0<<LCD_D4; //Write 0x0
    2560:	e2 e3       	ldi	r30, 0x32	; 50
    2562:	f0 e0       	ldi	r31, 0x00	; 0
    2564:	80 81       	ld	r24, Z
    2566:	e2 e3       	ldi	r30, 0x32	; 50
    2568:	f0 e0       	ldi	r31, 0x00	; 0
    256a:	10 82       	st	Z, r1
	LCP|=1<<LCD_E|0<<LCD_RS;
    256c:	a2 e3       	ldi	r26, 0x32	; 50
    256e:	b0 e0       	ldi	r27, 0x00	; 0
    2570:	e2 e3       	ldi	r30, 0x32	; 50
    2572:	f0 e0       	ldi	r31, 0x00	; 0
    2574:	80 81       	ld	r24, Z
    2576:	82 60       	ori	r24, 0x02	; 2
    2578:	8c 93       	st	X, r24
    257a:	80 e0       	ldi	r24, 0x00	; 0
    257c:	90 e0       	ldi	r25, 0x00	; 0
    257e:	a0 e8       	ldi	r26, 0x80	; 128
    2580:	bf e3       	ldi	r27, 0x3F	; 63
    2582:	8d ab       	std	Y+53, r24	; 0x35
    2584:	9e ab       	std	Y+54, r25	; 0x36
    2586:	af ab       	std	Y+55, r26	; 0x37
    2588:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    258a:	20 e0       	ldi	r18, 0x00	; 0
    258c:	30 e0       	ldi	r19, 0x00	; 0
    258e:	4a e7       	ldi	r20, 0x7A	; 122
    2590:	53 e4       	ldi	r21, 0x43	; 67
    2592:	6d a9       	ldd	r22, Y+53	; 0x35
    2594:	7e a9       	ldd	r23, Y+54	; 0x36
    2596:	8f a9       	ldd	r24, Y+55	; 0x37
    2598:	98 ad       	ldd	r25, Y+56	; 0x38
    259a:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    259e:	dc 01       	movw	r26, r24
    25a0:	cb 01       	movw	r24, r22
    25a2:	89 ab       	std	Y+49, r24	; 0x31
    25a4:	9a ab       	std	Y+50, r25	; 0x32
    25a6:	ab ab       	std	Y+51, r26	; 0x33
    25a8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    25aa:	20 e0       	ldi	r18, 0x00	; 0
    25ac:	30 e0       	ldi	r19, 0x00	; 0
    25ae:	40 e8       	ldi	r20, 0x80	; 128
    25b0:	5f e3       	ldi	r21, 0x3F	; 63
    25b2:	69 a9       	ldd	r22, Y+49	; 0x31
    25b4:	7a a9       	ldd	r23, Y+50	; 0x32
    25b6:	8b a9       	ldd	r24, Y+51	; 0x33
    25b8:	9c a9       	ldd	r25, Y+52	; 0x34
    25ba:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    25be:	88 23       	and	r24, r24
    25c0:	2c f4       	brge	.+10     	; 0x25cc <__stack+0x216d>
		__ticks = 1;
    25c2:	81 e0       	ldi	r24, 0x01	; 1
    25c4:	90 e0       	ldi	r25, 0x00	; 0
    25c6:	98 ab       	std	Y+48, r25	; 0x30
    25c8:	8f a7       	std	Y+47, r24	; 0x2f
    25ca:	3f c0       	rjmp	.+126    	; 0x264a <__stack+0x21eb>
	else if (__tmp > 65535)
    25cc:	20 e0       	ldi	r18, 0x00	; 0
    25ce:	3f ef       	ldi	r19, 0xFF	; 255
    25d0:	4f e7       	ldi	r20, 0x7F	; 127
    25d2:	57 e4       	ldi	r21, 0x47	; 71
    25d4:	69 a9       	ldd	r22, Y+49	; 0x31
    25d6:	7a a9       	ldd	r23, Y+50	; 0x32
    25d8:	8b a9       	ldd	r24, Y+51	; 0x33
    25da:	9c a9       	ldd	r25, Y+52	; 0x34
    25dc:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    25e0:	18 16       	cp	r1, r24
    25e2:	4c f5       	brge	.+82     	; 0x2636 <__stack+0x21d7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25e4:	20 e0       	ldi	r18, 0x00	; 0
    25e6:	30 e0       	ldi	r19, 0x00	; 0
    25e8:	40 e2       	ldi	r20, 0x20	; 32
    25ea:	51 e4       	ldi	r21, 0x41	; 65
    25ec:	6d a9       	ldd	r22, Y+53	; 0x35
    25ee:	7e a9       	ldd	r23, Y+54	; 0x36
    25f0:	8f a9       	ldd	r24, Y+55	; 0x37
    25f2:	98 ad       	ldd	r25, Y+56	; 0x38
    25f4:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    25f8:	dc 01       	movw	r26, r24
    25fa:	cb 01       	movw	r24, r22
    25fc:	bc 01       	movw	r22, r24
    25fe:	cd 01       	movw	r24, r26
    2600:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2604:	dc 01       	movw	r26, r24
    2606:	cb 01       	movw	r24, r22
    2608:	98 ab       	std	Y+48, r25	; 0x30
    260a:	8f a7       	std	Y+47, r24	; 0x2f
    260c:	0f c0       	rjmp	.+30     	; 0x262c <__stack+0x21cd>
    260e:	89 e1       	ldi	r24, 0x19	; 25
    2610:	90 e0       	ldi	r25, 0x00	; 0
    2612:	9e a7       	std	Y+46, r25	; 0x2e
    2614:	8d a7       	std	Y+45, r24	; 0x2d
    2616:	8d a5       	ldd	r24, Y+45	; 0x2d
    2618:	9e a5       	ldd	r25, Y+46	; 0x2e
    261a:	01 97       	sbiw	r24, 0x01	; 1
    261c:	f1 f7       	brne	.-4      	; 0x261a <__stack+0x21bb>
    261e:	9e a7       	std	Y+46, r25	; 0x2e
    2620:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2622:	8f a5       	ldd	r24, Y+47	; 0x2f
    2624:	98 a9       	ldd	r25, Y+48	; 0x30
    2626:	01 97       	sbiw	r24, 0x01	; 1
    2628:	98 ab       	std	Y+48, r25	; 0x30
    262a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    262c:	8f a5       	ldd	r24, Y+47	; 0x2f
    262e:	98 a9       	ldd	r25, Y+48	; 0x30
    2630:	00 97       	sbiw	r24, 0x00	; 0
    2632:	69 f7       	brne	.-38     	; 0x260e <__stack+0x21af>
    2634:	14 c0       	rjmp	.+40     	; 0x265e <__stack+0x21ff>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2636:	69 a9       	ldd	r22, Y+49	; 0x31
    2638:	7a a9       	ldd	r23, Y+50	; 0x32
    263a:	8b a9       	ldd	r24, Y+51	; 0x33
    263c:	9c a9       	ldd	r25, Y+52	; 0x34
    263e:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2642:	dc 01       	movw	r26, r24
    2644:	cb 01       	movw	r24, r22
    2646:	98 ab       	std	Y+48, r25	; 0x30
    2648:	8f a7       	std	Y+47, r24	; 0x2f
    264a:	8f a5       	ldd	r24, Y+47	; 0x2f
    264c:	98 a9       	ldd	r25, Y+48	; 0x30
    264e:	9c a7       	std	Y+44, r25	; 0x2c
    2650:	8b a7       	std	Y+43, r24	; 0x2b
    2652:	8b a5       	ldd	r24, Y+43	; 0x2b
    2654:	9c a5       	ldd	r25, Y+44	; 0x2c
    2656:	01 97       	sbiw	r24, 0x01	; 1
    2658:	f1 f7       	brne	.-4      	; 0x2656 <__stack+0x21f7>
    265a:	9c a7       	std	Y+44, r25	; 0x2c
    265c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    265e:	a2 e3       	ldi	r26, 0x32	; 50
    2660:	b0 e0       	ldi	r27, 0x00	; 0
    2662:	e2 e3       	ldi	r30, 0x32	; 50
    2664:	f0 e0       	ldi	r31, 0x00	; 0
    2666:	80 81       	ld	r24, Z
    2668:	8d 7f       	andi	r24, 0xFD	; 253
    266a:	8c 93       	st	X, r24
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	a0 e8       	ldi	r26, 0x80	; 128
    2672:	bf e3       	ldi	r27, 0x3F	; 63
    2674:	8f a3       	std	Y+39, r24	; 0x27
    2676:	98 a7       	std	Y+40, r25	; 0x28
    2678:	a9 a7       	std	Y+41, r26	; 0x29
    267a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    267c:	20 e0       	ldi	r18, 0x00	; 0
    267e:	30 e0       	ldi	r19, 0x00	; 0
    2680:	4a e7       	ldi	r20, 0x7A	; 122
    2682:	53 e4       	ldi	r21, 0x43	; 67
    2684:	6f a1       	ldd	r22, Y+39	; 0x27
    2686:	78 a5       	ldd	r23, Y+40	; 0x28
    2688:	89 a5       	ldd	r24, Y+41	; 0x29
    268a:	9a a5       	ldd	r25, Y+42	; 0x2a
    268c:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2690:	dc 01       	movw	r26, r24
    2692:	cb 01       	movw	r24, r22
    2694:	8b a3       	std	Y+35, r24	; 0x23
    2696:	9c a3       	std	Y+36, r25	; 0x24
    2698:	ad a3       	std	Y+37, r26	; 0x25
    269a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    269c:	20 e0       	ldi	r18, 0x00	; 0
    269e:	30 e0       	ldi	r19, 0x00	; 0
    26a0:	40 e8       	ldi	r20, 0x80	; 128
    26a2:	5f e3       	ldi	r21, 0x3F	; 63
    26a4:	6b a1       	ldd	r22, Y+35	; 0x23
    26a6:	7c a1       	ldd	r23, Y+36	; 0x24
    26a8:	8d a1       	ldd	r24, Y+37	; 0x25
    26aa:	9e a1       	ldd	r25, Y+38	; 0x26
    26ac:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    26b0:	88 23       	and	r24, r24
    26b2:	2c f4       	brge	.+10     	; 0x26be <__stack+0x225f>
		__ticks = 1;
    26b4:	81 e0       	ldi	r24, 0x01	; 1
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	9a a3       	std	Y+34, r25	; 0x22
    26ba:	89 a3       	std	Y+33, r24	; 0x21
    26bc:	3f c0       	rjmp	.+126    	; 0x273c <__stack+0x22dd>
	else if (__tmp > 65535)
    26be:	20 e0       	ldi	r18, 0x00	; 0
    26c0:	3f ef       	ldi	r19, 0xFF	; 255
    26c2:	4f e7       	ldi	r20, 0x7F	; 127
    26c4:	57 e4       	ldi	r21, 0x47	; 71
    26c6:	6b a1       	ldd	r22, Y+35	; 0x23
    26c8:	7c a1       	ldd	r23, Y+36	; 0x24
    26ca:	8d a1       	ldd	r24, Y+37	; 0x25
    26cc:	9e a1       	ldd	r25, Y+38	; 0x26
    26ce:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    26d2:	18 16       	cp	r1, r24
    26d4:	4c f5       	brge	.+82     	; 0x2728 <__stack+0x22c9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26d6:	20 e0       	ldi	r18, 0x00	; 0
    26d8:	30 e0       	ldi	r19, 0x00	; 0
    26da:	40 e2       	ldi	r20, 0x20	; 32
    26dc:	51 e4       	ldi	r21, 0x41	; 65
    26de:	6f a1       	ldd	r22, Y+39	; 0x27
    26e0:	78 a5       	ldd	r23, Y+40	; 0x28
    26e2:	89 a5       	ldd	r24, Y+41	; 0x29
    26e4:	9a a5       	ldd	r25, Y+42	; 0x2a
    26e6:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    26ea:	dc 01       	movw	r26, r24
    26ec:	cb 01       	movw	r24, r22
    26ee:	bc 01       	movw	r22, r24
    26f0:	cd 01       	movw	r24, r26
    26f2:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    26f6:	dc 01       	movw	r26, r24
    26f8:	cb 01       	movw	r24, r22
    26fa:	9a a3       	std	Y+34, r25	; 0x22
    26fc:	89 a3       	std	Y+33, r24	; 0x21
    26fe:	0f c0       	rjmp	.+30     	; 0x271e <__stack+0x22bf>
    2700:	89 e1       	ldi	r24, 0x19	; 25
    2702:	90 e0       	ldi	r25, 0x00	; 0
    2704:	98 a3       	std	Y+32, r25	; 0x20
    2706:	8f 8f       	std	Y+31, r24	; 0x1f
    2708:	8f 8d       	ldd	r24, Y+31	; 0x1f
    270a:	98 a1       	ldd	r25, Y+32	; 0x20
    270c:	01 97       	sbiw	r24, 0x01	; 1
    270e:	f1 f7       	brne	.-4      	; 0x270c <__stack+0x22ad>
    2710:	98 a3       	std	Y+32, r25	; 0x20
    2712:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2714:	89 a1       	ldd	r24, Y+33	; 0x21
    2716:	9a a1       	ldd	r25, Y+34	; 0x22
    2718:	01 97       	sbiw	r24, 0x01	; 1
    271a:	9a a3       	std	Y+34, r25	; 0x22
    271c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    271e:	89 a1       	ldd	r24, Y+33	; 0x21
    2720:	9a a1       	ldd	r25, Y+34	; 0x22
    2722:	00 97       	sbiw	r24, 0x00	; 0
    2724:	69 f7       	brne	.-38     	; 0x2700 <__stack+0x22a1>
    2726:	14 c0       	rjmp	.+40     	; 0x2750 <__stack+0x22f1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2728:	6b a1       	ldd	r22, Y+35	; 0x23
    272a:	7c a1       	ldd	r23, Y+36	; 0x24
    272c:	8d a1       	ldd	r24, Y+37	; 0x25
    272e:	9e a1       	ldd	r25, Y+38	; 0x26
    2730:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2734:	dc 01       	movw	r26, r24
    2736:	cb 01       	movw	r24, r22
    2738:	9a a3       	std	Y+34, r25	; 0x22
    273a:	89 a3       	std	Y+33, r24	; 0x21
    273c:	89 a1       	ldd	r24, Y+33	; 0x21
    273e:	9a a1       	ldd	r25, Y+34	; 0x22
    2740:	9e 8f       	std	Y+30, r25	; 0x1e
    2742:	8d 8f       	std	Y+29, r24	; 0x1d
    2744:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2746:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2748:	01 97       	sbiw	r24, 0x01	; 1
    274a:	f1 f7       	brne	.-4      	; 0x2748 <__stack+0x22e9>
    274c:	9e 8f       	std	Y+30, r25	; 0x1e
    274e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LDP|=1<<LCD_D7|1<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //Write 0xF - Display on, cursor on, blink on
    2750:	a2 e3       	ldi	r26, 0x32	; 50
    2752:	b0 e0       	ldi	r27, 0x00	; 0
    2754:	e2 e3       	ldi	r30, 0x32	; 50
    2756:	f0 e0       	ldi	r31, 0x00	; 0
    2758:	80 81       	ld	r24, Z
    275a:	8c 63       	ori	r24, 0x3C	; 60
    275c:	8c 93       	st	X, r24
	LCP|=1<<LCD_E|0<<LCD_RS;
    275e:	a2 e3       	ldi	r26, 0x32	; 50
    2760:	b0 e0       	ldi	r27, 0x00	; 0
    2762:	e2 e3       	ldi	r30, 0x32	; 50
    2764:	f0 e0       	ldi	r31, 0x00	; 0
    2766:	80 81       	ld	r24, Z
    2768:	82 60       	ori	r24, 0x02	; 2
    276a:	8c 93       	st	X, r24
    276c:	80 e0       	ldi	r24, 0x00	; 0
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	a0 e8       	ldi	r26, 0x80	; 128
    2772:	bf e3       	ldi	r27, 0x3F	; 63
    2774:	89 8f       	std	Y+25, r24	; 0x19
    2776:	9a 8f       	std	Y+26, r25	; 0x1a
    2778:	ab 8f       	std	Y+27, r26	; 0x1b
    277a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    277c:	20 e0       	ldi	r18, 0x00	; 0
    277e:	30 e0       	ldi	r19, 0x00	; 0
    2780:	4a e7       	ldi	r20, 0x7A	; 122
    2782:	53 e4       	ldi	r21, 0x43	; 67
    2784:	69 8d       	ldd	r22, Y+25	; 0x19
    2786:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2788:	8b 8d       	ldd	r24, Y+27	; 0x1b
    278a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    278c:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2790:	dc 01       	movw	r26, r24
    2792:	cb 01       	movw	r24, r22
    2794:	8d 8b       	std	Y+21, r24	; 0x15
    2796:	9e 8b       	std	Y+22, r25	; 0x16
    2798:	af 8b       	std	Y+23, r26	; 0x17
    279a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    279c:	20 e0       	ldi	r18, 0x00	; 0
    279e:	30 e0       	ldi	r19, 0x00	; 0
    27a0:	40 e8       	ldi	r20, 0x80	; 128
    27a2:	5f e3       	ldi	r21, 0x3F	; 63
    27a4:	6d 89       	ldd	r22, Y+21	; 0x15
    27a6:	7e 89       	ldd	r23, Y+22	; 0x16
    27a8:	8f 89       	ldd	r24, Y+23	; 0x17
    27aa:	98 8d       	ldd	r25, Y+24	; 0x18
    27ac:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    27b0:	88 23       	and	r24, r24
    27b2:	2c f4       	brge	.+10     	; 0x27be <__stack+0x235f>
		__ticks = 1;
    27b4:	81 e0       	ldi	r24, 0x01	; 1
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	9c 8b       	std	Y+20, r25	; 0x14
    27ba:	8b 8b       	std	Y+19, r24	; 0x13
    27bc:	3f c0       	rjmp	.+126    	; 0x283c <__stack+0x23dd>
	else if (__tmp > 65535)
    27be:	20 e0       	ldi	r18, 0x00	; 0
    27c0:	3f ef       	ldi	r19, 0xFF	; 255
    27c2:	4f e7       	ldi	r20, 0x7F	; 127
    27c4:	57 e4       	ldi	r21, 0x47	; 71
    27c6:	6d 89       	ldd	r22, Y+21	; 0x15
    27c8:	7e 89       	ldd	r23, Y+22	; 0x16
    27ca:	8f 89       	ldd	r24, Y+23	; 0x17
    27cc:	98 8d       	ldd	r25, Y+24	; 0x18
    27ce:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    27d2:	18 16       	cp	r1, r24
    27d4:	4c f5       	brge	.+82     	; 0x2828 <__stack+0x23c9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27d6:	20 e0       	ldi	r18, 0x00	; 0
    27d8:	30 e0       	ldi	r19, 0x00	; 0
    27da:	40 e2       	ldi	r20, 0x20	; 32
    27dc:	51 e4       	ldi	r21, 0x41	; 65
    27de:	69 8d       	ldd	r22, Y+25	; 0x19
    27e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    27e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    27e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    27e6:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    27ea:	dc 01       	movw	r26, r24
    27ec:	cb 01       	movw	r24, r22
    27ee:	bc 01       	movw	r22, r24
    27f0:	cd 01       	movw	r24, r26
    27f2:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    27f6:	dc 01       	movw	r26, r24
    27f8:	cb 01       	movw	r24, r22
    27fa:	9c 8b       	std	Y+20, r25	; 0x14
    27fc:	8b 8b       	std	Y+19, r24	; 0x13
    27fe:	0f c0       	rjmp	.+30     	; 0x281e <__stack+0x23bf>
    2800:	89 e1       	ldi	r24, 0x19	; 25
    2802:	90 e0       	ldi	r25, 0x00	; 0
    2804:	9a 8b       	std	Y+18, r25	; 0x12
    2806:	89 8b       	std	Y+17, r24	; 0x11
    2808:	89 89       	ldd	r24, Y+17	; 0x11
    280a:	9a 89       	ldd	r25, Y+18	; 0x12
    280c:	01 97       	sbiw	r24, 0x01	; 1
    280e:	f1 f7       	brne	.-4      	; 0x280c <__stack+0x23ad>
    2810:	9a 8b       	std	Y+18, r25	; 0x12
    2812:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2814:	8b 89       	ldd	r24, Y+19	; 0x13
    2816:	9c 89       	ldd	r25, Y+20	; 0x14
    2818:	01 97       	sbiw	r24, 0x01	; 1
    281a:	9c 8b       	std	Y+20, r25	; 0x14
    281c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    281e:	8b 89       	ldd	r24, Y+19	; 0x13
    2820:	9c 89       	ldd	r25, Y+20	; 0x14
    2822:	00 97       	sbiw	r24, 0x00	; 0
    2824:	69 f7       	brne	.-38     	; 0x2800 <__stack+0x23a1>
    2826:	14 c0       	rjmp	.+40     	; 0x2850 <__stack+0x23f1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2828:	6d 89       	ldd	r22, Y+21	; 0x15
    282a:	7e 89       	ldd	r23, Y+22	; 0x16
    282c:	8f 89       	ldd	r24, Y+23	; 0x17
    282e:	98 8d       	ldd	r25, Y+24	; 0x18
    2830:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2834:	dc 01       	movw	r26, r24
    2836:	cb 01       	movw	r24, r22
    2838:	9c 8b       	std	Y+20, r25	; 0x14
    283a:	8b 8b       	std	Y+19, r24	; 0x13
    283c:	8b 89       	ldd	r24, Y+19	; 0x13
    283e:	9c 89       	ldd	r25, Y+20	; 0x14
    2840:	98 8b       	std	Y+16, r25	; 0x10
    2842:	8f 87       	std	Y+15, r24	; 0x0f
    2844:	8f 85       	ldd	r24, Y+15	; 0x0f
    2846:	98 89       	ldd	r25, Y+16	; 0x10
    2848:	01 97       	sbiw	r24, 0x01	; 1
    284a:	f1 f7       	brne	.-4      	; 0x2848 <__stack+0x23e9>
    284c:	98 8b       	std	Y+16, r25	; 0x10
    284e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    2850:	a2 e3       	ldi	r26, 0x32	; 50
    2852:	b0 e0       	ldi	r27, 0x00	; 0
    2854:	e2 e3       	ldi	r30, 0x32	; 50
    2856:	f0 e0       	ldi	r31, 0x00	; 0
    2858:	80 81       	ld	r24, Z
    285a:	8d 7f       	andi	r24, 0xFD	; 253
    285c:	8c 93       	st	X, r24
    285e:	80 e0       	ldi	r24, 0x00	; 0
    2860:	90 e0       	ldi	r25, 0x00	; 0
    2862:	a0 e8       	ldi	r26, 0x80	; 128
    2864:	bf e3       	ldi	r27, 0x3F	; 63
    2866:	8b 87       	std	Y+11, r24	; 0x0b
    2868:	9c 87       	std	Y+12, r25	; 0x0c
    286a:	ad 87       	std	Y+13, r26	; 0x0d
    286c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    286e:	20 e0       	ldi	r18, 0x00	; 0
    2870:	30 e0       	ldi	r19, 0x00	; 0
    2872:	4a e7       	ldi	r20, 0x7A	; 122
    2874:	53 e4       	ldi	r21, 0x43	; 67
    2876:	6b 85       	ldd	r22, Y+11	; 0x0b
    2878:	7c 85       	ldd	r23, Y+12	; 0x0c
    287a:	8d 85       	ldd	r24, Y+13	; 0x0d
    287c:	9e 85       	ldd	r25, Y+14	; 0x0e
    287e:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2882:	dc 01       	movw	r26, r24
    2884:	cb 01       	movw	r24, r22
    2886:	8f 83       	std	Y+7, r24	; 0x07
    2888:	98 87       	std	Y+8, r25	; 0x08
    288a:	a9 87       	std	Y+9, r26	; 0x09
    288c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    288e:	20 e0       	ldi	r18, 0x00	; 0
    2890:	30 e0       	ldi	r19, 0x00	; 0
    2892:	40 e8       	ldi	r20, 0x80	; 128
    2894:	5f e3       	ldi	r21, 0x3F	; 63
    2896:	6f 81       	ldd	r22, Y+7	; 0x07
    2898:	78 85       	ldd	r23, Y+8	; 0x08
    289a:	89 85       	ldd	r24, Y+9	; 0x09
    289c:	9a 85       	ldd	r25, Y+10	; 0x0a
    289e:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    28a2:	88 23       	and	r24, r24
    28a4:	2c f4       	brge	.+10     	; 0x28b0 <__stack+0x2451>
		__ticks = 1;
    28a6:	81 e0       	ldi	r24, 0x01	; 1
    28a8:	90 e0       	ldi	r25, 0x00	; 0
    28aa:	9e 83       	std	Y+6, r25	; 0x06
    28ac:	8d 83       	std	Y+5, r24	; 0x05
    28ae:	3f c0       	rjmp	.+126    	; 0x292e <__stack+0x24cf>
	else if (__tmp > 65535)
    28b0:	20 e0       	ldi	r18, 0x00	; 0
    28b2:	3f ef       	ldi	r19, 0xFF	; 255
    28b4:	4f e7       	ldi	r20, 0x7F	; 127
    28b6:	57 e4       	ldi	r21, 0x47	; 71
    28b8:	6f 81       	ldd	r22, Y+7	; 0x07
    28ba:	78 85       	ldd	r23, Y+8	; 0x08
    28bc:	89 85       	ldd	r24, Y+9	; 0x09
    28be:	9a 85       	ldd	r25, Y+10	; 0x0a
    28c0:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    28c4:	18 16       	cp	r1, r24
    28c6:	4c f5       	brge	.+82     	; 0x291a <__stack+0x24bb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28c8:	20 e0       	ldi	r18, 0x00	; 0
    28ca:	30 e0       	ldi	r19, 0x00	; 0
    28cc:	40 e2       	ldi	r20, 0x20	; 32
    28ce:	51 e4       	ldi	r21, 0x41	; 65
    28d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    28d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    28d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    28d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    28d8:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    28dc:	dc 01       	movw	r26, r24
    28de:	cb 01       	movw	r24, r22
    28e0:	bc 01       	movw	r22, r24
    28e2:	cd 01       	movw	r24, r26
    28e4:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    28e8:	dc 01       	movw	r26, r24
    28ea:	cb 01       	movw	r24, r22
    28ec:	9e 83       	std	Y+6, r25	; 0x06
    28ee:	8d 83       	std	Y+5, r24	; 0x05
    28f0:	0f c0       	rjmp	.+30     	; 0x2910 <__stack+0x24b1>
    28f2:	89 e1       	ldi	r24, 0x19	; 25
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	9c 83       	std	Y+4, r25	; 0x04
    28f8:	8b 83       	std	Y+3, r24	; 0x03
    28fa:	8b 81       	ldd	r24, Y+3	; 0x03
    28fc:	9c 81       	ldd	r25, Y+4	; 0x04
    28fe:	01 97       	sbiw	r24, 0x01	; 1
    2900:	f1 f7       	brne	.-4      	; 0x28fe <__stack+0x249f>
    2902:	9c 83       	std	Y+4, r25	; 0x04
    2904:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2906:	8d 81       	ldd	r24, Y+5	; 0x05
    2908:	9e 81       	ldd	r25, Y+6	; 0x06
    290a:	01 97       	sbiw	r24, 0x01	; 1
    290c:	9e 83       	std	Y+6, r25	; 0x06
    290e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2910:	8d 81       	ldd	r24, Y+5	; 0x05
    2912:	9e 81       	ldd	r25, Y+6	; 0x06
    2914:	00 97       	sbiw	r24, 0x00	; 0
    2916:	69 f7       	brne	.-38     	; 0x28f2 <__stack+0x2493>
    2918:	14 c0       	rjmp	.+40     	; 0x2942 <__stack+0x24e3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    291a:	6f 81       	ldd	r22, Y+7	; 0x07
    291c:	78 85       	ldd	r23, Y+8	; 0x08
    291e:	89 85       	ldd	r24, Y+9	; 0x09
    2920:	9a 85       	ldd	r25, Y+10	; 0x0a
    2922:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2926:	dc 01       	movw	r26, r24
    2928:	cb 01       	movw	r24, r22
    292a:	9e 83       	std	Y+6, r25	; 0x06
    292c:	8d 83       	std	Y+5, r24	; 0x05
    292e:	8d 81       	ldd	r24, Y+5	; 0x05
    2930:	9e 81       	ldd	r25, Y+6	; 0x06
    2932:	9a 83       	std	Y+2, r25	; 0x02
    2934:	89 83       	std	Y+1, r24	; 0x01
    2936:	89 81       	ldd	r24, Y+1	; 0x01
    2938:	9a 81       	ldd	r25, Y+2	; 0x02
    293a:	01 97       	sbiw	r24, 0x01	; 1
    293c:	f1 f7       	brne	.-4      	; 0x293a <__stack+0x24db>
    293e:	9a 83       	std	Y+2, r25	; 0x02
    2940:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    2942:	c6 56       	subi	r28, 0x66	; 102
    2944:	de 4f       	sbci	r29, 0xFE	; 254
    2946:	0f b6       	in	r0, 0x3f	; 63
    2948:	f8 94       	cli
    294a:	de bf       	out	0x3e, r29	; 62
    294c:	0f be       	out	0x3f, r0	; 63
    294e:	cd bf       	out	0x3d, r28	; 61
    2950:	cf 91       	pop	r28
    2952:	df 91       	pop	r29
    2954:	1f 91       	pop	r17
    2956:	0f 91       	pop	r16
    2958:	08 95       	ret

0000295a <LCDsendChar>:

//Sends Char to LCD
void LCDsendChar(uint8_t ch)
{
    295a:	df 93       	push	r29
    295c:	cf 93       	push	r28
    295e:	cd b7       	in	r28, 0x3d	; 61
    2960:	de b7       	in	r29, 0x3e	; 62
    2962:	eb 97       	sbiw	r28, 0x3b	; 59
    2964:	0f b6       	in	r0, 0x3f	; 63
    2966:	f8 94       	cli
    2968:	de bf       	out	0x3e, r29	; 62
    296a:	0f be       	out	0x3f, r0	; 63
    296c:	cd bf       	out	0x3d, r28	; 61
    296e:	89 af       	std	Y+57, r24	; 0x39
	//4 MSB bits
	LDP=((ch>>2)&0b00111100);
    2970:	e2 e3       	ldi	r30, 0x32	; 50
    2972:	f0 e0       	ldi	r31, 0x00	; 0
    2974:	89 ad       	ldd	r24, Y+57	; 0x39
    2976:	86 95       	lsr	r24
    2978:	86 95       	lsr	r24
    297a:	8c 73       	andi	r24, 0x3C	; 60
    297c:	80 83       	st	Z, r24
	LCP|=1<<LCD_RS|1<<LCD_E;
    297e:	a2 e3       	ldi	r26, 0x32	; 50
    2980:	b0 e0       	ldi	r27, 0x00	; 0
    2982:	e2 e3       	ldi	r30, 0x32	; 50
    2984:	f0 e0       	ldi	r31, 0x00	; 0
    2986:	80 81       	ld	r24, Z
    2988:	83 60       	ori	r24, 0x03	; 3
    298a:	8c 93       	st	X, r24
    298c:	80 e0       	ldi	r24, 0x00	; 0
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	a0 e8       	ldi	r26, 0x80	; 128
    2992:	bf e3       	ldi	r27, 0x3F	; 63
    2994:	8d ab       	std	Y+53, r24	; 0x35
    2996:	9e ab       	std	Y+54, r25	; 0x36
    2998:	af ab       	std	Y+55, r26	; 0x37
    299a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    299c:	20 e0       	ldi	r18, 0x00	; 0
    299e:	30 e0       	ldi	r19, 0x00	; 0
    29a0:	4a e7       	ldi	r20, 0x7A	; 122
    29a2:	53 e4       	ldi	r21, 0x43	; 67
    29a4:	6d a9       	ldd	r22, Y+53	; 0x35
    29a6:	7e a9       	ldd	r23, Y+54	; 0x36
    29a8:	8f a9       	ldd	r24, Y+55	; 0x37
    29aa:	98 ad       	ldd	r25, Y+56	; 0x38
    29ac:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    29b0:	dc 01       	movw	r26, r24
    29b2:	cb 01       	movw	r24, r22
    29b4:	89 ab       	std	Y+49, r24	; 0x31
    29b6:	9a ab       	std	Y+50, r25	; 0x32
    29b8:	ab ab       	std	Y+51, r26	; 0x33
    29ba:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    29bc:	20 e0       	ldi	r18, 0x00	; 0
    29be:	30 e0       	ldi	r19, 0x00	; 0
    29c0:	40 e8       	ldi	r20, 0x80	; 128
    29c2:	5f e3       	ldi	r21, 0x3F	; 63
    29c4:	69 a9       	ldd	r22, Y+49	; 0x31
    29c6:	7a a9       	ldd	r23, Y+50	; 0x32
    29c8:	8b a9       	ldd	r24, Y+51	; 0x33
    29ca:	9c a9       	ldd	r25, Y+52	; 0x34
    29cc:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    29d0:	88 23       	and	r24, r24
    29d2:	2c f4       	brge	.+10     	; 0x29de <LCDsendChar+0x84>
		__ticks = 1;
    29d4:	81 e0       	ldi	r24, 0x01	; 1
    29d6:	90 e0       	ldi	r25, 0x00	; 0
    29d8:	98 ab       	std	Y+48, r25	; 0x30
    29da:	8f a7       	std	Y+47, r24	; 0x2f
    29dc:	3f c0       	rjmp	.+126    	; 0x2a5c <LCDsendChar+0x102>
	else if (__tmp > 65535)
    29de:	20 e0       	ldi	r18, 0x00	; 0
    29e0:	3f ef       	ldi	r19, 0xFF	; 255
    29e2:	4f e7       	ldi	r20, 0x7F	; 127
    29e4:	57 e4       	ldi	r21, 0x47	; 71
    29e6:	69 a9       	ldd	r22, Y+49	; 0x31
    29e8:	7a a9       	ldd	r23, Y+50	; 0x32
    29ea:	8b a9       	ldd	r24, Y+51	; 0x33
    29ec:	9c a9       	ldd	r25, Y+52	; 0x34
    29ee:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    29f2:	18 16       	cp	r1, r24
    29f4:	4c f5       	brge	.+82     	; 0x2a48 <LCDsendChar+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29f6:	20 e0       	ldi	r18, 0x00	; 0
    29f8:	30 e0       	ldi	r19, 0x00	; 0
    29fa:	40 e2       	ldi	r20, 0x20	; 32
    29fc:	51 e4       	ldi	r21, 0x41	; 65
    29fe:	6d a9       	ldd	r22, Y+53	; 0x35
    2a00:	7e a9       	ldd	r23, Y+54	; 0x36
    2a02:	8f a9       	ldd	r24, Y+55	; 0x37
    2a04:	98 ad       	ldd	r25, Y+56	; 0x38
    2a06:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2a0a:	dc 01       	movw	r26, r24
    2a0c:	cb 01       	movw	r24, r22
    2a0e:	bc 01       	movw	r22, r24
    2a10:	cd 01       	movw	r24, r26
    2a12:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2a16:	dc 01       	movw	r26, r24
    2a18:	cb 01       	movw	r24, r22
    2a1a:	98 ab       	std	Y+48, r25	; 0x30
    2a1c:	8f a7       	std	Y+47, r24	; 0x2f
    2a1e:	0f c0       	rjmp	.+30     	; 0x2a3e <LCDsendChar+0xe4>
    2a20:	89 e1       	ldi	r24, 0x19	; 25
    2a22:	90 e0       	ldi	r25, 0x00	; 0
    2a24:	9e a7       	std	Y+46, r25	; 0x2e
    2a26:	8d a7       	std	Y+45, r24	; 0x2d
    2a28:	8d a5       	ldd	r24, Y+45	; 0x2d
    2a2a:	9e a5       	ldd	r25, Y+46	; 0x2e
    2a2c:	01 97       	sbiw	r24, 0x01	; 1
    2a2e:	f1 f7       	brne	.-4      	; 0x2a2c <LCDsendChar+0xd2>
    2a30:	9e a7       	std	Y+46, r25	; 0x2e
    2a32:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a34:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a36:	98 a9       	ldd	r25, Y+48	; 0x30
    2a38:	01 97       	sbiw	r24, 0x01	; 1
    2a3a:	98 ab       	std	Y+48, r25	; 0x30
    2a3c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a3e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a40:	98 a9       	ldd	r25, Y+48	; 0x30
    2a42:	00 97       	sbiw	r24, 0x00	; 0
    2a44:	69 f7       	brne	.-38     	; 0x2a20 <LCDsendChar+0xc6>
    2a46:	14 c0       	rjmp	.+40     	; 0x2a70 <LCDsendChar+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a48:	69 a9       	ldd	r22, Y+49	; 0x31
    2a4a:	7a a9       	ldd	r23, Y+50	; 0x32
    2a4c:	8b a9       	ldd	r24, Y+51	; 0x33
    2a4e:	9c a9       	ldd	r25, Y+52	; 0x34
    2a50:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2a54:	dc 01       	movw	r26, r24
    2a56:	cb 01       	movw	r24, r22
    2a58:	98 ab       	std	Y+48, r25	; 0x30
    2a5a:	8f a7       	std	Y+47, r24	; 0x2f
    2a5c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a5e:	98 a9       	ldd	r25, Y+48	; 0x30
    2a60:	9c a7       	std	Y+44, r25	; 0x2c
    2a62:	8b a7       	std	Y+43, r24	; 0x2b
    2a64:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a66:	9c a5       	ldd	r25, Y+44	; 0x2c
    2a68:	01 97       	sbiw	r24, 0x01	; 1
    2a6a:	f1 f7       	brne	.-4      	; 0x2a68 <LCDsendChar+0x10e>
    2a6c:	9c a7       	std	Y+44, r25	; 0x2c
    2a6e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCP&=0<<LCD_E|0<<LCD_RS;
    2a70:	e2 e3       	ldi	r30, 0x32	; 50
    2a72:	f0 e0       	ldi	r31, 0x00	; 0
    2a74:	80 81       	ld	r24, Z
    2a76:	e2 e3       	ldi	r30, 0x32	; 50
    2a78:	f0 e0       	ldi	r31, 0x00	; 0
    2a7a:	10 82       	st	Z, r1
    2a7c:	80 e0       	ldi	r24, 0x00	; 0
    2a7e:	90 e0       	ldi	r25, 0x00	; 0
    2a80:	a0 e8       	ldi	r26, 0x80	; 128
    2a82:	bf e3       	ldi	r27, 0x3F	; 63
    2a84:	8f a3       	std	Y+39, r24	; 0x27
    2a86:	98 a7       	std	Y+40, r25	; 0x28
    2a88:	a9 a7       	std	Y+41, r26	; 0x29
    2a8a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a8c:	20 e0       	ldi	r18, 0x00	; 0
    2a8e:	30 e0       	ldi	r19, 0x00	; 0
    2a90:	4a e7       	ldi	r20, 0x7A	; 122
    2a92:	53 e4       	ldi	r21, 0x43	; 67
    2a94:	6f a1       	ldd	r22, Y+39	; 0x27
    2a96:	78 a5       	ldd	r23, Y+40	; 0x28
    2a98:	89 a5       	ldd	r24, Y+41	; 0x29
    2a9a:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a9c:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2aa0:	dc 01       	movw	r26, r24
    2aa2:	cb 01       	movw	r24, r22
    2aa4:	8b a3       	std	Y+35, r24	; 0x23
    2aa6:	9c a3       	std	Y+36, r25	; 0x24
    2aa8:	ad a3       	std	Y+37, r26	; 0x25
    2aaa:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2aac:	20 e0       	ldi	r18, 0x00	; 0
    2aae:	30 e0       	ldi	r19, 0x00	; 0
    2ab0:	40 e8       	ldi	r20, 0x80	; 128
    2ab2:	5f e3       	ldi	r21, 0x3F	; 63
    2ab4:	6b a1       	ldd	r22, Y+35	; 0x23
    2ab6:	7c a1       	ldd	r23, Y+36	; 0x24
    2ab8:	8d a1       	ldd	r24, Y+37	; 0x25
    2aba:	9e a1       	ldd	r25, Y+38	; 0x26
    2abc:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    2ac0:	88 23       	and	r24, r24
    2ac2:	2c f4       	brge	.+10     	; 0x2ace <LCDsendChar+0x174>
		__ticks = 1;
    2ac4:	81 e0       	ldi	r24, 0x01	; 1
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	9a a3       	std	Y+34, r25	; 0x22
    2aca:	89 a3       	std	Y+33, r24	; 0x21
    2acc:	3f c0       	rjmp	.+126    	; 0x2b4c <LCDsendChar+0x1f2>
	else if (__tmp > 65535)
    2ace:	20 e0       	ldi	r18, 0x00	; 0
    2ad0:	3f ef       	ldi	r19, 0xFF	; 255
    2ad2:	4f e7       	ldi	r20, 0x7F	; 127
    2ad4:	57 e4       	ldi	r21, 0x47	; 71
    2ad6:	6b a1       	ldd	r22, Y+35	; 0x23
    2ad8:	7c a1       	ldd	r23, Y+36	; 0x24
    2ada:	8d a1       	ldd	r24, Y+37	; 0x25
    2adc:	9e a1       	ldd	r25, Y+38	; 0x26
    2ade:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    2ae2:	18 16       	cp	r1, r24
    2ae4:	4c f5       	brge	.+82     	; 0x2b38 <LCDsendChar+0x1de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ae6:	20 e0       	ldi	r18, 0x00	; 0
    2ae8:	30 e0       	ldi	r19, 0x00	; 0
    2aea:	40 e2       	ldi	r20, 0x20	; 32
    2aec:	51 e4       	ldi	r21, 0x41	; 65
    2aee:	6f a1       	ldd	r22, Y+39	; 0x27
    2af0:	78 a5       	ldd	r23, Y+40	; 0x28
    2af2:	89 a5       	ldd	r24, Y+41	; 0x29
    2af4:	9a a5       	ldd	r25, Y+42	; 0x2a
    2af6:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2afa:	dc 01       	movw	r26, r24
    2afc:	cb 01       	movw	r24, r22
    2afe:	bc 01       	movw	r22, r24
    2b00:	cd 01       	movw	r24, r26
    2b02:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2b06:	dc 01       	movw	r26, r24
    2b08:	cb 01       	movw	r24, r22
    2b0a:	9a a3       	std	Y+34, r25	; 0x22
    2b0c:	89 a3       	std	Y+33, r24	; 0x21
    2b0e:	0f c0       	rjmp	.+30     	; 0x2b2e <LCDsendChar+0x1d4>
    2b10:	89 e1       	ldi	r24, 0x19	; 25
    2b12:	90 e0       	ldi	r25, 0x00	; 0
    2b14:	98 a3       	std	Y+32, r25	; 0x20
    2b16:	8f 8f       	std	Y+31, r24	; 0x1f
    2b18:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2b1a:	98 a1       	ldd	r25, Y+32	; 0x20
    2b1c:	01 97       	sbiw	r24, 0x01	; 1
    2b1e:	f1 f7       	brne	.-4      	; 0x2b1c <LCDsendChar+0x1c2>
    2b20:	98 a3       	std	Y+32, r25	; 0x20
    2b22:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b24:	89 a1       	ldd	r24, Y+33	; 0x21
    2b26:	9a a1       	ldd	r25, Y+34	; 0x22
    2b28:	01 97       	sbiw	r24, 0x01	; 1
    2b2a:	9a a3       	std	Y+34, r25	; 0x22
    2b2c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b2e:	89 a1       	ldd	r24, Y+33	; 0x21
    2b30:	9a a1       	ldd	r25, Y+34	; 0x22
    2b32:	00 97       	sbiw	r24, 0x00	; 0
    2b34:	69 f7       	brne	.-38     	; 0x2b10 <LCDsendChar+0x1b6>
    2b36:	14 c0       	rjmp	.+40     	; 0x2b60 <LCDsendChar+0x206>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b38:	6b a1       	ldd	r22, Y+35	; 0x23
    2b3a:	7c a1       	ldd	r23, Y+36	; 0x24
    2b3c:	8d a1       	ldd	r24, Y+37	; 0x25
    2b3e:	9e a1       	ldd	r25, Y+38	; 0x26
    2b40:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2b44:	dc 01       	movw	r26, r24
    2b46:	cb 01       	movw	r24, r22
    2b48:	9a a3       	std	Y+34, r25	; 0x22
    2b4a:	89 a3       	std	Y+33, r24	; 0x21
    2b4c:	89 a1       	ldd	r24, Y+33	; 0x21
    2b4e:	9a a1       	ldd	r25, Y+34	; 0x22
    2b50:	9e 8f       	std	Y+30, r25	; 0x1e
    2b52:	8d 8f       	std	Y+29, r24	; 0x1d
    2b54:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b56:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2b58:	01 97       	sbiw	r24, 0x01	; 1
    2b5a:	f1 f7       	brne	.-4      	; 0x2b58 <LCDsendChar+0x1fe>
    2b5c:	9e 8f       	std	Y+30, r25	; 0x1e
    2b5e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
    //4 LSB bits
	LDP=((ch<<2)&0b00111100);
    2b60:	e2 e3       	ldi	r30, 0x32	; 50
    2b62:	f0 e0       	ldi	r31, 0x00	; 0
    2b64:	89 ad       	ldd	r24, Y+57	; 0x39
    2b66:	88 2f       	mov	r24, r24
    2b68:	90 e0       	ldi	r25, 0x00	; 0
    2b6a:	88 0f       	add	r24, r24
    2b6c:	99 1f       	adc	r25, r25
    2b6e:	88 0f       	add	r24, r24
    2b70:	99 1f       	adc	r25, r25
    2b72:	8c 73       	andi	r24, 0x3C	; 60
    2b74:	80 83       	st	Z, r24
	LCP|=1<<LCD_RS|1<<LCD_E;
    2b76:	a2 e3       	ldi	r26, 0x32	; 50
    2b78:	b0 e0       	ldi	r27, 0x00	; 0
    2b7a:	e2 e3       	ldi	r30, 0x32	; 50
    2b7c:	f0 e0       	ldi	r31, 0x00	; 0
    2b7e:	80 81       	ld	r24, Z
    2b80:	83 60       	ori	r24, 0x03	; 3
    2b82:	8c 93       	st	X, r24
    2b84:	80 e0       	ldi	r24, 0x00	; 0
    2b86:	90 e0       	ldi	r25, 0x00	; 0
    2b88:	a0 e8       	ldi	r26, 0x80	; 128
    2b8a:	bf e3       	ldi	r27, 0x3F	; 63
    2b8c:	89 8f       	std	Y+25, r24	; 0x19
    2b8e:	9a 8f       	std	Y+26, r25	; 0x1a
    2b90:	ab 8f       	std	Y+27, r26	; 0x1b
    2b92:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b94:	20 e0       	ldi	r18, 0x00	; 0
    2b96:	30 e0       	ldi	r19, 0x00	; 0
    2b98:	4a e7       	ldi	r20, 0x7A	; 122
    2b9a:	53 e4       	ldi	r21, 0x43	; 67
    2b9c:	69 8d       	ldd	r22, Y+25	; 0x19
    2b9e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ba0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ba2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ba4:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2ba8:	dc 01       	movw	r26, r24
    2baa:	cb 01       	movw	r24, r22
    2bac:	8d 8b       	std	Y+21, r24	; 0x15
    2bae:	9e 8b       	std	Y+22, r25	; 0x16
    2bb0:	af 8b       	std	Y+23, r26	; 0x17
    2bb2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2bb4:	20 e0       	ldi	r18, 0x00	; 0
    2bb6:	30 e0       	ldi	r19, 0x00	; 0
    2bb8:	40 e8       	ldi	r20, 0x80	; 128
    2bba:	5f e3       	ldi	r21, 0x3F	; 63
    2bbc:	6d 89       	ldd	r22, Y+21	; 0x15
    2bbe:	7e 89       	ldd	r23, Y+22	; 0x16
    2bc0:	8f 89       	ldd	r24, Y+23	; 0x17
    2bc2:	98 8d       	ldd	r25, Y+24	; 0x18
    2bc4:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    2bc8:	88 23       	and	r24, r24
    2bca:	2c f4       	brge	.+10     	; 0x2bd6 <LCDsendChar+0x27c>
		__ticks = 1;
    2bcc:	81 e0       	ldi	r24, 0x01	; 1
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	9c 8b       	std	Y+20, r25	; 0x14
    2bd2:	8b 8b       	std	Y+19, r24	; 0x13
    2bd4:	3f c0       	rjmp	.+126    	; 0x2c54 <LCDsendChar+0x2fa>
	else if (__tmp > 65535)
    2bd6:	20 e0       	ldi	r18, 0x00	; 0
    2bd8:	3f ef       	ldi	r19, 0xFF	; 255
    2bda:	4f e7       	ldi	r20, 0x7F	; 127
    2bdc:	57 e4       	ldi	r21, 0x47	; 71
    2bde:	6d 89       	ldd	r22, Y+21	; 0x15
    2be0:	7e 89       	ldd	r23, Y+22	; 0x16
    2be2:	8f 89       	ldd	r24, Y+23	; 0x17
    2be4:	98 8d       	ldd	r25, Y+24	; 0x18
    2be6:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    2bea:	18 16       	cp	r1, r24
    2bec:	4c f5       	brge	.+82     	; 0x2c40 <LCDsendChar+0x2e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bee:	20 e0       	ldi	r18, 0x00	; 0
    2bf0:	30 e0       	ldi	r19, 0x00	; 0
    2bf2:	40 e2       	ldi	r20, 0x20	; 32
    2bf4:	51 e4       	ldi	r21, 0x41	; 65
    2bf6:	69 8d       	ldd	r22, Y+25	; 0x19
    2bf8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2bfa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2bfc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2bfe:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2c02:	dc 01       	movw	r26, r24
    2c04:	cb 01       	movw	r24, r22
    2c06:	bc 01       	movw	r22, r24
    2c08:	cd 01       	movw	r24, r26
    2c0a:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2c0e:	dc 01       	movw	r26, r24
    2c10:	cb 01       	movw	r24, r22
    2c12:	9c 8b       	std	Y+20, r25	; 0x14
    2c14:	8b 8b       	std	Y+19, r24	; 0x13
    2c16:	0f c0       	rjmp	.+30     	; 0x2c36 <LCDsendChar+0x2dc>
    2c18:	89 e1       	ldi	r24, 0x19	; 25
    2c1a:	90 e0       	ldi	r25, 0x00	; 0
    2c1c:	9a 8b       	std	Y+18, r25	; 0x12
    2c1e:	89 8b       	std	Y+17, r24	; 0x11
    2c20:	89 89       	ldd	r24, Y+17	; 0x11
    2c22:	9a 89       	ldd	r25, Y+18	; 0x12
    2c24:	01 97       	sbiw	r24, 0x01	; 1
    2c26:	f1 f7       	brne	.-4      	; 0x2c24 <LCDsendChar+0x2ca>
    2c28:	9a 8b       	std	Y+18, r25	; 0x12
    2c2a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c2c:	8b 89       	ldd	r24, Y+19	; 0x13
    2c2e:	9c 89       	ldd	r25, Y+20	; 0x14
    2c30:	01 97       	sbiw	r24, 0x01	; 1
    2c32:	9c 8b       	std	Y+20, r25	; 0x14
    2c34:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c36:	8b 89       	ldd	r24, Y+19	; 0x13
    2c38:	9c 89       	ldd	r25, Y+20	; 0x14
    2c3a:	00 97       	sbiw	r24, 0x00	; 0
    2c3c:	69 f7       	brne	.-38     	; 0x2c18 <LCDsendChar+0x2be>
    2c3e:	14 c0       	rjmp	.+40     	; 0x2c68 <LCDsendChar+0x30e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c40:	6d 89       	ldd	r22, Y+21	; 0x15
    2c42:	7e 89       	ldd	r23, Y+22	; 0x16
    2c44:	8f 89       	ldd	r24, Y+23	; 0x17
    2c46:	98 8d       	ldd	r25, Y+24	; 0x18
    2c48:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2c4c:	dc 01       	movw	r26, r24
    2c4e:	cb 01       	movw	r24, r22
    2c50:	9c 8b       	std	Y+20, r25	; 0x14
    2c52:	8b 8b       	std	Y+19, r24	; 0x13
    2c54:	8b 89       	ldd	r24, Y+19	; 0x13
    2c56:	9c 89       	ldd	r25, Y+20	; 0x14
    2c58:	98 8b       	std	Y+16, r25	; 0x10
    2c5a:	8f 87       	std	Y+15, r24	; 0x0f
    2c5c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c5e:	98 89       	ldd	r25, Y+16	; 0x10
    2c60:	01 97       	sbiw	r24, 0x01	; 1
    2c62:	f1 f7       	brne	.-4      	; 0x2c60 <LCDsendChar+0x306>
    2c64:	98 8b       	std	Y+16, r25	; 0x10
    2c66:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCP&=0<<LCD_E|0<<LCD_RS;
    2c68:	e2 e3       	ldi	r30, 0x32	; 50
    2c6a:	f0 e0       	ldi	r31, 0x00	; 0
    2c6c:	80 81       	ld	r24, Z
    2c6e:	e2 e3       	ldi	r30, 0x32	; 50
    2c70:	f0 e0       	ldi	r31, 0x00	; 0
    2c72:	10 82       	st	Z, r1
    2c74:	80 e0       	ldi	r24, 0x00	; 0
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	a0 e8       	ldi	r26, 0x80	; 128
    2c7a:	bf e3       	ldi	r27, 0x3F	; 63
    2c7c:	8b 87       	std	Y+11, r24	; 0x0b
    2c7e:	9c 87       	std	Y+12, r25	; 0x0c
    2c80:	ad 87       	std	Y+13, r26	; 0x0d
    2c82:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c84:	20 e0       	ldi	r18, 0x00	; 0
    2c86:	30 e0       	ldi	r19, 0x00	; 0
    2c88:	4a e7       	ldi	r20, 0x7A	; 122
    2c8a:	53 e4       	ldi	r21, 0x43	; 67
    2c8c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c8e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c90:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c92:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c94:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2c98:	dc 01       	movw	r26, r24
    2c9a:	cb 01       	movw	r24, r22
    2c9c:	8f 83       	std	Y+7, r24	; 0x07
    2c9e:	98 87       	std	Y+8, r25	; 0x08
    2ca0:	a9 87       	std	Y+9, r26	; 0x09
    2ca2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ca4:	20 e0       	ldi	r18, 0x00	; 0
    2ca6:	30 e0       	ldi	r19, 0x00	; 0
    2ca8:	40 e8       	ldi	r20, 0x80	; 128
    2caa:	5f e3       	ldi	r21, 0x3F	; 63
    2cac:	6f 81       	ldd	r22, Y+7	; 0x07
    2cae:	78 85       	ldd	r23, Y+8	; 0x08
    2cb0:	89 85       	ldd	r24, Y+9	; 0x09
    2cb2:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cb4:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    2cb8:	88 23       	and	r24, r24
    2cba:	2c f4       	brge	.+10     	; 0x2cc6 <LCDsendChar+0x36c>
		__ticks = 1;
    2cbc:	81 e0       	ldi	r24, 0x01	; 1
    2cbe:	90 e0       	ldi	r25, 0x00	; 0
    2cc0:	9e 83       	std	Y+6, r25	; 0x06
    2cc2:	8d 83       	std	Y+5, r24	; 0x05
    2cc4:	3f c0       	rjmp	.+126    	; 0x2d44 <LCDsendChar+0x3ea>
	else if (__tmp > 65535)
    2cc6:	20 e0       	ldi	r18, 0x00	; 0
    2cc8:	3f ef       	ldi	r19, 0xFF	; 255
    2cca:	4f e7       	ldi	r20, 0x7F	; 127
    2ccc:	57 e4       	ldi	r21, 0x47	; 71
    2cce:	6f 81       	ldd	r22, Y+7	; 0x07
    2cd0:	78 85       	ldd	r23, Y+8	; 0x08
    2cd2:	89 85       	ldd	r24, Y+9	; 0x09
    2cd4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cd6:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    2cda:	18 16       	cp	r1, r24
    2cdc:	4c f5       	brge	.+82     	; 0x2d30 <LCDsendChar+0x3d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cde:	20 e0       	ldi	r18, 0x00	; 0
    2ce0:	30 e0       	ldi	r19, 0x00	; 0
    2ce2:	40 e2       	ldi	r20, 0x20	; 32
    2ce4:	51 e4       	ldi	r21, 0x41	; 65
    2ce6:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ce8:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cea:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cec:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cee:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2cf2:	dc 01       	movw	r26, r24
    2cf4:	cb 01       	movw	r24, r22
    2cf6:	bc 01       	movw	r22, r24
    2cf8:	cd 01       	movw	r24, r26
    2cfa:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2cfe:	dc 01       	movw	r26, r24
    2d00:	cb 01       	movw	r24, r22
    2d02:	9e 83       	std	Y+6, r25	; 0x06
    2d04:	8d 83       	std	Y+5, r24	; 0x05
    2d06:	0f c0       	rjmp	.+30     	; 0x2d26 <LCDsendChar+0x3cc>
    2d08:	89 e1       	ldi	r24, 0x19	; 25
    2d0a:	90 e0       	ldi	r25, 0x00	; 0
    2d0c:	9c 83       	std	Y+4, r25	; 0x04
    2d0e:	8b 83       	std	Y+3, r24	; 0x03
    2d10:	8b 81       	ldd	r24, Y+3	; 0x03
    2d12:	9c 81       	ldd	r25, Y+4	; 0x04
    2d14:	01 97       	sbiw	r24, 0x01	; 1
    2d16:	f1 f7       	brne	.-4      	; 0x2d14 <LCDsendChar+0x3ba>
    2d18:	9c 83       	std	Y+4, r25	; 0x04
    2d1a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d1c:	8d 81       	ldd	r24, Y+5	; 0x05
    2d1e:	9e 81       	ldd	r25, Y+6	; 0x06
    2d20:	01 97       	sbiw	r24, 0x01	; 1
    2d22:	9e 83       	std	Y+6, r25	; 0x06
    2d24:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d26:	8d 81       	ldd	r24, Y+5	; 0x05
    2d28:	9e 81       	ldd	r25, Y+6	; 0x06
    2d2a:	00 97       	sbiw	r24, 0x00	; 0
    2d2c:	69 f7       	brne	.-38     	; 0x2d08 <LCDsendChar+0x3ae>
    2d2e:	14 c0       	rjmp	.+40     	; 0x2d58 <LCDsendChar+0x3fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d30:	6f 81       	ldd	r22, Y+7	; 0x07
    2d32:	78 85       	ldd	r23, Y+8	; 0x08
    2d34:	89 85       	ldd	r24, Y+9	; 0x09
    2d36:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d38:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2d3c:	dc 01       	movw	r26, r24
    2d3e:	cb 01       	movw	r24, r22
    2d40:	9e 83       	std	Y+6, r25	; 0x06
    2d42:	8d 83       	std	Y+5, r24	; 0x05
    2d44:	8d 81       	ldd	r24, Y+5	; 0x05
    2d46:	9e 81       	ldd	r25, Y+6	; 0x06
    2d48:	9a 83       	std	Y+2, r25	; 0x02
    2d4a:	89 83       	std	Y+1, r24	; 0x01
    2d4c:	89 81       	ldd	r24, Y+1	; 0x01
    2d4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d50:	01 97       	sbiw	r24, 0x01	; 1
    2d52:	f1 f7       	brne	.-4      	; 0x2d50 <LCDsendChar+0x3f6>
    2d54:	9a 83       	std	Y+2, r25	; 0x02
    2d56:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    2d58:	eb 96       	adiw	r28, 0x3b	; 59
    2d5a:	0f b6       	in	r0, 0x3f	; 63
    2d5c:	f8 94       	cli
    2d5e:	de bf       	out	0x3e, r29	; 62
    2d60:	0f be       	out	0x3f, r0	; 63
    2d62:	cd bf       	out	0x3d, r28	; 61
    2d64:	cf 91       	pop	r28
    2d66:	df 91       	pop	r29
    2d68:	08 95       	ret

00002d6a <LCDsendCommand>:

//Sends Command to LCD
void LCDsendCommand(uint8_t cmd)
{
    2d6a:	df 93       	push	r29
    2d6c:	cf 93       	push	r28
    2d6e:	cd b7       	in	r28, 0x3d	; 61
    2d70:	de b7       	in	r29, 0x3e	; 62
    2d72:	e9 97       	sbiw	r28, 0x39	; 57
    2d74:	0f b6       	in	r0, 0x3f	; 63
    2d76:	f8 94       	cli
    2d78:	de bf       	out	0x3e, r29	; 62
    2d7a:	0f be       	out	0x3f, r0	; 63
    2d7c:	cd bf       	out	0x3d, r28	; 61
    2d7e:	89 af       	std	Y+57, r24	; 0x39
	//4 MSB bits
	LDP=((cmd>>2)&0b00111100);
    2d80:	e2 e3       	ldi	r30, 0x32	; 50
    2d82:	f0 e0       	ldi	r31, 0x00	; 0
    2d84:	89 ad       	ldd	r24, Y+57	; 0x39
    2d86:	86 95       	lsr	r24
    2d88:	86 95       	lsr	r24
    2d8a:	8c 73       	andi	r24, 0x3C	; 60
    2d8c:	80 83       	st	Z, r24
	LCP|=1<<LCD_E;
    2d8e:	a2 e3       	ldi	r26, 0x32	; 50
    2d90:	b0 e0       	ldi	r27, 0x00	; 0
    2d92:	e2 e3       	ldi	r30, 0x32	; 50
    2d94:	f0 e0       	ldi	r31, 0x00	; 0
    2d96:	80 81       	ld	r24, Z
    2d98:	82 60       	ori	r24, 0x02	; 2
    2d9a:	8c 93       	st	X, r24
    2d9c:	80 e0       	ldi	r24, 0x00	; 0
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	a0 e8       	ldi	r26, 0x80	; 128
    2da2:	bf e3       	ldi	r27, 0x3F	; 63
    2da4:	8d ab       	std	Y+53, r24	; 0x35
    2da6:	9e ab       	std	Y+54, r25	; 0x36
    2da8:	af ab       	std	Y+55, r26	; 0x37
    2daa:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dac:	20 e0       	ldi	r18, 0x00	; 0
    2dae:	30 e0       	ldi	r19, 0x00	; 0
    2db0:	4a e7       	ldi	r20, 0x7A	; 122
    2db2:	53 e4       	ldi	r21, 0x43	; 67
    2db4:	6d a9       	ldd	r22, Y+53	; 0x35
    2db6:	7e a9       	ldd	r23, Y+54	; 0x36
    2db8:	8f a9       	ldd	r24, Y+55	; 0x37
    2dba:	98 ad       	ldd	r25, Y+56	; 0x38
    2dbc:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2dc0:	dc 01       	movw	r26, r24
    2dc2:	cb 01       	movw	r24, r22
    2dc4:	89 ab       	std	Y+49, r24	; 0x31
    2dc6:	9a ab       	std	Y+50, r25	; 0x32
    2dc8:	ab ab       	std	Y+51, r26	; 0x33
    2dca:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2dcc:	20 e0       	ldi	r18, 0x00	; 0
    2dce:	30 e0       	ldi	r19, 0x00	; 0
    2dd0:	40 e8       	ldi	r20, 0x80	; 128
    2dd2:	5f e3       	ldi	r21, 0x3F	; 63
    2dd4:	69 a9       	ldd	r22, Y+49	; 0x31
    2dd6:	7a a9       	ldd	r23, Y+50	; 0x32
    2dd8:	8b a9       	ldd	r24, Y+51	; 0x33
    2dda:	9c a9       	ldd	r25, Y+52	; 0x34
    2ddc:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    2de0:	88 23       	and	r24, r24
    2de2:	2c f4       	brge	.+10     	; 0x2dee <LCDsendCommand+0x84>
		__ticks = 1;
    2de4:	81 e0       	ldi	r24, 0x01	; 1
    2de6:	90 e0       	ldi	r25, 0x00	; 0
    2de8:	98 ab       	std	Y+48, r25	; 0x30
    2dea:	8f a7       	std	Y+47, r24	; 0x2f
    2dec:	3f c0       	rjmp	.+126    	; 0x2e6c <LCDsendCommand+0x102>
	else if (__tmp > 65535)
    2dee:	20 e0       	ldi	r18, 0x00	; 0
    2df0:	3f ef       	ldi	r19, 0xFF	; 255
    2df2:	4f e7       	ldi	r20, 0x7F	; 127
    2df4:	57 e4       	ldi	r21, 0x47	; 71
    2df6:	69 a9       	ldd	r22, Y+49	; 0x31
    2df8:	7a a9       	ldd	r23, Y+50	; 0x32
    2dfa:	8b a9       	ldd	r24, Y+51	; 0x33
    2dfc:	9c a9       	ldd	r25, Y+52	; 0x34
    2dfe:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    2e02:	18 16       	cp	r1, r24
    2e04:	4c f5       	brge	.+82     	; 0x2e58 <LCDsendCommand+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e06:	20 e0       	ldi	r18, 0x00	; 0
    2e08:	30 e0       	ldi	r19, 0x00	; 0
    2e0a:	40 e2       	ldi	r20, 0x20	; 32
    2e0c:	51 e4       	ldi	r21, 0x41	; 65
    2e0e:	6d a9       	ldd	r22, Y+53	; 0x35
    2e10:	7e a9       	ldd	r23, Y+54	; 0x36
    2e12:	8f a9       	ldd	r24, Y+55	; 0x37
    2e14:	98 ad       	ldd	r25, Y+56	; 0x38
    2e16:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2e1a:	dc 01       	movw	r26, r24
    2e1c:	cb 01       	movw	r24, r22
    2e1e:	bc 01       	movw	r22, r24
    2e20:	cd 01       	movw	r24, r26
    2e22:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2e26:	dc 01       	movw	r26, r24
    2e28:	cb 01       	movw	r24, r22
    2e2a:	98 ab       	std	Y+48, r25	; 0x30
    2e2c:	8f a7       	std	Y+47, r24	; 0x2f
    2e2e:	0f c0       	rjmp	.+30     	; 0x2e4e <LCDsendCommand+0xe4>
    2e30:	89 e1       	ldi	r24, 0x19	; 25
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	9e a7       	std	Y+46, r25	; 0x2e
    2e36:	8d a7       	std	Y+45, r24	; 0x2d
    2e38:	8d a5       	ldd	r24, Y+45	; 0x2d
    2e3a:	9e a5       	ldd	r25, Y+46	; 0x2e
    2e3c:	01 97       	sbiw	r24, 0x01	; 1
    2e3e:	f1 f7       	brne	.-4      	; 0x2e3c <LCDsendCommand+0xd2>
    2e40:	9e a7       	std	Y+46, r25	; 0x2e
    2e42:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e44:	8f a5       	ldd	r24, Y+47	; 0x2f
    2e46:	98 a9       	ldd	r25, Y+48	; 0x30
    2e48:	01 97       	sbiw	r24, 0x01	; 1
    2e4a:	98 ab       	std	Y+48, r25	; 0x30
    2e4c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e4e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2e50:	98 a9       	ldd	r25, Y+48	; 0x30
    2e52:	00 97       	sbiw	r24, 0x00	; 0
    2e54:	69 f7       	brne	.-38     	; 0x2e30 <LCDsendCommand+0xc6>
    2e56:	14 c0       	rjmp	.+40     	; 0x2e80 <LCDsendCommand+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e58:	69 a9       	ldd	r22, Y+49	; 0x31
    2e5a:	7a a9       	ldd	r23, Y+50	; 0x32
    2e5c:	8b a9       	ldd	r24, Y+51	; 0x33
    2e5e:	9c a9       	ldd	r25, Y+52	; 0x34
    2e60:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2e64:	dc 01       	movw	r26, r24
    2e66:	cb 01       	movw	r24, r22
    2e68:	98 ab       	std	Y+48, r25	; 0x30
    2e6a:	8f a7       	std	Y+47, r24	; 0x2f
    2e6c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2e6e:	98 a9       	ldd	r25, Y+48	; 0x30
    2e70:	9c a7       	std	Y+44, r25	; 0x2c
    2e72:	8b a7       	std	Y+43, r24	; 0x2b
    2e74:	8b a5       	ldd	r24, Y+43	; 0x2b
    2e76:	9c a5       	ldd	r25, Y+44	; 0x2c
    2e78:	01 97       	sbiw	r24, 0x01	; 1
    2e7a:	f1 f7       	brne	.-4      	; 0x2e78 <LCDsendCommand+0x10e>
    2e7c:	9c a7       	std	Y+44, r25	; 0x2c
    2e7e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    2e80:	a2 e3       	ldi	r26, 0x32	; 50
    2e82:	b0 e0       	ldi	r27, 0x00	; 0
    2e84:	e2 e3       	ldi	r30, 0x32	; 50
    2e86:	f0 e0       	ldi	r31, 0x00	; 0
    2e88:	80 81       	ld	r24, Z
    2e8a:	8d 7f       	andi	r24, 0xFD	; 253
    2e8c:	8c 93       	st	X, r24
    2e8e:	80 e0       	ldi	r24, 0x00	; 0
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	a0 e8       	ldi	r26, 0x80	; 128
    2e94:	bf e3       	ldi	r27, 0x3F	; 63
    2e96:	8f a3       	std	Y+39, r24	; 0x27
    2e98:	98 a7       	std	Y+40, r25	; 0x28
    2e9a:	a9 a7       	std	Y+41, r26	; 0x29
    2e9c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e9e:	20 e0       	ldi	r18, 0x00	; 0
    2ea0:	30 e0       	ldi	r19, 0x00	; 0
    2ea2:	4a e7       	ldi	r20, 0x7A	; 122
    2ea4:	53 e4       	ldi	r21, 0x43	; 67
    2ea6:	6f a1       	ldd	r22, Y+39	; 0x27
    2ea8:	78 a5       	ldd	r23, Y+40	; 0x28
    2eaa:	89 a5       	ldd	r24, Y+41	; 0x29
    2eac:	9a a5       	ldd	r25, Y+42	; 0x2a
    2eae:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2eb2:	dc 01       	movw	r26, r24
    2eb4:	cb 01       	movw	r24, r22
    2eb6:	8b a3       	std	Y+35, r24	; 0x23
    2eb8:	9c a3       	std	Y+36, r25	; 0x24
    2eba:	ad a3       	std	Y+37, r26	; 0x25
    2ebc:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2ebe:	20 e0       	ldi	r18, 0x00	; 0
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	40 e8       	ldi	r20, 0x80	; 128
    2ec4:	5f e3       	ldi	r21, 0x3F	; 63
    2ec6:	6b a1       	ldd	r22, Y+35	; 0x23
    2ec8:	7c a1       	ldd	r23, Y+36	; 0x24
    2eca:	8d a1       	ldd	r24, Y+37	; 0x25
    2ecc:	9e a1       	ldd	r25, Y+38	; 0x26
    2ece:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    2ed2:	88 23       	and	r24, r24
    2ed4:	2c f4       	brge	.+10     	; 0x2ee0 <LCDsendCommand+0x176>
		__ticks = 1;
    2ed6:	81 e0       	ldi	r24, 0x01	; 1
    2ed8:	90 e0       	ldi	r25, 0x00	; 0
    2eda:	9a a3       	std	Y+34, r25	; 0x22
    2edc:	89 a3       	std	Y+33, r24	; 0x21
    2ede:	3f c0       	rjmp	.+126    	; 0x2f5e <LCDsendCommand+0x1f4>
	else if (__tmp > 65535)
    2ee0:	20 e0       	ldi	r18, 0x00	; 0
    2ee2:	3f ef       	ldi	r19, 0xFF	; 255
    2ee4:	4f e7       	ldi	r20, 0x7F	; 127
    2ee6:	57 e4       	ldi	r21, 0x47	; 71
    2ee8:	6b a1       	ldd	r22, Y+35	; 0x23
    2eea:	7c a1       	ldd	r23, Y+36	; 0x24
    2eec:	8d a1       	ldd	r24, Y+37	; 0x25
    2eee:	9e a1       	ldd	r25, Y+38	; 0x26
    2ef0:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    2ef4:	18 16       	cp	r1, r24
    2ef6:	4c f5       	brge	.+82     	; 0x2f4a <LCDsendCommand+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ef8:	20 e0       	ldi	r18, 0x00	; 0
    2efa:	30 e0       	ldi	r19, 0x00	; 0
    2efc:	40 e2       	ldi	r20, 0x20	; 32
    2efe:	51 e4       	ldi	r21, 0x41	; 65
    2f00:	6f a1       	ldd	r22, Y+39	; 0x27
    2f02:	78 a5       	ldd	r23, Y+40	; 0x28
    2f04:	89 a5       	ldd	r24, Y+41	; 0x29
    2f06:	9a a5       	ldd	r25, Y+42	; 0x2a
    2f08:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2f0c:	dc 01       	movw	r26, r24
    2f0e:	cb 01       	movw	r24, r22
    2f10:	bc 01       	movw	r22, r24
    2f12:	cd 01       	movw	r24, r26
    2f14:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2f18:	dc 01       	movw	r26, r24
    2f1a:	cb 01       	movw	r24, r22
    2f1c:	9a a3       	std	Y+34, r25	; 0x22
    2f1e:	89 a3       	std	Y+33, r24	; 0x21
    2f20:	0f c0       	rjmp	.+30     	; 0x2f40 <LCDsendCommand+0x1d6>
    2f22:	89 e1       	ldi	r24, 0x19	; 25
    2f24:	90 e0       	ldi	r25, 0x00	; 0
    2f26:	98 a3       	std	Y+32, r25	; 0x20
    2f28:	8f 8f       	std	Y+31, r24	; 0x1f
    2f2a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2f2c:	98 a1       	ldd	r25, Y+32	; 0x20
    2f2e:	01 97       	sbiw	r24, 0x01	; 1
    2f30:	f1 f7       	brne	.-4      	; 0x2f2e <LCDsendCommand+0x1c4>
    2f32:	98 a3       	std	Y+32, r25	; 0x20
    2f34:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f36:	89 a1       	ldd	r24, Y+33	; 0x21
    2f38:	9a a1       	ldd	r25, Y+34	; 0x22
    2f3a:	01 97       	sbiw	r24, 0x01	; 1
    2f3c:	9a a3       	std	Y+34, r25	; 0x22
    2f3e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f40:	89 a1       	ldd	r24, Y+33	; 0x21
    2f42:	9a a1       	ldd	r25, Y+34	; 0x22
    2f44:	00 97       	sbiw	r24, 0x00	; 0
    2f46:	69 f7       	brne	.-38     	; 0x2f22 <LCDsendCommand+0x1b8>
    2f48:	14 c0       	rjmp	.+40     	; 0x2f72 <LCDsendCommand+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f4a:	6b a1       	ldd	r22, Y+35	; 0x23
    2f4c:	7c a1       	ldd	r23, Y+36	; 0x24
    2f4e:	8d a1       	ldd	r24, Y+37	; 0x25
    2f50:	9e a1       	ldd	r25, Y+38	; 0x26
    2f52:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    2f56:	dc 01       	movw	r26, r24
    2f58:	cb 01       	movw	r24, r22
    2f5a:	9a a3       	std	Y+34, r25	; 0x22
    2f5c:	89 a3       	std	Y+33, r24	; 0x21
    2f5e:	89 a1       	ldd	r24, Y+33	; 0x21
    2f60:	9a a1       	ldd	r25, Y+34	; 0x22
    2f62:	9e 8f       	std	Y+30, r25	; 0x1e
    2f64:	8d 8f       	std	Y+29, r24	; 0x1d
    2f66:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2f68:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2f6a:	01 97       	sbiw	r24, 0x01	; 1
    2f6c:	f1 f7       	brne	.-4      	; 0x2f6a <LCDsendCommand+0x200>
    2f6e:	9e 8f       	std	Y+30, r25	; 0x1e
    2f70:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	//4 LSB bits
	LDP=((cmd<<2)&0b00111100);
    2f72:	e2 e3       	ldi	r30, 0x32	; 50
    2f74:	f0 e0       	ldi	r31, 0x00	; 0
    2f76:	89 ad       	ldd	r24, Y+57	; 0x39
    2f78:	88 2f       	mov	r24, r24
    2f7a:	90 e0       	ldi	r25, 0x00	; 0
    2f7c:	88 0f       	add	r24, r24
    2f7e:	99 1f       	adc	r25, r25
    2f80:	88 0f       	add	r24, r24
    2f82:	99 1f       	adc	r25, r25
    2f84:	8c 73       	andi	r24, 0x3C	; 60
    2f86:	80 83       	st	Z, r24
	LCP|=1<<LCD_E;
    2f88:	a2 e3       	ldi	r26, 0x32	; 50
    2f8a:	b0 e0       	ldi	r27, 0x00	; 0
    2f8c:	e2 e3       	ldi	r30, 0x32	; 50
    2f8e:	f0 e0       	ldi	r31, 0x00	; 0
    2f90:	80 81       	ld	r24, Z
    2f92:	82 60       	ori	r24, 0x02	; 2
    2f94:	8c 93       	st	X, r24
    2f96:	80 e0       	ldi	r24, 0x00	; 0
    2f98:	90 e0       	ldi	r25, 0x00	; 0
    2f9a:	a0 e8       	ldi	r26, 0x80	; 128
    2f9c:	bf e3       	ldi	r27, 0x3F	; 63
    2f9e:	89 8f       	std	Y+25, r24	; 0x19
    2fa0:	9a 8f       	std	Y+26, r25	; 0x1a
    2fa2:	ab 8f       	std	Y+27, r26	; 0x1b
    2fa4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fa6:	20 e0       	ldi	r18, 0x00	; 0
    2fa8:	30 e0       	ldi	r19, 0x00	; 0
    2faa:	4a e7       	ldi	r20, 0x7A	; 122
    2fac:	53 e4       	ldi	r21, 0x43	; 67
    2fae:	69 8d       	ldd	r22, Y+25	; 0x19
    2fb0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2fb2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fb4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2fb6:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    2fba:	dc 01       	movw	r26, r24
    2fbc:	cb 01       	movw	r24, r22
    2fbe:	8d 8b       	std	Y+21, r24	; 0x15
    2fc0:	9e 8b       	std	Y+22, r25	; 0x16
    2fc2:	af 8b       	std	Y+23, r26	; 0x17
    2fc4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2fc6:	20 e0       	ldi	r18, 0x00	; 0
    2fc8:	30 e0       	ldi	r19, 0x00	; 0
    2fca:	40 e8       	ldi	r20, 0x80	; 128
    2fcc:	5f e3       	ldi	r21, 0x3F	; 63
    2fce:	6d 89       	ldd	r22, Y+21	; 0x15
    2fd0:	7e 89       	ldd	r23, Y+22	; 0x16
    2fd2:	8f 89       	ldd	r24, Y+23	; 0x17
    2fd4:	98 8d       	ldd	r25, Y+24	; 0x18
    2fd6:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    2fda:	88 23       	and	r24, r24
    2fdc:	2c f4       	brge	.+10     	; 0x2fe8 <LCDsendCommand+0x27e>
		__ticks = 1;
    2fde:	81 e0       	ldi	r24, 0x01	; 1
    2fe0:	90 e0       	ldi	r25, 0x00	; 0
    2fe2:	9c 8b       	std	Y+20, r25	; 0x14
    2fe4:	8b 8b       	std	Y+19, r24	; 0x13
    2fe6:	3f c0       	rjmp	.+126    	; 0x3066 <LCDsendCommand+0x2fc>
	else if (__tmp > 65535)
    2fe8:	20 e0       	ldi	r18, 0x00	; 0
    2fea:	3f ef       	ldi	r19, 0xFF	; 255
    2fec:	4f e7       	ldi	r20, 0x7F	; 127
    2fee:	57 e4       	ldi	r21, 0x47	; 71
    2ff0:	6d 89       	ldd	r22, Y+21	; 0x15
    2ff2:	7e 89       	ldd	r23, Y+22	; 0x16
    2ff4:	8f 89       	ldd	r24, Y+23	; 0x17
    2ff6:	98 8d       	ldd	r25, Y+24	; 0x18
    2ff8:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    2ffc:	18 16       	cp	r1, r24
    2ffe:	4c f5       	brge	.+82     	; 0x3052 <LCDsendCommand+0x2e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3000:	20 e0       	ldi	r18, 0x00	; 0
    3002:	30 e0       	ldi	r19, 0x00	; 0
    3004:	40 e2       	ldi	r20, 0x20	; 32
    3006:	51 e4       	ldi	r21, 0x41	; 65
    3008:	69 8d       	ldd	r22, Y+25	; 0x19
    300a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    300c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    300e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3010:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    3014:	dc 01       	movw	r26, r24
    3016:	cb 01       	movw	r24, r22
    3018:	bc 01       	movw	r22, r24
    301a:	cd 01       	movw	r24, r26
    301c:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    3020:	dc 01       	movw	r26, r24
    3022:	cb 01       	movw	r24, r22
    3024:	9c 8b       	std	Y+20, r25	; 0x14
    3026:	8b 8b       	std	Y+19, r24	; 0x13
    3028:	0f c0       	rjmp	.+30     	; 0x3048 <LCDsendCommand+0x2de>
    302a:	89 e1       	ldi	r24, 0x19	; 25
    302c:	90 e0       	ldi	r25, 0x00	; 0
    302e:	9a 8b       	std	Y+18, r25	; 0x12
    3030:	89 8b       	std	Y+17, r24	; 0x11
    3032:	89 89       	ldd	r24, Y+17	; 0x11
    3034:	9a 89       	ldd	r25, Y+18	; 0x12
    3036:	01 97       	sbiw	r24, 0x01	; 1
    3038:	f1 f7       	brne	.-4      	; 0x3036 <LCDsendCommand+0x2cc>
    303a:	9a 8b       	std	Y+18, r25	; 0x12
    303c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    303e:	8b 89       	ldd	r24, Y+19	; 0x13
    3040:	9c 89       	ldd	r25, Y+20	; 0x14
    3042:	01 97       	sbiw	r24, 0x01	; 1
    3044:	9c 8b       	std	Y+20, r25	; 0x14
    3046:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3048:	8b 89       	ldd	r24, Y+19	; 0x13
    304a:	9c 89       	ldd	r25, Y+20	; 0x14
    304c:	00 97       	sbiw	r24, 0x00	; 0
    304e:	69 f7       	brne	.-38     	; 0x302a <LCDsendCommand+0x2c0>
    3050:	14 c0       	rjmp	.+40     	; 0x307a <LCDsendCommand+0x310>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3052:	6d 89       	ldd	r22, Y+21	; 0x15
    3054:	7e 89       	ldd	r23, Y+22	; 0x16
    3056:	8f 89       	ldd	r24, Y+23	; 0x17
    3058:	98 8d       	ldd	r25, Y+24	; 0x18
    305a:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    305e:	dc 01       	movw	r26, r24
    3060:	cb 01       	movw	r24, r22
    3062:	9c 8b       	std	Y+20, r25	; 0x14
    3064:	8b 8b       	std	Y+19, r24	; 0x13
    3066:	8b 89       	ldd	r24, Y+19	; 0x13
    3068:	9c 89       	ldd	r25, Y+20	; 0x14
    306a:	98 8b       	std	Y+16, r25	; 0x10
    306c:	8f 87       	std	Y+15, r24	; 0x0f
    306e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3070:	98 89       	ldd	r25, Y+16	; 0x10
    3072:	01 97       	sbiw	r24, 0x01	; 1
    3074:	f1 f7       	brne	.-4      	; 0x3072 <LCDsendCommand+0x308>
    3076:	98 8b       	std	Y+16, r25	; 0x10
    3078:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
    307a:	a2 e3       	ldi	r26, 0x32	; 50
    307c:	b0 e0       	ldi	r27, 0x00	; 0
    307e:	e2 e3       	ldi	r30, 0x32	; 50
    3080:	f0 e0       	ldi	r31, 0x00	; 0
    3082:	80 81       	ld	r24, Z
    3084:	8d 7f       	andi	r24, 0xFD	; 253
    3086:	8c 93       	st	X, r24
    3088:	80 e0       	ldi	r24, 0x00	; 0
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	a0 e8       	ldi	r26, 0x80	; 128
    308e:	bf e3       	ldi	r27, 0x3F	; 63
    3090:	8b 87       	std	Y+11, r24	; 0x0b
    3092:	9c 87       	std	Y+12, r25	; 0x0c
    3094:	ad 87       	std	Y+13, r26	; 0x0d
    3096:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3098:	20 e0       	ldi	r18, 0x00	; 0
    309a:	30 e0       	ldi	r19, 0x00	; 0
    309c:	4a e7       	ldi	r20, 0x7A	; 122
    309e:	53 e4       	ldi	r21, 0x43	; 67
    30a0:	6b 85       	ldd	r22, Y+11	; 0x0b
    30a2:	7c 85       	ldd	r23, Y+12	; 0x0c
    30a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    30a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    30a8:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    30ac:	dc 01       	movw	r26, r24
    30ae:	cb 01       	movw	r24, r22
    30b0:	8f 83       	std	Y+7, r24	; 0x07
    30b2:	98 87       	std	Y+8, r25	; 0x08
    30b4:	a9 87       	std	Y+9, r26	; 0x09
    30b6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    30b8:	20 e0       	ldi	r18, 0x00	; 0
    30ba:	30 e0       	ldi	r19, 0x00	; 0
    30bc:	40 e8       	ldi	r20, 0x80	; 128
    30be:	5f e3       	ldi	r21, 0x3F	; 63
    30c0:	6f 81       	ldd	r22, Y+7	; 0x07
    30c2:	78 85       	ldd	r23, Y+8	; 0x08
    30c4:	89 85       	ldd	r24, Y+9	; 0x09
    30c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    30c8:	0e 94 42 1e 	call	0x3c84	; 0x3c84 <__ltsf2>
    30cc:	88 23       	and	r24, r24
    30ce:	2c f4       	brge	.+10     	; 0x30da <LCDsendCommand+0x370>
		__ticks = 1;
    30d0:	81 e0       	ldi	r24, 0x01	; 1
    30d2:	90 e0       	ldi	r25, 0x00	; 0
    30d4:	9e 83       	std	Y+6, r25	; 0x06
    30d6:	8d 83       	std	Y+5, r24	; 0x05
    30d8:	3f c0       	rjmp	.+126    	; 0x3158 <LCDsendCommand+0x3ee>
	else if (__tmp > 65535)
    30da:	20 e0       	ldi	r18, 0x00	; 0
    30dc:	3f ef       	ldi	r19, 0xFF	; 255
    30de:	4f e7       	ldi	r20, 0x7F	; 127
    30e0:	57 e4       	ldi	r21, 0x47	; 71
    30e2:	6f 81       	ldd	r22, Y+7	; 0x07
    30e4:	78 85       	ldd	r23, Y+8	; 0x08
    30e6:	89 85       	ldd	r24, Y+9	; 0x09
    30e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    30ea:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <__gtsf2>
    30ee:	18 16       	cp	r1, r24
    30f0:	4c f5       	brge	.+82     	; 0x3144 <LCDsendCommand+0x3da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30f2:	20 e0       	ldi	r18, 0x00	; 0
    30f4:	30 e0       	ldi	r19, 0x00	; 0
    30f6:	40 e2       	ldi	r20, 0x20	; 32
    30f8:	51 e4       	ldi	r21, 0x41	; 65
    30fa:	6b 85       	ldd	r22, Y+11	; 0x0b
    30fc:	7c 85       	ldd	r23, Y+12	; 0x0c
    30fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    3100:	9e 85       	ldd	r25, Y+14	; 0x0e
    3102:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <__mulsf3>
    3106:	dc 01       	movw	r26, r24
    3108:	cb 01       	movw	r24, r22
    310a:	bc 01       	movw	r22, r24
    310c:	cd 01       	movw	r24, r26
    310e:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    3112:	dc 01       	movw	r26, r24
    3114:	cb 01       	movw	r24, r22
    3116:	9e 83       	std	Y+6, r25	; 0x06
    3118:	8d 83       	std	Y+5, r24	; 0x05
    311a:	0f c0       	rjmp	.+30     	; 0x313a <LCDsendCommand+0x3d0>
    311c:	89 e1       	ldi	r24, 0x19	; 25
    311e:	90 e0       	ldi	r25, 0x00	; 0
    3120:	9c 83       	std	Y+4, r25	; 0x04
    3122:	8b 83       	std	Y+3, r24	; 0x03
    3124:	8b 81       	ldd	r24, Y+3	; 0x03
    3126:	9c 81       	ldd	r25, Y+4	; 0x04
    3128:	01 97       	sbiw	r24, 0x01	; 1
    312a:	f1 f7       	brne	.-4      	; 0x3128 <LCDsendCommand+0x3be>
    312c:	9c 83       	std	Y+4, r25	; 0x04
    312e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3130:	8d 81       	ldd	r24, Y+5	; 0x05
    3132:	9e 81       	ldd	r25, Y+6	; 0x06
    3134:	01 97       	sbiw	r24, 0x01	; 1
    3136:	9e 83       	std	Y+6, r25	; 0x06
    3138:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    313a:	8d 81       	ldd	r24, Y+5	; 0x05
    313c:	9e 81       	ldd	r25, Y+6	; 0x06
    313e:	00 97       	sbiw	r24, 0x00	; 0
    3140:	69 f7       	brne	.-38     	; 0x311c <LCDsendCommand+0x3b2>
    3142:	14 c0       	rjmp	.+40     	; 0x316c <LCDsendCommand+0x402>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3144:	6f 81       	ldd	r22, Y+7	; 0x07
    3146:	78 85       	ldd	r23, Y+8	; 0x08
    3148:	89 85       	ldd	r24, Y+9	; 0x09
    314a:	9a 85       	ldd	r25, Y+10	; 0x0a
    314c:	0e 94 12 1b 	call	0x3624	; 0x3624 <__fixunssfsi>
    3150:	dc 01       	movw	r26, r24
    3152:	cb 01       	movw	r24, r22
    3154:	9e 83       	std	Y+6, r25	; 0x06
    3156:	8d 83       	std	Y+5, r24	; 0x05
    3158:	8d 81       	ldd	r24, Y+5	; 0x05
    315a:	9e 81       	ldd	r25, Y+6	; 0x06
    315c:	9a 83       	std	Y+2, r25	; 0x02
    315e:	89 83       	std	Y+1, r24	; 0x01
    3160:	89 81       	ldd	r24, Y+1	; 0x01
    3162:	9a 81       	ldd	r25, Y+2	; 0x02
    3164:	01 97       	sbiw	r24, 0x01	; 1
    3166:	f1 f7       	brne	.-4      	; 0x3164 <LCDsendCommand+0x3fa>
    3168:	9a 83       	std	Y+2, r25	; 0x02
    316a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    316c:	e9 96       	adiw	r28, 0x39	; 57
    316e:	0f b6       	in	r0, 0x3f	; 63
    3170:	f8 94       	cli
    3172:	de bf       	out	0x3e, r29	; 62
    3174:	0f be       	out	0x3f, r0	; 63
    3176:	cd bf       	out	0x3d, r28	; 61
    3178:	cf 91       	pop	r28
    317a:	df 91       	pop	r29
    317c:	08 95       	ret

0000317e <LCDclr>:

//Clears LCD
void LCDclr(void)
{
    317e:	df 93       	push	r29
    3180:	cf 93       	push	r28
    3182:	cd b7       	in	r28, 0x3d	; 61
    3184:	de b7       	in	r29, 0x3e	; 62
	LCDsendCommand(0x01);
    3186:	81 e0       	ldi	r24, 0x01	; 1
    3188:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    318c:	cf 91       	pop	r28
    318e:	df 91       	pop	r29
    3190:	08 95       	ret

00003192 <LCDhome>:

//LCD cursor home
void LCDhome(void)
{
    3192:	df 93       	push	r29
    3194:	cf 93       	push	r28
    3196:	cd b7       	in	r28, 0x3d	; 61
    3198:	de b7       	in	r29, 0x3e	; 62
	LCDsendCommand(0x02);
    319a:	82 e0       	ldi	r24, 0x02	; 2
    319c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    31a0:	cf 91       	pop	r28
    31a2:	df 91       	pop	r29
    31a4:	08 95       	ret

000031a6 <LCDstring>:

//Outputs string to LCD
void LCDstring(uint8_t* data, uint8_t nBytes)
{
    31a6:	df 93       	push	r29
    31a8:	cf 93       	push	r28
    31aa:	00 d0       	rcall	.+0      	; 0x31ac <LCDstring+0x6>
    31ac:	00 d0       	rcall	.+0      	; 0x31ae <LCDstring+0x8>
    31ae:	cd b7       	in	r28, 0x3d	; 61
    31b0:	de b7       	in	r29, 0x3e	; 62
    31b2:	9a 83       	std	Y+2, r25	; 0x02
    31b4:	89 83       	std	Y+1, r24	; 0x01
    31b6:	6b 83       	std	Y+3, r22	; 0x03
register uint8_t i;

	// check to make sure we have a good pointer
	if (!data) return;
    31b8:	89 81       	ldd	r24, Y+1	; 0x01
    31ba:	9a 81       	ldd	r25, Y+2	; 0x02
    31bc:	00 97       	sbiw	r24, 0x00	; 0
    31be:	a1 f0       	breq	.+40     	; 0x31e8 <LCDstring+0x42>

	// print data
	for(i=0; i<nBytes; i++)
    31c0:	1c 82       	std	Y+4, r1	; 0x04
    31c2:	0e c0       	rjmp	.+28     	; 0x31e0 <LCDstring+0x3a>
	{
		LCDsendChar(data[i]);
    31c4:	8c 81       	ldd	r24, Y+4	; 0x04
    31c6:	28 2f       	mov	r18, r24
    31c8:	30 e0       	ldi	r19, 0x00	; 0
    31ca:	89 81       	ldd	r24, Y+1	; 0x01
    31cc:	9a 81       	ldd	r25, Y+2	; 0x02
    31ce:	fc 01       	movw	r30, r24
    31d0:	e2 0f       	add	r30, r18
    31d2:	f3 1f       	adc	r31, r19
    31d4:	80 81       	ld	r24, Z
    31d6:	0e 94 ad 14 	call	0x295a	; 0x295a <LCDsendChar>

	// check to make sure we have a good pointer
	if (!data) return;

	// print data
	for(i=0; i<nBytes; i++)
    31da:	9c 81       	ldd	r25, Y+4	; 0x04
    31dc:	9f 5f       	subi	r25, 0xFF	; 255
    31de:	9c 83       	std	Y+4, r25	; 0x04
    31e0:	8b 81       	ldd	r24, Y+3	; 0x03
    31e2:	9c 81       	ldd	r25, Y+4	; 0x04
    31e4:	98 17       	cp	r25, r24
    31e6:	70 f3       	brcs	.-36     	; 0x31c4 <LCDstring+0x1e>
	{
		LCDsendChar(data[i]);
	}

}
    31e8:	0f 90       	pop	r0
    31ea:	0f 90       	pop	r0
    31ec:	0f 90       	pop	r0
    31ee:	0f 90       	pop	r0
    31f0:	cf 91       	pop	r28
    31f2:	df 91       	pop	r29
    31f4:	08 95       	ret

000031f6 <LCDGotoXY>:

//Cursor to X Y position
void LCDGotoXY(uint8_t x, uint8_t y)
{
    31f6:	df 93       	push	r29
    31f8:	cf 93       	push	r28
    31fa:	00 d0       	rcall	.+0      	; 0x31fc <LCDGotoXY+0x6>
    31fc:	00 d0       	rcall	.+0      	; 0x31fe <LCDGotoXY+0x8>
    31fe:	0f 92       	push	r0
    3200:	cd b7       	in	r28, 0x3d	; 61
    3202:	de b7       	in	r29, 0x3e	; 62
    3204:	89 83       	std	Y+1, r24	; 0x01
    3206:	6a 83       	std	Y+2, r22	; 0x02
#define LCD_LINE2_DDRAMADDR		0x14
#define LCD_LINE3_DDRAMADDR		0x54

	register uint8_t DDRAMAddr;
	// remap lines into proper order
	switch(y)
    3208:	8a 81       	ldd	r24, Y+2	; 0x02
    320a:	28 2f       	mov	r18, r24
    320c:	30 e0       	ldi	r19, 0x00	; 0
    320e:	3d 83       	std	Y+5, r19	; 0x05
    3210:	2c 83       	std	Y+4, r18	; 0x04
    3212:	8c 81       	ldd	r24, Y+4	; 0x04
    3214:	9d 81       	ldd	r25, Y+5	; 0x05
    3216:	81 30       	cpi	r24, 0x01	; 1
    3218:	91 05       	cpc	r25, r1
    321a:	c1 f0       	breq	.+48     	; 0x324c <LCDGotoXY+0x56>
    321c:	2c 81       	ldd	r18, Y+4	; 0x04
    321e:	3d 81       	ldd	r19, Y+5	; 0x05
    3220:	22 30       	cpi	r18, 0x02	; 2
    3222:	31 05       	cpc	r19, r1
    3224:	2c f4       	brge	.+10     	; 0x3230 <LCDGotoXY+0x3a>
    3226:	8c 81       	ldd	r24, Y+4	; 0x04
    3228:	9d 81       	ldd	r25, Y+5	; 0x05
    322a:	00 97       	sbiw	r24, 0x00	; 0
    322c:	61 f0       	breq	.+24     	; 0x3246 <LCDGotoXY+0x50>
    322e:	1d c0       	rjmp	.+58     	; 0x326a <LCDGotoXY+0x74>
    3230:	2c 81       	ldd	r18, Y+4	; 0x04
    3232:	3d 81       	ldd	r19, Y+5	; 0x05
    3234:	22 30       	cpi	r18, 0x02	; 2
    3236:	31 05       	cpc	r19, r1
    3238:	71 f0       	breq	.+28     	; 0x3256 <LCDGotoXY+0x60>
    323a:	8c 81       	ldd	r24, Y+4	; 0x04
    323c:	9d 81       	ldd	r25, Y+5	; 0x05
    323e:	83 30       	cpi	r24, 0x03	; 3
    3240:	91 05       	cpc	r25, r1
    3242:	71 f0       	breq	.+28     	; 0x3260 <LCDGotoXY+0x6a>
    3244:	12 c0       	rjmp	.+36     	; 0x326a <LCDGotoXY+0x74>
	{
	case 0:  DDRAMAddr = LCD_LINE0_DDRAMADDR + x; break;
    3246:	99 81       	ldd	r25, Y+1	; 0x01
    3248:	9b 83       	std	Y+3, r25	; 0x03
    324a:	11 c0       	rjmp	.+34     	; 0x326e <LCDGotoXY+0x78>
	case 1:  DDRAMAddr = LCD_LINE1_DDRAMADDR + x; break;
    324c:	89 81       	ldd	r24, Y+1	; 0x01
    324e:	28 2f       	mov	r18, r24
    3250:	20 5c       	subi	r18, 0xC0	; 192
    3252:	2b 83       	std	Y+3, r18	; 0x03
    3254:	0c c0       	rjmp	.+24     	; 0x326e <LCDGotoXY+0x78>
	case 2:  DDRAMAddr = LCD_LINE2_DDRAMADDR + x; break;
    3256:	89 81       	ldd	r24, Y+1	; 0x01
    3258:	38 2f       	mov	r19, r24
    325a:	3c 5e       	subi	r19, 0xEC	; 236
    325c:	3b 83       	std	Y+3, r19	; 0x03
    325e:	07 c0       	rjmp	.+14     	; 0x326e <LCDGotoXY+0x78>
	case 3:  DDRAMAddr = LCD_LINE3_DDRAMADDR + x; break;
    3260:	89 81       	ldd	r24, Y+1	; 0x01
    3262:	98 2f       	mov	r25, r24
    3264:	9c 5a       	subi	r25, 0xAC	; 172
    3266:	9b 83       	std	Y+3, r25	; 0x03
    3268:	02 c0       	rjmp	.+4      	; 0x326e <LCDGotoXY+0x78>
	default: DDRAMAddr = LCD_LINE0_DDRAMADDR + x;
    326a:	29 81       	ldd	r18, Y+1	; 0x01
    326c:	2b 83       	std	Y+3, r18	; 0x03
	}
	// set data address
	LCDsendCommand(1<<LCD_DDRAM | DDRAMAddr);
    326e:	8b 81       	ldd	r24, Y+3	; 0x03
    3270:	80 68       	ori	r24, 0x80	; 128
    3272:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    3276:	0f 90       	pop	r0
    3278:	0f 90       	pop	r0
    327a:	0f 90       	pop	r0
    327c:	0f 90       	pop	r0
    327e:	0f 90       	pop	r0
    3280:	cf 91       	pop	r28
    3282:	df 91       	pop	r29
    3284:	08 95       	ret

00003286 <LCDshiftLeft>:

//Scrol n of characters Right
void LCDshiftLeft(uint8_t n)
{
    3286:	df 93       	push	r29
    3288:	cf 93       	push	r28
    328a:	00 d0       	rcall	.+0      	; 0x328c <LCDshiftLeft+0x6>
    328c:	cd b7       	in	r28, 0x3d	; 61
    328e:	de b7       	in	r29, 0x3e	; 62
    3290:	8a 83       	std	Y+2, r24	; 0x02
uint8_t i;

	for (i=0;i<n;i++)
    3292:	19 82       	std	Y+1, r1	; 0x01
    3294:	06 c0       	rjmp	.+12     	; 0x32a2 <LCDshiftLeft+0x1c>
	{
		LCDsendCommand(0x1E);
    3296:	8e e1       	ldi	r24, 0x1E	; 30
    3298:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
//Scrol n of characters Right
void LCDshiftLeft(uint8_t n)
{
uint8_t i;

	for (i=0;i<n;i++)
    329c:	89 81       	ldd	r24, Y+1	; 0x01
    329e:	8f 5f       	subi	r24, 0xFF	; 255
    32a0:	89 83       	std	Y+1, r24	; 0x01
    32a2:	99 81       	ldd	r25, Y+1	; 0x01
    32a4:	8a 81       	ldd	r24, Y+2	; 0x02
    32a6:	98 17       	cp	r25, r24
    32a8:	b0 f3       	brcs	.-20     	; 0x3296 <LCDshiftLeft+0x10>
	{
		LCDsendCommand(0x1E);
	}
}
    32aa:	0f 90       	pop	r0
    32ac:	0f 90       	pop	r0
    32ae:	cf 91       	pop	r28
    32b0:	df 91       	pop	r29
    32b2:	08 95       	ret

000032b4 <LCDshiftRight>:

//Scrol n of characters Left
void LCDshiftRight(uint8_t n)
{
    32b4:	df 93       	push	r29
    32b6:	cf 93       	push	r28
    32b8:	00 d0       	rcall	.+0      	; 0x32ba <LCDshiftRight+0x6>
    32ba:	cd b7       	in	r28, 0x3d	; 61
    32bc:	de b7       	in	r29, 0x3e	; 62
    32be:	8a 83       	std	Y+2, r24	; 0x02
uint8_t i;

	for (i=0;i<n;i++)
    32c0:	19 82       	std	Y+1, r1	; 0x01
    32c2:	06 c0       	rjmp	.+12     	; 0x32d0 <LCDshiftRight+0x1c>
	{
		LCDsendCommand(0x18);
    32c4:	88 e1       	ldi	r24, 0x18	; 24
    32c6:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
//Scrol n of characters Left
void LCDshiftRight(uint8_t n)
{
uint8_t i;

	for (i=0;i<n;i++)
    32ca:	89 81       	ldd	r24, Y+1	; 0x01
    32cc:	8f 5f       	subi	r24, 0xFF	; 255
    32ce:	89 83       	std	Y+1, r24	; 0x01
    32d0:	99 81       	ldd	r25, Y+1	; 0x01
    32d2:	8a 81       	ldd	r24, Y+2	; 0x02
    32d4:	98 17       	cp	r25, r24
    32d6:	b0 f3       	brcs	.-20     	; 0x32c4 <LCDshiftRight+0x10>
	{
		LCDsendCommand(0x18);
	}
}
    32d8:	0f 90       	pop	r0
    32da:	0f 90       	pop	r0
    32dc:	cf 91       	pop	r28
    32de:	df 91       	pop	r29
    32e0:	08 95       	ret

000032e2 <LCDcursorOn>:

//displays LCD cursor
void LCDcursorOn(void)
{
    32e2:	df 93       	push	r29
    32e4:	cf 93       	push	r28
    32e6:	cd b7       	in	r28, 0x3d	; 61
    32e8:	de b7       	in	r29, 0x3e	; 62
	LCDsendCommand(0x0E);
    32ea:	8e e0       	ldi	r24, 0x0E	; 14
    32ec:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    32f0:	cf 91       	pop	r28
    32f2:	df 91       	pop	r29
    32f4:	08 95       	ret

000032f6 <LCDcursorOnBlink>:

//displays LCD blinking cursor
void LCDcursorOnBlink(void)
{
    32f6:	df 93       	push	r29
    32f8:	cf 93       	push	r28
    32fa:	cd b7       	in	r28, 0x3d	; 61
    32fc:	de b7       	in	r29, 0x3e	; 62
	LCDsendCommand(0x0F);
    32fe:	8f e0       	ldi	r24, 0x0F	; 15
    3300:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    3304:	cf 91       	pop	r28
    3306:	df 91       	pop	r29
    3308:	08 95       	ret

0000330a <LCDcursorOFF>:

//Turns OFF cursor
void LCDcursorOFF(void)
{
    330a:	df 93       	push	r29
    330c:	cf 93       	push	r28
    330e:	cd b7       	in	r28, 0x3d	; 61
    3310:	de b7       	in	r29, 0x3e	; 62
	LCDsendCommand(0x0C);
    3312:	8c e0       	ldi	r24, 0x0C	; 12
    3314:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    3318:	cf 91       	pop	r28
    331a:	df 91       	pop	r29
    331c:	08 95       	ret

0000331e <LCDblank>:

//Blanks LCD
void LCDblank(void)
{
    331e:	df 93       	push	r29
    3320:	cf 93       	push	r28
    3322:	cd b7       	in	r28, 0x3d	; 61
    3324:	de b7       	in	r29, 0x3e	; 62
	LCDsendCommand(0x08);
    3326:	88 e0       	ldi	r24, 0x08	; 8
    3328:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    332c:	cf 91       	pop	r28
    332e:	df 91       	pop	r29
    3330:	08 95       	ret

00003332 <LCDvisible>:

//Shows LCD
void LCDvisible(void)
{
    3332:	df 93       	push	r29
    3334:	cf 93       	push	r28
    3336:	cd b7       	in	r28, 0x3d	; 61
    3338:	de b7       	in	r29, 0x3e	; 62
	LCDsendCommand(0x0C);
    333a:	8c e0       	ldi	r24, 0x0C	; 12
    333c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
}
    3340:	cf 91       	pop	r28
    3342:	df 91       	pop	r29
    3344:	08 95       	ret

00003346 <LCDcursorLeft>:

//Moves cursor by n poisitions left
void LCDcursorLeft(uint8_t n)
{
    3346:	df 93       	push	r29
    3348:	cf 93       	push	r28
    334a:	00 d0       	rcall	.+0      	; 0x334c <LCDcursorLeft+0x6>
    334c:	cd b7       	in	r28, 0x3d	; 61
    334e:	de b7       	in	r29, 0x3e	; 62
    3350:	8a 83       	std	Y+2, r24	; 0x02
uint8_t i;

	for (i=0;i<n;i++)
    3352:	19 82       	std	Y+1, r1	; 0x01
    3354:	06 c0       	rjmp	.+12     	; 0x3362 <LCDcursorLeft+0x1c>
	{
		LCDsendCommand(0x10);
    3356:	80 e1       	ldi	r24, 0x10	; 16
    3358:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
//Moves cursor by n poisitions left
void LCDcursorLeft(uint8_t n)
{
uint8_t i;

	for (i=0;i<n;i++)
    335c:	89 81       	ldd	r24, Y+1	; 0x01
    335e:	8f 5f       	subi	r24, 0xFF	; 255
    3360:	89 83       	std	Y+1, r24	; 0x01
    3362:	99 81       	ldd	r25, Y+1	; 0x01
    3364:	8a 81       	ldd	r24, Y+2	; 0x02
    3366:	98 17       	cp	r25, r24
    3368:	b0 f3       	brcs	.-20     	; 0x3356 <LCDcursorLeft+0x10>
	{
		LCDsendCommand(0x10);
	}
}
    336a:	0f 90       	pop	r0
    336c:	0f 90       	pop	r0
    336e:	cf 91       	pop	r28
    3370:	df 91       	pop	r29
    3372:	08 95       	ret

00003374 <LCDcursorRight>:

//Moves cursor by n poisitions left
void LCDcursorRight(uint8_t n)
{
    3374:	df 93       	push	r29
    3376:	cf 93       	push	r28
    3378:	00 d0       	rcall	.+0      	; 0x337a <LCDcursorRight+0x6>
    337a:	cd b7       	in	r28, 0x3d	; 61
    337c:	de b7       	in	r29, 0x3e	; 62
    337e:	8a 83       	std	Y+2, r24	; 0x02
uint8_t i;

	for (i=0;i<n;i++)
    3380:	19 82       	std	Y+1, r1	; 0x01
    3382:	06 c0       	rjmp	.+12     	; 0x3390 <LCDcursorRight+0x1c>
	{
		LCDsendCommand(0x14);
    3384:	84 e1       	ldi	r24, 0x14	; 20
    3386:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
//Moves cursor by n poisitions left
void LCDcursorRight(uint8_t n)
{
uint8_t i;

	for (i=0;i<n;i++)
    338a:	89 81       	ldd	r24, Y+1	; 0x01
    338c:	8f 5f       	subi	r24, 0xFF	; 255
    338e:	89 83       	std	Y+1, r24	; 0x01
    3390:	99 81       	ldd	r25, Y+1	; 0x01
    3392:	8a 81       	ldd	r24, Y+2	; 0x02
    3394:	98 17       	cp	r25, r24
    3396:	b0 f3       	brcs	.-20     	; 0x3384 <LCDcursorRight+0x10>
	{
		LCDsendCommand(0x14);
	}
}
    3398:	0f 90       	pop	r0
    339a:	0f 90       	pop	r0
    339c:	cf 91       	pop	r28
    339e:	df 91       	pop	r29
    33a0:	08 95       	ret

000033a2 <CopyStringtoLCD>:

//Copies string from flash memory to LCD at x y position
void CopyStringtoLCD(const uint8_t *FlashLoc, uint8_t x, uint8_t y)
{
    33a2:	df 93       	push	r29
    33a4:	cf 93       	push	r28
    33a6:	cd b7       	in	r28, 0x3d	; 61
    33a8:	de b7       	in	r29, 0x3e	; 62
    33aa:	2b 97       	sbiw	r28, 0x0b	; 11
    33ac:	0f b6       	in	r0, 0x3f	; 63
    33ae:	f8 94       	cli
    33b0:	de bf       	out	0x3e, r29	; 62
    33b2:	0f be       	out	0x3f, r0	; 63
    33b4:	cd bf       	out	0x3d, r28	; 61
    33b6:	99 87       	std	Y+9, r25	; 0x09
    33b8:	88 87       	std	Y+8, r24	; 0x08
    33ba:	6a 87       	std	Y+10, r22	; 0x0a
    33bc:	4b 87       	std	Y+11, r20	; 0x0b
	uint8_t i;
	LCDGotoXY(x,y);
    33be:	6b 85       	ldd	r22, Y+11	; 0x0b
    33c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    33c2:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <LCDGotoXY>
	for(i=0;(uint8_t)pgm_read_byte(&FlashLoc[i]);i++)
    33c6:	1f 82       	std	Y+7, r1	; 0x07
    33c8:	13 c0       	rjmp	.+38     	; 0x33f0 <CopyStringtoLCD+0x4e>
	{
		LCDsendChar((uint8_t)pgm_read_byte(&FlashLoc[i]));
    33ca:	8f 81       	ldd	r24, Y+7	; 0x07
    33cc:	28 2f       	mov	r18, r24
    33ce:	30 e0       	ldi	r19, 0x00	; 0
    33d0:	88 85       	ldd	r24, Y+8	; 0x08
    33d2:	99 85       	ldd	r25, Y+9	; 0x09
    33d4:	82 0f       	add	r24, r18
    33d6:	93 1f       	adc	r25, r19
    33d8:	9e 83       	std	Y+6, r25	; 0x06
    33da:	8d 83       	std	Y+5, r24	; 0x05
    33dc:	ed 81       	ldd	r30, Y+5	; 0x05
    33de:	fe 81       	ldd	r31, Y+6	; 0x06
    33e0:	84 91       	lpm	r24, Z+
    33e2:	8c 83       	std	Y+4, r24	; 0x04
    33e4:	8c 81       	ldd	r24, Y+4	; 0x04
    33e6:	0e 94 ad 14 	call	0x295a	; 0x295a <LCDsendChar>
//Copies string from flash memory to LCD at x y position
void CopyStringtoLCD(const uint8_t *FlashLoc, uint8_t x, uint8_t y)
{
	uint8_t i;
	LCDGotoXY(x,y);
	for(i=0;(uint8_t)pgm_read_byte(&FlashLoc[i]);i++)
    33ea:	8f 81       	ldd	r24, Y+7	; 0x07
    33ec:	8f 5f       	subi	r24, 0xFF	; 255
    33ee:	8f 83       	std	Y+7, r24	; 0x07
    33f0:	8f 81       	ldd	r24, Y+7	; 0x07
    33f2:	28 2f       	mov	r18, r24
    33f4:	30 e0       	ldi	r19, 0x00	; 0
    33f6:	88 85       	ldd	r24, Y+8	; 0x08
    33f8:	99 85       	ldd	r25, Y+9	; 0x09
    33fa:	82 0f       	add	r24, r18
    33fc:	93 1f       	adc	r25, r19
    33fe:	9b 83       	std	Y+3, r25	; 0x03
    3400:	8a 83       	std	Y+2, r24	; 0x02
    3402:	ea 81       	ldd	r30, Y+2	; 0x02
    3404:	fb 81       	ldd	r31, Y+3	; 0x03
    3406:	84 91       	lpm	r24, Z+
    3408:	89 83       	std	Y+1, r24	; 0x01
    340a:	89 81       	ldd	r24, Y+1	; 0x01
    340c:	88 23       	and	r24, r24
    340e:	e9 f6       	brne	.-70     	; 0x33ca <CopyStringtoLCD+0x28>
	{
		LCDsendChar((uint8_t)pgm_read_byte(&FlashLoc[i]));
	}
}
    3410:	2b 96       	adiw	r28, 0x0b	; 11
    3412:	0f b6       	in	r0, 0x3f	; 63
    3414:	f8 94       	cli
    3416:	de bf       	out	0x3e, r29	; 62
    3418:	0f be       	out	0x3f, r0	; 63
    341a:	cd bf       	out	0x3d, r28	; 61
    341c:	cf 91       	pop	r28
    341e:	df 91       	pop	r29
    3420:	08 95       	ret

00003422 <LCDdefinechar>:

//defines char symbol in CGRAM
void LCDdefinechar(const uint8_t *pc, uint8_t code)
{
    3422:	df 93       	push	r29
    3424:	cf 93       	push	r28
    3426:	cd b7       	in	r28, 0x3d	; 61
    3428:	de b7       	in	r29, 0x3e	; 62
    342a:	29 97       	sbiw	r28, 0x09	; 9
    342c:	0f b6       	in	r0, 0x3f	; 63
    342e:	f8 94       	cli
    3430:	de bf       	out	0x3e, r29	; 62
    3432:	0f be       	out	0x3f, r0	; 63
    3434:	cd bf       	out	0x3d, r28	; 61
    3436:	98 87       	std	Y+8, r25	; 0x08
    3438:	8f 83       	std	Y+7, r24	; 0x07
    343a:	69 87       	std	Y+9, r22	; 0x09
	uint8_t a;
	uint16_t i;
	a=(code<<3)|0x40;
    343c:	89 85       	ldd	r24, Y+9	; 0x09
    343e:	88 2f       	mov	r24, r24
    3440:	90 e0       	ldi	r25, 0x00	; 0
    3442:	88 0f       	add	r24, r24
    3444:	99 1f       	adc	r25, r25
    3446:	88 0f       	add	r24, r24
    3448:	99 1f       	adc	r25, r25
    344a:	88 0f       	add	r24, r24
    344c:	99 1f       	adc	r25, r25
    344e:	80 64       	ori	r24, 0x40	; 64
    3450:	8e 83       	std	Y+6, r24	; 0x06
	for (i=0; i<8; i++){
    3452:	1d 82       	std	Y+5, r1	; 0x05
    3454:	1c 82       	std	Y+4, r1	; 0x04
    3456:	1b c0       	rjmp	.+54     	; 0x348e <LCDdefinechar+0x6c>
		LCDsendCommand(a++);
    3458:	9e 81       	ldd	r25, Y+6	; 0x06
    345a:	8e 81       	ldd	r24, Y+6	; 0x06
    345c:	8f 5f       	subi	r24, 0xFF	; 255
    345e:	8e 83       	std	Y+6, r24	; 0x06
    3460:	89 2f       	mov	r24, r25
    3462:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <LCDsendCommand>
		LCDsendChar((uint8_t)pgm_read_byte(&pc[i]));
    3466:	2f 81       	ldd	r18, Y+7	; 0x07
    3468:	38 85       	ldd	r19, Y+8	; 0x08
    346a:	8c 81       	ldd	r24, Y+4	; 0x04
    346c:	9d 81       	ldd	r25, Y+5	; 0x05
    346e:	82 0f       	add	r24, r18
    3470:	93 1f       	adc	r25, r19
    3472:	9b 83       	std	Y+3, r25	; 0x03
    3474:	8a 83       	std	Y+2, r24	; 0x02
    3476:	ea 81       	ldd	r30, Y+2	; 0x02
    3478:	fb 81       	ldd	r31, Y+3	; 0x03
    347a:	84 91       	lpm	r24, Z+
    347c:	89 83       	std	Y+1, r24	; 0x01
    347e:	89 81       	ldd	r24, Y+1	; 0x01
    3480:	0e 94 ad 14 	call	0x295a	; 0x295a <LCDsendChar>
void LCDdefinechar(const uint8_t *pc, uint8_t code)
{
	uint8_t a;
	uint16_t i;
	a=(code<<3)|0x40;
	for (i=0; i<8; i++){
    3484:	8c 81       	ldd	r24, Y+4	; 0x04
    3486:	9d 81       	ldd	r25, Y+5	; 0x05
    3488:	01 96       	adiw	r24, 0x01	; 1
    348a:	9d 83       	std	Y+5, r25	; 0x05
    348c:	8c 83       	std	Y+4, r24	; 0x04
    348e:	8c 81       	ldd	r24, Y+4	; 0x04
    3490:	9d 81       	ldd	r25, Y+5	; 0x05
    3492:	88 30       	cpi	r24, 0x08	; 8
    3494:	91 05       	cpc	r25, r1
    3496:	00 f3       	brcs	.-64     	; 0x3458 <LCDdefinechar+0x36>
		LCDsendCommand(a++);
		LCDsendChar((uint8_t)pgm_read_byte(&pc[i]));
		}
}
    3498:	29 96       	adiw	r28, 0x09	; 9
    349a:	0f b6       	in	r0, 0x3f	; 63
    349c:	f8 94       	cli
    349e:	de bf       	out	0x3e, r29	; 62
    34a0:	0f be       	out	0x3f, r0	; 63
    34a2:	cd bf       	out	0x3d, r28	; 61
    34a4:	cf 91       	pop	r28
    34a6:	df 91       	pop	r29
    34a8:	08 95       	ret

000034aa <__vector_14>:
uint8_t jednostka[2] = {0xDF,67};


//przerwanie z przetwornika ADC
SIGNAL(SIG_ADC)
{
    34aa:	1f 92       	push	r1
    34ac:	0f 92       	push	r0
    34ae:	0f b6       	in	r0, 0x3f	; 63
    34b0:	0f 92       	push	r0
    34b2:	11 24       	eor	r1, r1
    34b4:	2f 93       	push	r18
    34b6:	3f 93       	push	r19
    34b8:	4f 93       	push	r20
    34ba:	5f 93       	push	r21
    34bc:	6f 93       	push	r22
    34be:	7f 93       	push	r23
    34c0:	8f 93       	push	r24
    34c2:	9f 93       	push	r25
    34c4:	af 93       	push	r26
    34c6:	bf 93       	push	r27
    34c8:	ef 93       	push	r30
    34ca:	ff 93       	push	r31
    34cc:	df 93       	push	r29
    34ce:	cf 93       	push	r28
    34d0:	cd b7       	in	r28, 0x3d	; 61
    34d2:	de b7       	in	r29, 0x3e	; 62
  	value_low = ADCL;
    34d4:	e4 e2       	ldi	r30, 0x24	; 36
    34d6:	f0 e0       	ldi	r31, 0x00	; 0
    34d8:	80 81       	ld	r24, Z
    34da:	88 2f       	mov	r24, r24
    34dc:	90 e0       	ldi	r25, 0x00	; 0
    34de:	90 93 85 00 	sts	0x0085, r25
    34e2:	80 93 84 00 	sts	0x0084, r24
	value_high = ADCH;
    34e6:	e5 e2       	ldi	r30, 0x25	; 37
    34e8:	f0 e0       	ldi	r31, 0x00	; 0
    34ea:	80 81       	ld	r24, Z
    34ec:	88 2f       	mov	r24, r24
    34ee:	90 e0       	ldi	r25, 0x00	; 0
    34f0:	90 93 83 00 	sts	0x0083, r25
    34f4:	80 93 82 00 	sts	0x0082, r24
	value = ((value_high<<2)|(value_low>>6));
    34f8:	80 91 82 00 	lds	r24, 0x0082
    34fc:	90 91 83 00 	lds	r25, 0x0083
    3500:	9c 01       	movw	r18, r24
    3502:	22 0f       	add	r18, r18
    3504:	33 1f       	adc	r19, r19
    3506:	22 0f       	add	r18, r18
    3508:	33 1f       	adc	r19, r19
    350a:	80 91 84 00 	lds	r24, 0x0084
    350e:	90 91 85 00 	lds	r25, 0x0085
    3512:	00 24       	eor	r0, r0
    3514:	88 0f       	add	r24, r24
    3516:	99 1f       	adc	r25, r25
    3518:	00 1c       	adc	r0, r0
    351a:	88 0f       	add	r24, r24
    351c:	99 1f       	adc	r25, r25
    351e:	00 1c       	adc	r0, r0
    3520:	89 2f       	mov	r24, r25
    3522:	90 2d       	mov	r25, r0
    3524:	82 2b       	or	r24, r18
    3526:	93 2b       	or	r25, r19
    3528:	90 93 87 00 	sts	0x0087, r25
    352c:	80 93 86 00 	sts	0x0086, r24
	itoa(value,themp,10);
    3530:	20 91 86 00 	lds	r18, 0x0086
    3534:	30 91 87 00 	lds	r19, 0x0087
    3538:	8e e7       	ldi	r24, 0x7E	; 126
    353a:	90 e0       	ldi	r25, 0x00	; 0
    353c:	4a e0       	ldi	r20, 0x0A	; 10
    353e:	50 e0       	ldi	r21, 0x00	; 0
    3540:	bc 01       	movw	r22, r24
    3542:	c9 01       	movw	r24, r18
    3544:	0e 94 6c 20 	call	0x40d8	; 0x40d8 <itoa>

	LCDGotoXY(6,1);
    3548:	61 e0       	ldi	r22, 0x01	; 1
    354a:	86 e0       	ldi	r24, 0x06	; 6
    354c:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <LCDGotoXY>
    LCDstring(themp,2);
    3550:	8e e7       	ldi	r24, 0x7E	; 126
    3552:	90 e0       	ldi	r25, 0x00	; 0
    3554:	62 e0       	ldi	r22, 0x02	; 2
    3556:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <LCDstring>
	LCDstring(kropka,1);
    355a:	82 e7       	ldi	r24, 0x72	; 114
    355c:	90 e0       	ldi	r25, 0x00	; 0
    355e:	61 e0       	ldi	r22, 0x01	; 1
    3560:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <LCDstring>
	LCDstring(themp+2,1);
    3564:	80 e8       	ldi	r24, 0x80	; 128
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	61 e0       	ldi	r22, 0x01	; 1
    356a:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <LCDstring>
	ADCSRA = _BV(ADEN)|_BV(ADIE)|_BV(ADSC)|_BV(ADPS1)|_BV(ADPS0);
    356e:	e6 e2       	ldi	r30, 0x26	; 38
    3570:	f0 e0       	ldi	r31, 0x00	; 0
    3572:	8b ec       	ldi	r24, 0xCB	; 203
    3574:	80 83       	st	Z, r24
}
    3576:	cf 91       	pop	r28
    3578:	df 91       	pop	r29
    357a:	ff 91       	pop	r31
    357c:	ef 91       	pop	r30
    357e:	bf 91       	pop	r27
    3580:	af 91       	pop	r26
    3582:	9f 91       	pop	r25
    3584:	8f 91       	pop	r24
    3586:	7f 91       	pop	r23
    3588:	6f 91       	pop	r22
    358a:	5f 91       	pop	r21
    358c:	4f 91       	pop	r20
    358e:	3f 91       	pop	r19
    3590:	2f 91       	pop	r18
    3592:	0f 90       	pop	r0
    3594:	0f be       	out	0x3f, r0	; 63
    3596:	0f 90       	pop	r0
    3598:	1f 90       	pop	r1
    359a:	18 95       	reti

0000359c <main>:


int main(void)
{
    359c:	df 93       	push	r29
    359e:	cf 93       	push	r28
    35a0:	cd b7       	in	r28, 0x3d	; 61
    35a2:	de b7       	in	r29, 0x3e	; 62
//LCD
LCDinit();
    35a4:	0e 94 49 00 	call	0x92	; 0x92 <LCDinit>
LCDcursorOFF();
    35a8:	0e 94 85 19 	call	0x330a	; 0x330a <LCDcursorOFF>
LCDGotoXY(1,0);
    35ac:	60 e0       	ldi	r22, 0x00	; 0
    35ae:	81 e0       	ldi	r24, 0x01	; 1
    35b0:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <LCDGotoXY>
LCDstring(tytul,14);
    35b4:	80 e6       	ldi	r24, 0x60	; 96
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	6e e0       	ldi	r22, 0x0E	; 14
    35ba:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <LCDstring>
LCDGotoXY(4,1);
    35be:	61 e0       	ldi	r22, 0x01	; 1
    35c0:	84 e0       	ldi	r24, 0x04	; 4
    35c2:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <LCDGotoXY>
LCDstring(wartosc,2);
    35c6:	8f e6       	ldi	r24, 0x6F	; 111
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	62 e0       	ldi	r22, 0x02	; 2
    35cc:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <LCDstring>
LCDGotoXY(10,1);
    35d0:	61 e0       	ldi	r22, 0x01	; 1
    35d2:	8a e0       	ldi	r24, 0x0A	; 10
    35d4:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <LCDGotoXY>
LCDstring(jednostka,2);
    35d8:	84 e7       	ldi	r24, 0x74	; 116
    35da:	90 e0       	ldi	r25, 0x00	; 0
    35dc:	62 e0       	ldi	r22, 0x02	; 2
    35de:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <LCDstring>

//Sleep mode
set_sleep_mode(SLEEP_MODE_ADC);
    35e2:	a5 e5       	ldi	r26, 0x55	; 85
    35e4:	b0 e0       	ldi	r27, 0x00	; 0
    35e6:	e5 e5       	ldi	r30, 0x55	; 85
    35e8:	f0 e0       	ldi	r31, 0x00	; 0
    35ea:	80 81       	ld	r24, Z
    35ec:	8f 74       	andi	r24, 0x4F	; 79
    35ee:	80 61       	ori	r24, 0x10	; 16
    35f0:	8c 93       	st	X, r24

//ADC
ADMUX  = _BV(ADLAR);
    35f2:	e7 e2       	ldi	r30, 0x27	; 39
    35f4:	f0 e0       	ldi	r31, 0x00	; 0
    35f6:	80 e2       	ldi	r24, 0x20	; 32
    35f8:	80 83       	st	Z, r24
ADCSRA = _BV(ADEN)|_BV(ADIE)|_BV(ADSC)|_BV(ADPS1)|_BV(ADPS0);
    35fa:	e6 e2       	ldi	r30, 0x26	; 38
    35fc:	f0 e0       	ldi	r31, 0x00	; 0
    35fe:	8b ec       	ldi	r24, 0xCB	; 203
    3600:	80 83       	st	Z, r24
//Przerwania wlaczone
sei();
    3602:	78 94       	sei
//Sleep
sleep_mode();
    3604:	a5 e5       	ldi	r26, 0x55	; 85
    3606:	b0 e0       	ldi	r27, 0x00	; 0
    3608:	e5 e5       	ldi	r30, 0x55	; 85
    360a:	f0 e0       	ldi	r31, 0x00	; 0
    360c:	80 81       	ld	r24, Z
    360e:	80 64       	ori	r24, 0x40	; 64
    3610:	8c 93       	st	X, r24
    3612:	88 95       	sleep
    3614:	a5 e5       	ldi	r26, 0x55	; 85
    3616:	b0 e0       	ldi	r27, 0x00	; 0
    3618:	e5 e5       	ldi	r30, 0x55	; 85
    361a:	f0 e0       	ldi	r31, 0x00	; 0
    361c:	80 81       	ld	r24, Z
    361e:	8f 7b       	andi	r24, 0xBF	; 191
    3620:	8c 93       	st	X, r24
    3622:	ff cf       	rjmp	.-2      	; 0x3622 <main+0x86>

00003624 <__fixunssfsi>:
    3624:	ef 92       	push	r14
    3626:	ff 92       	push	r15
    3628:	0f 93       	push	r16
    362a:	1f 93       	push	r17
    362c:	7b 01       	movw	r14, r22
    362e:	8c 01       	movw	r16, r24
    3630:	20 e0       	ldi	r18, 0x00	; 0
    3632:	30 e0       	ldi	r19, 0x00	; 0
    3634:	40 e0       	ldi	r20, 0x00	; 0
    3636:	5f e4       	ldi	r21, 0x4F	; 79
    3638:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <__gesf2>
    363c:	88 23       	and	r24, r24
    363e:	8c f0       	brlt	.+34     	; 0x3662 <__fixunssfsi+0x3e>
    3640:	20 e0       	ldi	r18, 0x00	; 0
    3642:	30 e0       	ldi	r19, 0x00	; 0
    3644:	40 e0       	ldi	r20, 0x00	; 0
    3646:	5f e4       	ldi	r21, 0x4F	; 79
    3648:	c8 01       	movw	r24, r16
    364a:	b7 01       	movw	r22, r14
    364c:	0e 94 8a 1c 	call	0x3914	; 0x3914 <__subsf3>
    3650:	0e 94 72 1e 	call	0x3ce4	; 0x3ce4 <__fixsfsi>
    3654:	9b 01       	movw	r18, r22
    3656:	ac 01       	movw	r20, r24
    3658:	20 50       	subi	r18, 0x00	; 0
    365a:	30 40       	sbci	r19, 0x00	; 0
    365c:	40 40       	sbci	r20, 0x00	; 0
    365e:	50 48       	sbci	r21, 0x80	; 128
    3660:	06 c0       	rjmp	.+12     	; 0x366e <__fixunssfsi+0x4a>
    3662:	c8 01       	movw	r24, r16
    3664:	b7 01       	movw	r22, r14
    3666:	0e 94 72 1e 	call	0x3ce4	; 0x3ce4 <__fixsfsi>
    366a:	9b 01       	movw	r18, r22
    366c:	ac 01       	movw	r20, r24
    366e:	b9 01       	movw	r22, r18
    3670:	ca 01       	movw	r24, r20
    3672:	1f 91       	pop	r17
    3674:	0f 91       	pop	r16
    3676:	ff 90       	pop	r15
    3678:	ef 90       	pop	r14
    367a:	08 95       	ret

0000367c <_fpadd_parts>:
    367c:	a0 e0       	ldi	r26, 0x00	; 0
    367e:	b0 e0       	ldi	r27, 0x00	; 0
    3680:	e4 e4       	ldi	r30, 0x44	; 68
    3682:	fb e1       	ldi	r31, 0x1B	; 27
    3684:	0c 94 9d 20 	jmp	0x413a	; 0x413a <__prologue_saves__>
    3688:	dc 01       	movw	r26, r24
    368a:	2b 01       	movw	r4, r22
    368c:	fa 01       	movw	r30, r20
    368e:	9c 91       	ld	r25, X
    3690:	92 30       	cpi	r25, 0x02	; 2
    3692:	08 f4       	brcc	.+2      	; 0x3696 <_fpadd_parts+0x1a>
    3694:	39 c1       	rjmp	.+626    	; 0x3908 <_fpadd_parts+0x28c>
    3696:	eb 01       	movw	r28, r22
    3698:	88 81       	ld	r24, Y
    369a:	82 30       	cpi	r24, 0x02	; 2
    369c:	08 f4       	brcc	.+2      	; 0x36a0 <_fpadd_parts+0x24>
    369e:	33 c1       	rjmp	.+614    	; 0x3906 <_fpadd_parts+0x28a>
    36a0:	94 30       	cpi	r25, 0x04	; 4
    36a2:	69 f4       	brne	.+26     	; 0x36be <_fpadd_parts+0x42>
    36a4:	84 30       	cpi	r24, 0x04	; 4
    36a6:	09 f0       	breq	.+2      	; 0x36aa <_fpadd_parts+0x2e>
    36a8:	2f c1       	rjmp	.+606    	; 0x3908 <_fpadd_parts+0x28c>
    36aa:	11 96       	adiw	r26, 0x01	; 1
    36ac:	9c 91       	ld	r25, X
    36ae:	11 97       	sbiw	r26, 0x01	; 1
    36b0:	89 81       	ldd	r24, Y+1	; 0x01
    36b2:	98 17       	cp	r25, r24
    36b4:	09 f4       	brne	.+2      	; 0x36b8 <_fpadd_parts+0x3c>
    36b6:	28 c1       	rjmp	.+592    	; 0x3908 <_fpadd_parts+0x28c>
    36b8:	a6 e7       	ldi	r26, 0x76	; 118
    36ba:	b0 e0       	ldi	r27, 0x00	; 0
    36bc:	25 c1       	rjmp	.+586    	; 0x3908 <_fpadd_parts+0x28c>
    36be:	84 30       	cpi	r24, 0x04	; 4
    36c0:	09 f4       	brne	.+2      	; 0x36c4 <_fpadd_parts+0x48>
    36c2:	21 c1       	rjmp	.+578    	; 0x3906 <_fpadd_parts+0x28a>
    36c4:	82 30       	cpi	r24, 0x02	; 2
    36c6:	a9 f4       	brne	.+42     	; 0x36f2 <_fpadd_parts+0x76>
    36c8:	92 30       	cpi	r25, 0x02	; 2
    36ca:	09 f0       	breq	.+2      	; 0x36ce <_fpadd_parts+0x52>
    36cc:	1d c1       	rjmp	.+570    	; 0x3908 <_fpadd_parts+0x28c>
    36ce:	9a 01       	movw	r18, r20
    36d0:	ad 01       	movw	r20, r26
    36d2:	88 e0       	ldi	r24, 0x08	; 8
    36d4:	ea 01       	movw	r28, r20
    36d6:	09 90       	ld	r0, Y+
    36d8:	ae 01       	movw	r20, r28
    36da:	e9 01       	movw	r28, r18
    36dc:	09 92       	st	Y+, r0
    36de:	9e 01       	movw	r18, r28
    36e0:	81 50       	subi	r24, 0x01	; 1
    36e2:	c1 f7       	brne	.-16     	; 0x36d4 <_fpadd_parts+0x58>
    36e4:	e2 01       	movw	r28, r4
    36e6:	89 81       	ldd	r24, Y+1	; 0x01
    36e8:	11 96       	adiw	r26, 0x01	; 1
    36ea:	9c 91       	ld	r25, X
    36ec:	89 23       	and	r24, r25
    36ee:	81 83       	std	Z+1, r24	; 0x01
    36f0:	08 c1       	rjmp	.+528    	; 0x3902 <_fpadd_parts+0x286>
    36f2:	92 30       	cpi	r25, 0x02	; 2
    36f4:	09 f4       	brne	.+2      	; 0x36f8 <_fpadd_parts+0x7c>
    36f6:	07 c1       	rjmp	.+526    	; 0x3906 <_fpadd_parts+0x28a>
    36f8:	12 96       	adiw	r26, 0x02	; 2
    36fa:	2d 90       	ld	r2, X+
    36fc:	3c 90       	ld	r3, X
    36fe:	13 97       	sbiw	r26, 0x03	; 3
    3700:	eb 01       	movw	r28, r22
    3702:	8a 81       	ldd	r24, Y+2	; 0x02
    3704:	9b 81       	ldd	r25, Y+3	; 0x03
    3706:	14 96       	adiw	r26, 0x04	; 4
    3708:	ad 90       	ld	r10, X+
    370a:	bd 90       	ld	r11, X+
    370c:	cd 90       	ld	r12, X+
    370e:	dc 90       	ld	r13, X
    3710:	17 97       	sbiw	r26, 0x07	; 7
    3712:	ec 80       	ldd	r14, Y+4	; 0x04
    3714:	fd 80       	ldd	r15, Y+5	; 0x05
    3716:	0e 81       	ldd	r16, Y+6	; 0x06
    3718:	1f 81       	ldd	r17, Y+7	; 0x07
    371a:	91 01       	movw	r18, r2
    371c:	28 1b       	sub	r18, r24
    371e:	39 0b       	sbc	r19, r25
    3720:	b9 01       	movw	r22, r18
    3722:	37 ff       	sbrs	r19, 7
    3724:	04 c0       	rjmp	.+8      	; 0x372e <_fpadd_parts+0xb2>
    3726:	66 27       	eor	r22, r22
    3728:	77 27       	eor	r23, r23
    372a:	62 1b       	sub	r22, r18
    372c:	73 0b       	sbc	r23, r19
    372e:	60 32       	cpi	r22, 0x20	; 32
    3730:	71 05       	cpc	r23, r1
    3732:	0c f0       	brlt	.+2      	; 0x3736 <_fpadd_parts+0xba>
    3734:	61 c0       	rjmp	.+194    	; 0x37f8 <_fpadd_parts+0x17c>
    3736:	12 16       	cp	r1, r18
    3738:	13 06       	cpc	r1, r19
    373a:	6c f5       	brge	.+90     	; 0x3796 <_fpadd_parts+0x11a>
    373c:	37 01       	movw	r6, r14
    373e:	48 01       	movw	r8, r16
    3740:	06 2e       	mov	r0, r22
    3742:	04 c0       	rjmp	.+8      	; 0x374c <_fpadd_parts+0xd0>
    3744:	96 94       	lsr	r9
    3746:	87 94       	ror	r8
    3748:	77 94       	ror	r7
    374a:	67 94       	ror	r6
    374c:	0a 94       	dec	r0
    374e:	d2 f7       	brpl	.-12     	; 0x3744 <_fpadd_parts+0xc8>
    3750:	21 e0       	ldi	r18, 0x01	; 1
    3752:	30 e0       	ldi	r19, 0x00	; 0
    3754:	40 e0       	ldi	r20, 0x00	; 0
    3756:	50 e0       	ldi	r21, 0x00	; 0
    3758:	04 c0       	rjmp	.+8      	; 0x3762 <_fpadd_parts+0xe6>
    375a:	22 0f       	add	r18, r18
    375c:	33 1f       	adc	r19, r19
    375e:	44 1f       	adc	r20, r20
    3760:	55 1f       	adc	r21, r21
    3762:	6a 95       	dec	r22
    3764:	d2 f7       	brpl	.-12     	; 0x375a <_fpadd_parts+0xde>
    3766:	21 50       	subi	r18, 0x01	; 1
    3768:	30 40       	sbci	r19, 0x00	; 0
    376a:	40 40       	sbci	r20, 0x00	; 0
    376c:	50 40       	sbci	r21, 0x00	; 0
    376e:	2e 21       	and	r18, r14
    3770:	3f 21       	and	r19, r15
    3772:	40 23       	and	r20, r16
    3774:	51 23       	and	r21, r17
    3776:	21 15       	cp	r18, r1
    3778:	31 05       	cpc	r19, r1
    377a:	41 05       	cpc	r20, r1
    377c:	51 05       	cpc	r21, r1
    377e:	21 f0       	breq	.+8      	; 0x3788 <_fpadd_parts+0x10c>
    3780:	21 e0       	ldi	r18, 0x01	; 1
    3782:	30 e0       	ldi	r19, 0x00	; 0
    3784:	40 e0       	ldi	r20, 0x00	; 0
    3786:	50 e0       	ldi	r21, 0x00	; 0
    3788:	79 01       	movw	r14, r18
    378a:	8a 01       	movw	r16, r20
    378c:	e6 28       	or	r14, r6
    378e:	f7 28       	or	r15, r7
    3790:	08 29       	or	r16, r8
    3792:	19 29       	or	r17, r9
    3794:	3c c0       	rjmp	.+120    	; 0x380e <_fpadd_parts+0x192>
    3796:	23 2b       	or	r18, r19
    3798:	d1 f1       	breq	.+116    	; 0x380e <_fpadd_parts+0x192>
    379a:	26 0e       	add	r2, r22
    379c:	37 1e       	adc	r3, r23
    379e:	35 01       	movw	r6, r10
    37a0:	46 01       	movw	r8, r12
    37a2:	06 2e       	mov	r0, r22
    37a4:	04 c0       	rjmp	.+8      	; 0x37ae <_fpadd_parts+0x132>
    37a6:	96 94       	lsr	r9
    37a8:	87 94       	ror	r8
    37aa:	77 94       	ror	r7
    37ac:	67 94       	ror	r6
    37ae:	0a 94       	dec	r0
    37b0:	d2 f7       	brpl	.-12     	; 0x37a6 <_fpadd_parts+0x12a>
    37b2:	21 e0       	ldi	r18, 0x01	; 1
    37b4:	30 e0       	ldi	r19, 0x00	; 0
    37b6:	40 e0       	ldi	r20, 0x00	; 0
    37b8:	50 e0       	ldi	r21, 0x00	; 0
    37ba:	04 c0       	rjmp	.+8      	; 0x37c4 <_fpadd_parts+0x148>
    37bc:	22 0f       	add	r18, r18
    37be:	33 1f       	adc	r19, r19
    37c0:	44 1f       	adc	r20, r20
    37c2:	55 1f       	adc	r21, r21
    37c4:	6a 95       	dec	r22
    37c6:	d2 f7       	brpl	.-12     	; 0x37bc <_fpadd_parts+0x140>
    37c8:	21 50       	subi	r18, 0x01	; 1
    37ca:	30 40       	sbci	r19, 0x00	; 0
    37cc:	40 40       	sbci	r20, 0x00	; 0
    37ce:	50 40       	sbci	r21, 0x00	; 0
    37d0:	2a 21       	and	r18, r10
    37d2:	3b 21       	and	r19, r11
    37d4:	4c 21       	and	r20, r12
    37d6:	5d 21       	and	r21, r13
    37d8:	21 15       	cp	r18, r1
    37da:	31 05       	cpc	r19, r1
    37dc:	41 05       	cpc	r20, r1
    37de:	51 05       	cpc	r21, r1
    37e0:	21 f0       	breq	.+8      	; 0x37ea <_fpadd_parts+0x16e>
    37e2:	21 e0       	ldi	r18, 0x01	; 1
    37e4:	30 e0       	ldi	r19, 0x00	; 0
    37e6:	40 e0       	ldi	r20, 0x00	; 0
    37e8:	50 e0       	ldi	r21, 0x00	; 0
    37ea:	59 01       	movw	r10, r18
    37ec:	6a 01       	movw	r12, r20
    37ee:	a6 28       	or	r10, r6
    37f0:	b7 28       	or	r11, r7
    37f2:	c8 28       	or	r12, r8
    37f4:	d9 28       	or	r13, r9
    37f6:	0b c0       	rjmp	.+22     	; 0x380e <_fpadd_parts+0x192>
    37f8:	82 15       	cp	r24, r2
    37fa:	93 05       	cpc	r25, r3
    37fc:	2c f0       	brlt	.+10     	; 0x3808 <_fpadd_parts+0x18c>
    37fe:	1c 01       	movw	r2, r24
    3800:	aa 24       	eor	r10, r10
    3802:	bb 24       	eor	r11, r11
    3804:	65 01       	movw	r12, r10
    3806:	03 c0       	rjmp	.+6      	; 0x380e <_fpadd_parts+0x192>
    3808:	ee 24       	eor	r14, r14
    380a:	ff 24       	eor	r15, r15
    380c:	87 01       	movw	r16, r14
    380e:	11 96       	adiw	r26, 0x01	; 1
    3810:	9c 91       	ld	r25, X
    3812:	d2 01       	movw	r26, r4
    3814:	11 96       	adiw	r26, 0x01	; 1
    3816:	8c 91       	ld	r24, X
    3818:	98 17       	cp	r25, r24
    381a:	09 f4       	brne	.+2      	; 0x381e <_fpadd_parts+0x1a2>
    381c:	45 c0       	rjmp	.+138    	; 0x38a8 <_fpadd_parts+0x22c>
    381e:	99 23       	and	r25, r25
    3820:	39 f0       	breq	.+14     	; 0x3830 <_fpadd_parts+0x1b4>
    3822:	a8 01       	movw	r20, r16
    3824:	97 01       	movw	r18, r14
    3826:	2a 19       	sub	r18, r10
    3828:	3b 09       	sbc	r19, r11
    382a:	4c 09       	sbc	r20, r12
    382c:	5d 09       	sbc	r21, r13
    382e:	06 c0       	rjmp	.+12     	; 0x383c <_fpadd_parts+0x1c0>
    3830:	a6 01       	movw	r20, r12
    3832:	95 01       	movw	r18, r10
    3834:	2e 19       	sub	r18, r14
    3836:	3f 09       	sbc	r19, r15
    3838:	40 0b       	sbc	r20, r16
    383a:	51 0b       	sbc	r21, r17
    383c:	57 fd       	sbrc	r21, 7
    383e:	08 c0       	rjmp	.+16     	; 0x3850 <_fpadd_parts+0x1d4>
    3840:	11 82       	std	Z+1, r1	; 0x01
    3842:	33 82       	std	Z+3, r3	; 0x03
    3844:	22 82       	std	Z+2, r2	; 0x02
    3846:	24 83       	std	Z+4, r18	; 0x04
    3848:	35 83       	std	Z+5, r19	; 0x05
    384a:	46 83       	std	Z+6, r20	; 0x06
    384c:	57 83       	std	Z+7, r21	; 0x07
    384e:	1d c0       	rjmp	.+58     	; 0x388a <_fpadd_parts+0x20e>
    3850:	81 e0       	ldi	r24, 0x01	; 1
    3852:	81 83       	std	Z+1, r24	; 0x01
    3854:	33 82       	std	Z+3, r3	; 0x03
    3856:	22 82       	std	Z+2, r2	; 0x02
    3858:	88 27       	eor	r24, r24
    385a:	99 27       	eor	r25, r25
    385c:	dc 01       	movw	r26, r24
    385e:	82 1b       	sub	r24, r18
    3860:	93 0b       	sbc	r25, r19
    3862:	a4 0b       	sbc	r26, r20
    3864:	b5 0b       	sbc	r27, r21
    3866:	84 83       	std	Z+4, r24	; 0x04
    3868:	95 83       	std	Z+5, r25	; 0x05
    386a:	a6 83       	std	Z+6, r26	; 0x06
    386c:	b7 83       	std	Z+7, r27	; 0x07
    386e:	0d c0       	rjmp	.+26     	; 0x388a <_fpadd_parts+0x20e>
    3870:	22 0f       	add	r18, r18
    3872:	33 1f       	adc	r19, r19
    3874:	44 1f       	adc	r20, r20
    3876:	55 1f       	adc	r21, r21
    3878:	24 83       	std	Z+4, r18	; 0x04
    387a:	35 83       	std	Z+5, r19	; 0x05
    387c:	46 83       	std	Z+6, r20	; 0x06
    387e:	57 83       	std	Z+7, r21	; 0x07
    3880:	82 81       	ldd	r24, Z+2	; 0x02
    3882:	93 81       	ldd	r25, Z+3	; 0x03
    3884:	01 97       	sbiw	r24, 0x01	; 1
    3886:	93 83       	std	Z+3, r25	; 0x03
    3888:	82 83       	std	Z+2, r24	; 0x02
    388a:	24 81       	ldd	r18, Z+4	; 0x04
    388c:	35 81       	ldd	r19, Z+5	; 0x05
    388e:	46 81       	ldd	r20, Z+6	; 0x06
    3890:	57 81       	ldd	r21, Z+7	; 0x07
    3892:	da 01       	movw	r26, r20
    3894:	c9 01       	movw	r24, r18
    3896:	01 97       	sbiw	r24, 0x01	; 1
    3898:	a1 09       	sbc	r26, r1
    389a:	b1 09       	sbc	r27, r1
    389c:	8f 5f       	subi	r24, 0xFF	; 255
    389e:	9f 4f       	sbci	r25, 0xFF	; 255
    38a0:	af 4f       	sbci	r26, 0xFF	; 255
    38a2:	bf 43       	sbci	r27, 0x3F	; 63
    38a4:	28 f3       	brcs	.-54     	; 0x3870 <_fpadd_parts+0x1f4>
    38a6:	0b c0       	rjmp	.+22     	; 0x38be <_fpadd_parts+0x242>
    38a8:	91 83       	std	Z+1, r25	; 0x01
    38aa:	33 82       	std	Z+3, r3	; 0x03
    38ac:	22 82       	std	Z+2, r2	; 0x02
    38ae:	ea 0c       	add	r14, r10
    38b0:	fb 1c       	adc	r15, r11
    38b2:	0c 1d       	adc	r16, r12
    38b4:	1d 1d       	adc	r17, r13
    38b6:	e4 82       	std	Z+4, r14	; 0x04
    38b8:	f5 82       	std	Z+5, r15	; 0x05
    38ba:	06 83       	std	Z+6, r16	; 0x06
    38bc:	17 83       	std	Z+7, r17	; 0x07
    38be:	83 e0       	ldi	r24, 0x03	; 3
    38c0:	80 83       	st	Z, r24
    38c2:	24 81       	ldd	r18, Z+4	; 0x04
    38c4:	35 81       	ldd	r19, Z+5	; 0x05
    38c6:	46 81       	ldd	r20, Z+6	; 0x06
    38c8:	57 81       	ldd	r21, Z+7	; 0x07
    38ca:	57 ff       	sbrs	r21, 7
    38cc:	1a c0       	rjmp	.+52     	; 0x3902 <_fpadd_parts+0x286>
    38ce:	c9 01       	movw	r24, r18
    38d0:	aa 27       	eor	r26, r26
    38d2:	97 fd       	sbrc	r25, 7
    38d4:	a0 95       	com	r26
    38d6:	ba 2f       	mov	r27, r26
    38d8:	81 70       	andi	r24, 0x01	; 1
    38da:	90 70       	andi	r25, 0x00	; 0
    38dc:	a0 70       	andi	r26, 0x00	; 0
    38de:	b0 70       	andi	r27, 0x00	; 0
    38e0:	56 95       	lsr	r21
    38e2:	47 95       	ror	r20
    38e4:	37 95       	ror	r19
    38e6:	27 95       	ror	r18
    38e8:	82 2b       	or	r24, r18
    38ea:	93 2b       	or	r25, r19
    38ec:	a4 2b       	or	r26, r20
    38ee:	b5 2b       	or	r27, r21
    38f0:	84 83       	std	Z+4, r24	; 0x04
    38f2:	95 83       	std	Z+5, r25	; 0x05
    38f4:	a6 83       	std	Z+6, r26	; 0x06
    38f6:	b7 83       	std	Z+7, r27	; 0x07
    38f8:	82 81       	ldd	r24, Z+2	; 0x02
    38fa:	93 81       	ldd	r25, Z+3	; 0x03
    38fc:	01 96       	adiw	r24, 0x01	; 1
    38fe:	93 83       	std	Z+3, r25	; 0x03
    3900:	82 83       	std	Z+2, r24	; 0x02
    3902:	df 01       	movw	r26, r30
    3904:	01 c0       	rjmp	.+2      	; 0x3908 <_fpadd_parts+0x28c>
    3906:	d2 01       	movw	r26, r4
    3908:	cd 01       	movw	r24, r26
    390a:	cd b7       	in	r28, 0x3d	; 61
    390c:	de b7       	in	r29, 0x3e	; 62
    390e:	e2 e1       	ldi	r30, 0x12	; 18
    3910:	0c 94 b9 20 	jmp	0x4172	; 0x4172 <__epilogue_restores__>

00003914 <__subsf3>:
    3914:	a0 e2       	ldi	r26, 0x20	; 32
    3916:	b0 e0       	ldi	r27, 0x00	; 0
    3918:	e0 e9       	ldi	r30, 0x90	; 144
    391a:	fc e1       	ldi	r31, 0x1C	; 28
    391c:	0c 94 a9 20 	jmp	0x4152	; 0x4152 <__prologue_saves__+0x18>
    3920:	69 83       	std	Y+1, r22	; 0x01
    3922:	7a 83       	std	Y+2, r23	; 0x02
    3924:	8b 83       	std	Y+3, r24	; 0x03
    3926:	9c 83       	std	Y+4, r25	; 0x04
    3928:	2d 83       	std	Y+5, r18	; 0x05
    392a:	3e 83       	std	Y+6, r19	; 0x06
    392c:	4f 83       	std	Y+7, r20	; 0x07
    392e:	58 87       	std	Y+8, r21	; 0x08
    3930:	e9 e0       	ldi	r30, 0x09	; 9
    3932:	ee 2e       	mov	r14, r30
    3934:	f1 2c       	mov	r15, r1
    3936:	ec 0e       	add	r14, r28
    3938:	fd 1e       	adc	r15, r29
    393a:	b7 01       	movw	r22, r14
    393c:	ce 01       	movw	r24, r28
    393e:	01 96       	adiw	r24, 0x01	; 1
    3940:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3944:	8e 01       	movw	r16, r28
    3946:	0f 5e       	subi	r16, 0xEF	; 239
    3948:	1f 4f       	sbci	r17, 0xFF	; 255
    394a:	b8 01       	movw	r22, r16
    394c:	ce 01       	movw	r24, r28
    394e:	05 96       	adiw	r24, 0x05	; 5
    3950:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3954:	8a 89       	ldd	r24, Y+18	; 0x12
    3956:	91 e0       	ldi	r25, 0x01	; 1
    3958:	89 27       	eor	r24, r25
    395a:	8a 8b       	std	Y+18, r24	; 0x12
    395c:	ae 01       	movw	r20, r28
    395e:	47 5e       	subi	r20, 0xE7	; 231
    3960:	5f 4f       	sbci	r21, 0xFF	; 255
    3962:	b8 01       	movw	r22, r16
    3964:	c7 01       	movw	r24, r14
    3966:	0e 94 3e 1b 	call	0x367c	; 0x367c <_fpadd_parts>
    396a:	0e 94 c6 1e 	call	0x3d8c	; 0x3d8c <__pack_f>
    396e:	a0 96       	adiw	r28, 0x20	; 32
    3970:	e6 e0       	ldi	r30, 0x06	; 6
    3972:	0c 94 c5 20 	jmp	0x418a	; 0x418a <__epilogue_restores__+0x18>

00003976 <__addsf3>:
    3976:	a0 e2       	ldi	r26, 0x20	; 32
    3978:	b0 e0       	ldi	r27, 0x00	; 0
    397a:	e1 ec       	ldi	r30, 0xC1	; 193
    397c:	fc e1       	ldi	r31, 0x1C	; 28
    397e:	0c 94 a9 20 	jmp	0x4152	; 0x4152 <__prologue_saves__+0x18>
    3982:	69 83       	std	Y+1, r22	; 0x01
    3984:	7a 83       	std	Y+2, r23	; 0x02
    3986:	8b 83       	std	Y+3, r24	; 0x03
    3988:	9c 83       	std	Y+4, r25	; 0x04
    398a:	2d 83       	std	Y+5, r18	; 0x05
    398c:	3e 83       	std	Y+6, r19	; 0x06
    398e:	4f 83       	std	Y+7, r20	; 0x07
    3990:	58 87       	std	Y+8, r21	; 0x08
    3992:	f9 e0       	ldi	r31, 0x09	; 9
    3994:	ef 2e       	mov	r14, r31
    3996:	f1 2c       	mov	r15, r1
    3998:	ec 0e       	add	r14, r28
    399a:	fd 1e       	adc	r15, r29
    399c:	b7 01       	movw	r22, r14
    399e:	ce 01       	movw	r24, r28
    39a0:	01 96       	adiw	r24, 0x01	; 1
    39a2:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    39a6:	8e 01       	movw	r16, r28
    39a8:	0f 5e       	subi	r16, 0xEF	; 239
    39aa:	1f 4f       	sbci	r17, 0xFF	; 255
    39ac:	b8 01       	movw	r22, r16
    39ae:	ce 01       	movw	r24, r28
    39b0:	05 96       	adiw	r24, 0x05	; 5
    39b2:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    39b6:	ae 01       	movw	r20, r28
    39b8:	47 5e       	subi	r20, 0xE7	; 231
    39ba:	5f 4f       	sbci	r21, 0xFF	; 255
    39bc:	b8 01       	movw	r22, r16
    39be:	c7 01       	movw	r24, r14
    39c0:	0e 94 3e 1b 	call	0x367c	; 0x367c <_fpadd_parts>
    39c4:	0e 94 c6 1e 	call	0x3d8c	; 0x3d8c <__pack_f>
    39c8:	a0 96       	adiw	r28, 0x20	; 32
    39ca:	e6 e0       	ldi	r30, 0x06	; 6
    39cc:	0c 94 c5 20 	jmp	0x418a	; 0x418a <__epilogue_restores__+0x18>

000039d0 <__mulsf3>:
    39d0:	a0 e2       	ldi	r26, 0x20	; 32
    39d2:	b0 e0       	ldi	r27, 0x00	; 0
    39d4:	ee ee       	ldi	r30, 0xEE	; 238
    39d6:	fc e1       	ldi	r31, 0x1C	; 28
    39d8:	0c 94 9d 20 	jmp	0x413a	; 0x413a <__prologue_saves__>
    39dc:	69 83       	std	Y+1, r22	; 0x01
    39de:	7a 83       	std	Y+2, r23	; 0x02
    39e0:	8b 83       	std	Y+3, r24	; 0x03
    39e2:	9c 83       	std	Y+4, r25	; 0x04
    39e4:	2d 83       	std	Y+5, r18	; 0x05
    39e6:	3e 83       	std	Y+6, r19	; 0x06
    39e8:	4f 83       	std	Y+7, r20	; 0x07
    39ea:	58 87       	std	Y+8, r21	; 0x08
    39ec:	be 01       	movw	r22, r28
    39ee:	67 5f       	subi	r22, 0xF7	; 247
    39f0:	7f 4f       	sbci	r23, 0xFF	; 255
    39f2:	ce 01       	movw	r24, r28
    39f4:	01 96       	adiw	r24, 0x01	; 1
    39f6:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    39fa:	be 01       	movw	r22, r28
    39fc:	6f 5e       	subi	r22, 0xEF	; 239
    39fe:	7f 4f       	sbci	r23, 0xFF	; 255
    3a00:	ce 01       	movw	r24, r28
    3a02:	05 96       	adiw	r24, 0x05	; 5
    3a04:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3a08:	99 85       	ldd	r25, Y+9	; 0x09
    3a0a:	92 30       	cpi	r25, 0x02	; 2
    3a0c:	88 f0       	brcs	.+34     	; 0x3a30 <__mulsf3+0x60>
    3a0e:	89 89       	ldd	r24, Y+17	; 0x11
    3a10:	82 30       	cpi	r24, 0x02	; 2
    3a12:	c8 f0       	brcs	.+50     	; 0x3a46 <__mulsf3+0x76>
    3a14:	94 30       	cpi	r25, 0x04	; 4
    3a16:	19 f4       	brne	.+6      	; 0x3a1e <__mulsf3+0x4e>
    3a18:	82 30       	cpi	r24, 0x02	; 2
    3a1a:	51 f4       	brne	.+20     	; 0x3a30 <__mulsf3+0x60>
    3a1c:	04 c0       	rjmp	.+8      	; 0x3a26 <__mulsf3+0x56>
    3a1e:	84 30       	cpi	r24, 0x04	; 4
    3a20:	29 f4       	brne	.+10     	; 0x3a2c <__mulsf3+0x5c>
    3a22:	92 30       	cpi	r25, 0x02	; 2
    3a24:	81 f4       	brne	.+32     	; 0x3a46 <__mulsf3+0x76>
    3a26:	86 e7       	ldi	r24, 0x76	; 118
    3a28:	90 e0       	ldi	r25, 0x00	; 0
    3a2a:	c6 c0       	rjmp	.+396    	; 0x3bb8 <__mulsf3+0x1e8>
    3a2c:	92 30       	cpi	r25, 0x02	; 2
    3a2e:	49 f4       	brne	.+18     	; 0x3a42 <__mulsf3+0x72>
    3a30:	20 e0       	ldi	r18, 0x00	; 0
    3a32:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a34:	8a 89       	ldd	r24, Y+18	; 0x12
    3a36:	98 13       	cpse	r25, r24
    3a38:	21 e0       	ldi	r18, 0x01	; 1
    3a3a:	2a 87       	std	Y+10, r18	; 0x0a
    3a3c:	ce 01       	movw	r24, r28
    3a3e:	09 96       	adiw	r24, 0x09	; 9
    3a40:	bb c0       	rjmp	.+374    	; 0x3bb8 <__mulsf3+0x1e8>
    3a42:	82 30       	cpi	r24, 0x02	; 2
    3a44:	49 f4       	brne	.+18     	; 0x3a58 <__mulsf3+0x88>
    3a46:	20 e0       	ldi	r18, 0x00	; 0
    3a48:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a4a:	8a 89       	ldd	r24, Y+18	; 0x12
    3a4c:	98 13       	cpse	r25, r24
    3a4e:	21 e0       	ldi	r18, 0x01	; 1
    3a50:	2a 8b       	std	Y+18, r18	; 0x12
    3a52:	ce 01       	movw	r24, r28
    3a54:	41 96       	adiw	r24, 0x11	; 17
    3a56:	b0 c0       	rjmp	.+352    	; 0x3bb8 <__mulsf3+0x1e8>
    3a58:	2d 84       	ldd	r2, Y+13	; 0x0d
    3a5a:	3e 84       	ldd	r3, Y+14	; 0x0e
    3a5c:	4f 84       	ldd	r4, Y+15	; 0x0f
    3a5e:	58 88       	ldd	r5, Y+16	; 0x10
    3a60:	6d 88       	ldd	r6, Y+21	; 0x15
    3a62:	7e 88       	ldd	r7, Y+22	; 0x16
    3a64:	8f 88       	ldd	r8, Y+23	; 0x17
    3a66:	98 8c       	ldd	r9, Y+24	; 0x18
    3a68:	ee 24       	eor	r14, r14
    3a6a:	ff 24       	eor	r15, r15
    3a6c:	87 01       	movw	r16, r14
    3a6e:	aa 24       	eor	r10, r10
    3a70:	bb 24       	eor	r11, r11
    3a72:	65 01       	movw	r12, r10
    3a74:	40 e0       	ldi	r20, 0x00	; 0
    3a76:	50 e0       	ldi	r21, 0x00	; 0
    3a78:	60 e0       	ldi	r22, 0x00	; 0
    3a7a:	70 e0       	ldi	r23, 0x00	; 0
    3a7c:	e0 e0       	ldi	r30, 0x00	; 0
    3a7e:	f0 e0       	ldi	r31, 0x00	; 0
    3a80:	c1 01       	movw	r24, r2
    3a82:	81 70       	andi	r24, 0x01	; 1
    3a84:	90 70       	andi	r25, 0x00	; 0
    3a86:	89 2b       	or	r24, r25
    3a88:	e9 f0       	breq	.+58     	; 0x3ac4 <__mulsf3+0xf4>
    3a8a:	e6 0c       	add	r14, r6
    3a8c:	f7 1c       	adc	r15, r7
    3a8e:	08 1d       	adc	r16, r8
    3a90:	19 1d       	adc	r17, r9
    3a92:	9a 01       	movw	r18, r20
    3a94:	ab 01       	movw	r20, r22
    3a96:	2a 0d       	add	r18, r10
    3a98:	3b 1d       	adc	r19, r11
    3a9a:	4c 1d       	adc	r20, r12
    3a9c:	5d 1d       	adc	r21, r13
    3a9e:	80 e0       	ldi	r24, 0x00	; 0
    3aa0:	90 e0       	ldi	r25, 0x00	; 0
    3aa2:	a0 e0       	ldi	r26, 0x00	; 0
    3aa4:	b0 e0       	ldi	r27, 0x00	; 0
    3aa6:	e6 14       	cp	r14, r6
    3aa8:	f7 04       	cpc	r15, r7
    3aaa:	08 05       	cpc	r16, r8
    3aac:	19 05       	cpc	r17, r9
    3aae:	20 f4       	brcc	.+8      	; 0x3ab8 <__mulsf3+0xe8>
    3ab0:	81 e0       	ldi	r24, 0x01	; 1
    3ab2:	90 e0       	ldi	r25, 0x00	; 0
    3ab4:	a0 e0       	ldi	r26, 0x00	; 0
    3ab6:	b0 e0       	ldi	r27, 0x00	; 0
    3ab8:	ba 01       	movw	r22, r20
    3aba:	a9 01       	movw	r20, r18
    3abc:	48 0f       	add	r20, r24
    3abe:	59 1f       	adc	r21, r25
    3ac0:	6a 1f       	adc	r22, r26
    3ac2:	7b 1f       	adc	r23, r27
    3ac4:	aa 0c       	add	r10, r10
    3ac6:	bb 1c       	adc	r11, r11
    3ac8:	cc 1c       	adc	r12, r12
    3aca:	dd 1c       	adc	r13, r13
    3acc:	97 fe       	sbrs	r9, 7
    3ace:	08 c0       	rjmp	.+16     	; 0x3ae0 <__mulsf3+0x110>
    3ad0:	81 e0       	ldi	r24, 0x01	; 1
    3ad2:	90 e0       	ldi	r25, 0x00	; 0
    3ad4:	a0 e0       	ldi	r26, 0x00	; 0
    3ad6:	b0 e0       	ldi	r27, 0x00	; 0
    3ad8:	a8 2a       	or	r10, r24
    3ada:	b9 2a       	or	r11, r25
    3adc:	ca 2a       	or	r12, r26
    3ade:	db 2a       	or	r13, r27
    3ae0:	31 96       	adiw	r30, 0x01	; 1
    3ae2:	e0 32       	cpi	r30, 0x20	; 32
    3ae4:	f1 05       	cpc	r31, r1
    3ae6:	49 f0       	breq	.+18     	; 0x3afa <__mulsf3+0x12a>
    3ae8:	66 0c       	add	r6, r6
    3aea:	77 1c       	adc	r7, r7
    3aec:	88 1c       	adc	r8, r8
    3aee:	99 1c       	adc	r9, r9
    3af0:	56 94       	lsr	r5
    3af2:	47 94       	ror	r4
    3af4:	37 94       	ror	r3
    3af6:	27 94       	ror	r2
    3af8:	c3 cf       	rjmp	.-122    	; 0x3a80 <__mulsf3+0xb0>
    3afa:	fa 85       	ldd	r31, Y+10	; 0x0a
    3afc:	ea 89       	ldd	r30, Y+18	; 0x12
    3afe:	2b 89       	ldd	r18, Y+19	; 0x13
    3b00:	3c 89       	ldd	r19, Y+20	; 0x14
    3b02:	8b 85       	ldd	r24, Y+11	; 0x0b
    3b04:	9c 85       	ldd	r25, Y+12	; 0x0c
    3b06:	28 0f       	add	r18, r24
    3b08:	39 1f       	adc	r19, r25
    3b0a:	2e 5f       	subi	r18, 0xFE	; 254
    3b0c:	3f 4f       	sbci	r19, 0xFF	; 255
    3b0e:	17 c0       	rjmp	.+46     	; 0x3b3e <__mulsf3+0x16e>
    3b10:	ca 01       	movw	r24, r20
    3b12:	81 70       	andi	r24, 0x01	; 1
    3b14:	90 70       	andi	r25, 0x00	; 0
    3b16:	89 2b       	or	r24, r25
    3b18:	61 f0       	breq	.+24     	; 0x3b32 <__mulsf3+0x162>
    3b1a:	16 95       	lsr	r17
    3b1c:	07 95       	ror	r16
    3b1e:	f7 94       	ror	r15
    3b20:	e7 94       	ror	r14
    3b22:	80 e0       	ldi	r24, 0x00	; 0
    3b24:	90 e0       	ldi	r25, 0x00	; 0
    3b26:	a0 e0       	ldi	r26, 0x00	; 0
    3b28:	b0 e8       	ldi	r27, 0x80	; 128
    3b2a:	e8 2a       	or	r14, r24
    3b2c:	f9 2a       	or	r15, r25
    3b2e:	0a 2b       	or	r16, r26
    3b30:	1b 2b       	or	r17, r27
    3b32:	76 95       	lsr	r23
    3b34:	67 95       	ror	r22
    3b36:	57 95       	ror	r21
    3b38:	47 95       	ror	r20
    3b3a:	2f 5f       	subi	r18, 0xFF	; 255
    3b3c:	3f 4f       	sbci	r19, 0xFF	; 255
    3b3e:	77 fd       	sbrc	r23, 7
    3b40:	e7 cf       	rjmp	.-50     	; 0x3b10 <__mulsf3+0x140>
    3b42:	0c c0       	rjmp	.+24     	; 0x3b5c <__mulsf3+0x18c>
    3b44:	44 0f       	add	r20, r20
    3b46:	55 1f       	adc	r21, r21
    3b48:	66 1f       	adc	r22, r22
    3b4a:	77 1f       	adc	r23, r23
    3b4c:	17 fd       	sbrc	r17, 7
    3b4e:	41 60       	ori	r20, 0x01	; 1
    3b50:	ee 0c       	add	r14, r14
    3b52:	ff 1c       	adc	r15, r15
    3b54:	00 1f       	adc	r16, r16
    3b56:	11 1f       	adc	r17, r17
    3b58:	21 50       	subi	r18, 0x01	; 1
    3b5a:	30 40       	sbci	r19, 0x00	; 0
    3b5c:	40 30       	cpi	r20, 0x00	; 0
    3b5e:	90 e0       	ldi	r25, 0x00	; 0
    3b60:	59 07       	cpc	r21, r25
    3b62:	90 e0       	ldi	r25, 0x00	; 0
    3b64:	69 07       	cpc	r22, r25
    3b66:	90 e4       	ldi	r25, 0x40	; 64
    3b68:	79 07       	cpc	r23, r25
    3b6a:	60 f3       	brcs	.-40     	; 0x3b44 <__mulsf3+0x174>
    3b6c:	2b 8f       	std	Y+27, r18	; 0x1b
    3b6e:	3c 8f       	std	Y+28, r19	; 0x1c
    3b70:	db 01       	movw	r26, r22
    3b72:	ca 01       	movw	r24, r20
    3b74:	8f 77       	andi	r24, 0x7F	; 127
    3b76:	90 70       	andi	r25, 0x00	; 0
    3b78:	a0 70       	andi	r26, 0x00	; 0
    3b7a:	b0 70       	andi	r27, 0x00	; 0
    3b7c:	80 34       	cpi	r24, 0x40	; 64
    3b7e:	91 05       	cpc	r25, r1
    3b80:	a1 05       	cpc	r26, r1
    3b82:	b1 05       	cpc	r27, r1
    3b84:	61 f4       	brne	.+24     	; 0x3b9e <__mulsf3+0x1ce>
    3b86:	47 fd       	sbrc	r20, 7
    3b88:	0a c0       	rjmp	.+20     	; 0x3b9e <__mulsf3+0x1ce>
    3b8a:	e1 14       	cp	r14, r1
    3b8c:	f1 04       	cpc	r15, r1
    3b8e:	01 05       	cpc	r16, r1
    3b90:	11 05       	cpc	r17, r1
    3b92:	29 f0       	breq	.+10     	; 0x3b9e <__mulsf3+0x1ce>
    3b94:	40 5c       	subi	r20, 0xC0	; 192
    3b96:	5f 4f       	sbci	r21, 0xFF	; 255
    3b98:	6f 4f       	sbci	r22, 0xFF	; 255
    3b9a:	7f 4f       	sbci	r23, 0xFF	; 255
    3b9c:	40 78       	andi	r20, 0x80	; 128
    3b9e:	1a 8e       	std	Y+26, r1	; 0x1a
    3ba0:	fe 17       	cp	r31, r30
    3ba2:	11 f0       	breq	.+4      	; 0x3ba8 <__mulsf3+0x1d8>
    3ba4:	81 e0       	ldi	r24, 0x01	; 1
    3ba6:	8a 8f       	std	Y+26, r24	; 0x1a
    3ba8:	4d 8f       	std	Y+29, r20	; 0x1d
    3baa:	5e 8f       	std	Y+30, r21	; 0x1e
    3bac:	6f 8f       	std	Y+31, r22	; 0x1f
    3bae:	78 a3       	std	Y+32, r23	; 0x20
    3bb0:	83 e0       	ldi	r24, 0x03	; 3
    3bb2:	89 8f       	std	Y+25, r24	; 0x19
    3bb4:	ce 01       	movw	r24, r28
    3bb6:	49 96       	adiw	r24, 0x19	; 25
    3bb8:	0e 94 c6 1e 	call	0x3d8c	; 0x3d8c <__pack_f>
    3bbc:	a0 96       	adiw	r28, 0x20	; 32
    3bbe:	e2 e1       	ldi	r30, 0x12	; 18
    3bc0:	0c 94 b9 20 	jmp	0x4172	; 0x4172 <__epilogue_restores__>

00003bc4 <__gtsf2>:
    3bc4:	a8 e1       	ldi	r26, 0x18	; 24
    3bc6:	b0 e0       	ldi	r27, 0x00	; 0
    3bc8:	e8 ee       	ldi	r30, 0xE8	; 232
    3bca:	fd e1       	ldi	r31, 0x1D	; 29
    3bcc:	0c 94 a9 20 	jmp	0x4152	; 0x4152 <__prologue_saves__+0x18>
    3bd0:	69 83       	std	Y+1, r22	; 0x01
    3bd2:	7a 83       	std	Y+2, r23	; 0x02
    3bd4:	8b 83       	std	Y+3, r24	; 0x03
    3bd6:	9c 83       	std	Y+4, r25	; 0x04
    3bd8:	2d 83       	std	Y+5, r18	; 0x05
    3bda:	3e 83       	std	Y+6, r19	; 0x06
    3bdc:	4f 83       	std	Y+7, r20	; 0x07
    3bde:	58 87       	std	Y+8, r21	; 0x08
    3be0:	89 e0       	ldi	r24, 0x09	; 9
    3be2:	e8 2e       	mov	r14, r24
    3be4:	f1 2c       	mov	r15, r1
    3be6:	ec 0e       	add	r14, r28
    3be8:	fd 1e       	adc	r15, r29
    3bea:	b7 01       	movw	r22, r14
    3bec:	ce 01       	movw	r24, r28
    3bee:	01 96       	adiw	r24, 0x01	; 1
    3bf0:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3bf4:	8e 01       	movw	r16, r28
    3bf6:	0f 5e       	subi	r16, 0xEF	; 239
    3bf8:	1f 4f       	sbci	r17, 0xFF	; 255
    3bfa:	b8 01       	movw	r22, r16
    3bfc:	ce 01       	movw	r24, r28
    3bfe:	05 96       	adiw	r24, 0x05	; 5
    3c00:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3c04:	89 85       	ldd	r24, Y+9	; 0x09
    3c06:	82 30       	cpi	r24, 0x02	; 2
    3c08:	40 f0       	brcs	.+16     	; 0x3c1a <__gtsf2+0x56>
    3c0a:	89 89       	ldd	r24, Y+17	; 0x11
    3c0c:	82 30       	cpi	r24, 0x02	; 2
    3c0e:	28 f0       	brcs	.+10     	; 0x3c1a <__gtsf2+0x56>
    3c10:	b8 01       	movw	r22, r16
    3c12:	c7 01       	movw	r24, r14
    3c14:	0e 94 13 20 	call	0x4026	; 0x4026 <__fpcmp_parts_f>
    3c18:	01 c0       	rjmp	.+2      	; 0x3c1c <__gtsf2+0x58>
    3c1a:	8f ef       	ldi	r24, 0xFF	; 255
    3c1c:	68 96       	adiw	r28, 0x18	; 24
    3c1e:	e6 e0       	ldi	r30, 0x06	; 6
    3c20:	0c 94 c5 20 	jmp	0x418a	; 0x418a <__epilogue_restores__+0x18>

00003c24 <__gesf2>:
    3c24:	a8 e1       	ldi	r26, 0x18	; 24
    3c26:	b0 e0       	ldi	r27, 0x00	; 0
    3c28:	e8 e1       	ldi	r30, 0x18	; 24
    3c2a:	fe e1       	ldi	r31, 0x1E	; 30
    3c2c:	0c 94 a9 20 	jmp	0x4152	; 0x4152 <__prologue_saves__+0x18>
    3c30:	69 83       	std	Y+1, r22	; 0x01
    3c32:	7a 83       	std	Y+2, r23	; 0x02
    3c34:	8b 83       	std	Y+3, r24	; 0x03
    3c36:	9c 83       	std	Y+4, r25	; 0x04
    3c38:	2d 83       	std	Y+5, r18	; 0x05
    3c3a:	3e 83       	std	Y+6, r19	; 0x06
    3c3c:	4f 83       	std	Y+7, r20	; 0x07
    3c3e:	58 87       	std	Y+8, r21	; 0x08
    3c40:	89 e0       	ldi	r24, 0x09	; 9
    3c42:	e8 2e       	mov	r14, r24
    3c44:	f1 2c       	mov	r15, r1
    3c46:	ec 0e       	add	r14, r28
    3c48:	fd 1e       	adc	r15, r29
    3c4a:	b7 01       	movw	r22, r14
    3c4c:	ce 01       	movw	r24, r28
    3c4e:	01 96       	adiw	r24, 0x01	; 1
    3c50:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3c54:	8e 01       	movw	r16, r28
    3c56:	0f 5e       	subi	r16, 0xEF	; 239
    3c58:	1f 4f       	sbci	r17, 0xFF	; 255
    3c5a:	b8 01       	movw	r22, r16
    3c5c:	ce 01       	movw	r24, r28
    3c5e:	05 96       	adiw	r24, 0x05	; 5
    3c60:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3c64:	89 85       	ldd	r24, Y+9	; 0x09
    3c66:	82 30       	cpi	r24, 0x02	; 2
    3c68:	40 f0       	brcs	.+16     	; 0x3c7a <__gesf2+0x56>
    3c6a:	89 89       	ldd	r24, Y+17	; 0x11
    3c6c:	82 30       	cpi	r24, 0x02	; 2
    3c6e:	28 f0       	brcs	.+10     	; 0x3c7a <__gesf2+0x56>
    3c70:	b8 01       	movw	r22, r16
    3c72:	c7 01       	movw	r24, r14
    3c74:	0e 94 13 20 	call	0x4026	; 0x4026 <__fpcmp_parts_f>
    3c78:	01 c0       	rjmp	.+2      	; 0x3c7c <__gesf2+0x58>
    3c7a:	8f ef       	ldi	r24, 0xFF	; 255
    3c7c:	68 96       	adiw	r28, 0x18	; 24
    3c7e:	e6 e0       	ldi	r30, 0x06	; 6
    3c80:	0c 94 c5 20 	jmp	0x418a	; 0x418a <__epilogue_restores__+0x18>

00003c84 <__ltsf2>:
    3c84:	a8 e1       	ldi	r26, 0x18	; 24
    3c86:	b0 e0       	ldi	r27, 0x00	; 0
    3c88:	e8 e4       	ldi	r30, 0x48	; 72
    3c8a:	fe e1       	ldi	r31, 0x1E	; 30
    3c8c:	0c 94 a9 20 	jmp	0x4152	; 0x4152 <__prologue_saves__+0x18>
    3c90:	69 83       	std	Y+1, r22	; 0x01
    3c92:	7a 83       	std	Y+2, r23	; 0x02
    3c94:	8b 83       	std	Y+3, r24	; 0x03
    3c96:	9c 83       	std	Y+4, r25	; 0x04
    3c98:	2d 83       	std	Y+5, r18	; 0x05
    3c9a:	3e 83       	std	Y+6, r19	; 0x06
    3c9c:	4f 83       	std	Y+7, r20	; 0x07
    3c9e:	58 87       	std	Y+8, r21	; 0x08
    3ca0:	89 e0       	ldi	r24, 0x09	; 9
    3ca2:	e8 2e       	mov	r14, r24
    3ca4:	f1 2c       	mov	r15, r1
    3ca6:	ec 0e       	add	r14, r28
    3ca8:	fd 1e       	adc	r15, r29
    3caa:	b7 01       	movw	r22, r14
    3cac:	ce 01       	movw	r24, r28
    3cae:	01 96       	adiw	r24, 0x01	; 1
    3cb0:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3cb4:	8e 01       	movw	r16, r28
    3cb6:	0f 5e       	subi	r16, 0xEF	; 239
    3cb8:	1f 4f       	sbci	r17, 0xFF	; 255
    3cba:	b8 01       	movw	r22, r16
    3cbc:	ce 01       	movw	r24, r28
    3cbe:	05 96       	adiw	r24, 0x05	; 5
    3cc0:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3cc4:	89 85       	ldd	r24, Y+9	; 0x09
    3cc6:	82 30       	cpi	r24, 0x02	; 2
    3cc8:	40 f0       	brcs	.+16     	; 0x3cda <__ltsf2+0x56>
    3cca:	89 89       	ldd	r24, Y+17	; 0x11
    3ccc:	82 30       	cpi	r24, 0x02	; 2
    3cce:	28 f0       	brcs	.+10     	; 0x3cda <__ltsf2+0x56>
    3cd0:	b8 01       	movw	r22, r16
    3cd2:	c7 01       	movw	r24, r14
    3cd4:	0e 94 13 20 	call	0x4026	; 0x4026 <__fpcmp_parts_f>
    3cd8:	01 c0       	rjmp	.+2      	; 0x3cdc <__ltsf2+0x58>
    3cda:	81 e0       	ldi	r24, 0x01	; 1
    3cdc:	68 96       	adiw	r28, 0x18	; 24
    3cde:	e6 e0       	ldi	r30, 0x06	; 6
    3ce0:	0c 94 c5 20 	jmp	0x418a	; 0x418a <__epilogue_restores__+0x18>

00003ce4 <__fixsfsi>:
    3ce4:	ac e0       	ldi	r26, 0x0C	; 12
    3ce6:	b0 e0       	ldi	r27, 0x00	; 0
    3ce8:	e8 e7       	ldi	r30, 0x78	; 120
    3cea:	fe e1       	ldi	r31, 0x1E	; 30
    3cec:	0c 94 ad 20 	jmp	0x415a	; 0x415a <__prologue_saves__+0x20>
    3cf0:	69 83       	std	Y+1, r22	; 0x01
    3cf2:	7a 83       	std	Y+2, r23	; 0x02
    3cf4:	8b 83       	std	Y+3, r24	; 0x03
    3cf6:	9c 83       	std	Y+4, r25	; 0x04
    3cf8:	be 01       	movw	r22, r28
    3cfa:	6b 5f       	subi	r22, 0xFB	; 251
    3cfc:	7f 4f       	sbci	r23, 0xFF	; 255
    3cfe:	ce 01       	movw	r24, r28
    3d00:	01 96       	adiw	r24, 0x01	; 1
    3d02:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__unpack_f>
    3d06:	8d 81       	ldd	r24, Y+5	; 0x05
    3d08:	82 30       	cpi	r24, 0x02	; 2
    3d0a:	61 f1       	breq	.+88     	; 0x3d64 <__fixsfsi+0x80>
    3d0c:	82 30       	cpi	r24, 0x02	; 2
    3d0e:	50 f1       	brcs	.+84     	; 0x3d64 <__fixsfsi+0x80>
    3d10:	84 30       	cpi	r24, 0x04	; 4
    3d12:	21 f4       	brne	.+8      	; 0x3d1c <__fixsfsi+0x38>
    3d14:	8e 81       	ldd	r24, Y+6	; 0x06
    3d16:	88 23       	and	r24, r24
    3d18:	51 f1       	breq	.+84     	; 0x3d6e <__fixsfsi+0x8a>
    3d1a:	2e c0       	rjmp	.+92     	; 0x3d78 <__fixsfsi+0x94>
    3d1c:	2f 81       	ldd	r18, Y+7	; 0x07
    3d1e:	38 85       	ldd	r19, Y+8	; 0x08
    3d20:	37 fd       	sbrc	r19, 7
    3d22:	20 c0       	rjmp	.+64     	; 0x3d64 <__fixsfsi+0x80>
    3d24:	6e 81       	ldd	r22, Y+6	; 0x06
    3d26:	2f 31       	cpi	r18, 0x1F	; 31
    3d28:	31 05       	cpc	r19, r1
    3d2a:	1c f0       	brlt	.+6      	; 0x3d32 <__fixsfsi+0x4e>
    3d2c:	66 23       	and	r22, r22
    3d2e:	f9 f0       	breq	.+62     	; 0x3d6e <__fixsfsi+0x8a>
    3d30:	23 c0       	rjmp	.+70     	; 0x3d78 <__fixsfsi+0x94>
    3d32:	8e e1       	ldi	r24, 0x1E	; 30
    3d34:	90 e0       	ldi	r25, 0x00	; 0
    3d36:	82 1b       	sub	r24, r18
    3d38:	93 0b       	sbc	r25, r19
    3d3a:	29 85       	ldd	r18, Y+9	; 0x09
    3d3c:	3a 85       	ldd	r19, Y+10	; 0x0a
    3d3e:	4b 85       	ldd	r20, Y+11	; 0x0b
    3d40:	5c 85       	ldd	r21, Y+12	; 0x0c
    3d42:	04 c0       	rjmp	.+8      	; 0x3d4c <__fixsfsi+0x68>
    3d44:	56 95       	lsr	r21
    3d46:	47 95       	ror	r20
    3d48:	37 95       	ror	r19
    3d4a:	27 95       	ror	r18
    3d4c:	8a 95       	dec	r24
    3d4e:	d2 f7       	brpl	.-12     	; 0x3d44 <__fixsfsi+0x60>
    3d50:	66 23       	and	r22, r22
    3d52:	b1 f0       	breq	.+44     	; 0x3d80 <__fixsfsi+0x9c>
    3d54:	50 95       	com	r21
    3d56:	40 95       	com	r20
    3d58:	30 95       	com	r19
    3d5a:	21 95       	neg	r18
    3d5c:	3f 4f       	sbci	r19, 0xFF	; 255
    3d5e:	4f 4f       	sbci	r20, 0xFF	; 255
    3d60:	5f 4f       	sbci	r21, 0xFF	; 255
    3d62:	0e c0       	rjmp	.+28     	; 0x3d80 <__fixsfsi+0x9c>
    3d64:	20 e0       	ldi	r18, 0x00	; 0
    3d66:	30 e0       	ldi	r19, 0x00	; 0
    3d68:	40 e0       	ldi	r20, 0x00	; 0
    3d6a:	50 e0       	ldi	r21, 0x00	; 0
    3d6c:	09 c0       	rjmp	.+18     	; 0x3d80 <__fixsfsi+0x9c>
    3d6e:	2f ef       	ldi	r18, 0xFF	; 255
    3d70:	3f ef       	ldi	r19, 0xFF	; 255
    3d72:	4f ef       	ldi	r20, 0xFF	; 255
    3d74:	5f e7       	ldi	r21, 0x7F	; 127
    3d76:	04 c0       	rjmp	.+8      	; 0x3d80 <__fixsfsi+0x9c>
    3d78:	20 e0       	ldi	r18, 0x00	; 0
    3d7a:	30 e0       	ldi	r19, 0x00	; 0
    3d7c:	40 e0       	ldi	r20, 0x00	; 0
    3d7e:	50 e8       	ldi	r21, 0x80	; 128
    3d80:	b9 01       	movw	r22, r18
    3d82:	ca 01       	movw	r24, r20
    3d84:	2c 96       	adiw	r28, 0x0c	; 12
    3d86:	e2 e0       	ldi	r30, 0x02	; 2
    3d88:	0c 94 c9 20 	jmp	0x4192	; 0x4192 <__epilogue_restores__+0x20>

00003d8c <__pack_f>:
    3d8c:	df 92       	push	r13
    3d8e:	ef 92       	push	r14
    3d90:	ff 92       	push	r15
    3d92:	0f 93       	push	r16
    3d94:	1f 93       	push	r17
    3d96:	fc 01       	movw	r30, r24
    3d98:	e4 80       	ldd	r14, Z+4	; 0x04
    3d9a:	f5 80       	ldd	r15, Z+5	; 0x05
    3d9c:	06 81       	ldd	r16, Z+6	; 0x06
    3d9e:	17 81       	ldd	r17, Z+7	; 0x07
    3da0:	d1 80       	ldd	r13, Z+1	; 0x01
    3da2:	80 81       	ld	r24, Z
    3da4:	82 30       	cpi	r24, 0x02	; 2
    3da6:	48 f4       	brcc	.+18     	; 0x3dba <__pack_f+0x2e>
    3da8:	80 e0       	ldi	r24, 0x00	; 0
    3daa:	90 e0       	ldi	r25, 0x00	; 0
    3dac:	a0 e1       	ldi	r26, 0x10	; 16
    3dae:	b0 e0       	ldi	r27, 0x00	; 0
    3db0:	e8 2a       	or	r14, r24
    3db2:	f9 2a       	or	r15, r25
    3db4:	0a 2b       	or	r16, r26
    3db6:	1b 2b       	or	r17, r27
    3db8:	a5 c0       	rjmp	.+330    	; 0x3f04 <__pack_f+0x178>
    3dba:	84 30       	cpi	r24, 0x04	; 4
    3dbc:	09 f4       	brne	.+2      	; 0x3dc0 <__pack_f+0x34>
    3dbe:	9f c0       	rjmp	.+318    	; 0x3efe <__pack_f+0x172>
    3dc0:	82 30       	cpi	r24, 0x02	; 2
    3dc2:	21 f4       	brne	.+8      	; 0x3dcc <__pack_f+0x40>
    3dc4:	ee 24       	eor	r14, r14
    3dc6:	ff 24       	eor	r15, r15
    3dc8:	87 01       	movw	r16, r14
    3dca:	05 c0       	rjmp	.+10     	; 0x3dd6 <__pack_f+0x4a>
    3dcc:	e1 14       	cp	r14, r1
    3dce:	f1 04       	cpc	r15, r1
    3dd0:	01 05       	cpc	r16, r1
    3dd2:	11 05       	cpc	r17, r1
    3dd4:	19 f4       	brne	.+6      	; 0x3ddc <__pack_f+0x50>
    3dd6:	e0 e0       	ldi	r30, 0x00	; 0
    3dd8:	f0 e0       	ldi	r31, 0x00	; 0
    3dda:	96 c0       	rjmp	.+300    	; 0x3f08 <__pack_f+0x17c>
    3ddc:	62 81       	ldd	r22, Z+2	; 0x02
    3dde:	73 81       	ldd	r23, Z+3	; 0x03
    3de0:	9f ef       	ldi	r25, 0xFF	; 255
    3de2:	62 38       	cpi	r22, 0x82	; 130
    3de4:	79 07       	cpc	r23, r25
    3de6:	0c f0       	brlt	.+2      	; 0x3dea <__pack_f+0x5e>
    3de8:	5b c0       	rjmp	.+182    	; 0x3ea0 <__pack_f+0x114>
    3dea:	22 e8       	ldi	r18, 0x82	; 130
    3dec:	3f ef       	ldi	r19, 0xFF	; 255
    3dee:	26 1b       	sub	r18, r22
    3df0:	37 0b       	sbc	r19, r23
    3df2:	2a 31       	cpi	r18, 0x1A	; 26
    3df4:	31 05       	cpc	r19, r1
    3df6:	2c f0       	brlt	.+10     	; 0x3e02 <__pack_f+0x76>
    3df8:	20 e0       	ldi	r18, 0x00	; 0
    3dfa:	30 e0       	ldi	r19, 0x00	; 0
    3dfc:	40 e0       	ldi	r20, 0x00	; 0
    3dfe:	50 e0       	ldi	r21, 0x00	; 0
    3e00:	2a c0       	rjmp	.+84     	; 0x3e56 <__pack_f+0xca>
    3e02:	b8 01       	movw	r22, r16
    3e04:	a7 01       	movw	r20, r14
    3e06:	02 2e       	mov	r0, r18
    3e08:	04 c0       	rjmp	.+8      	; 0x3e12 <__pack_f+0x86>
    3e0a:	76 95       	lsr	r23
    3e0c:	67 95       	ror	r22
    3e0e:	57 95       	ror	r21
    3e10:	47 95       	ror	r20
    3e12:	0a 94       	dec	r0
    3e14:	d2 f7       	brpl	.-12     	; 0x3e0a <__pack_f+0x7e>
    3e16:	81 e0       	ldi	r24, 0x01	; 1
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	a0 e0       	ldi	r26, 0x00	; 0
    3e1c:	b0 e0       	ldi	r27, 0x00	; 0
    3e1e:	04 c0       	rjmp	.+8      	; 0x3e28 <__pack_f+0x9c>
    3e20:	88 0f       	add	r24, r24
    3e22:	99 1f       	adc	r25, r25
    3e24:	aa 1f       	adc	r26, r26
    3e26:	bb 1f       	adc	r27, r27
    3e28:	2a 95       	dec	r18
    3e2a:	d2 f7       	brpl	.-12     	; 0x3e20 <__pack_f+0x94>
    3e2c:	01 97       	sbiw	r24, 0x01	; 1
    3e2e:	a1 09       	sbc	r26, r1
    3e30:	b1 09       	sbc	r27, r1
    3e32:	8e 21       	and	r24, r14
    3e34:	9f 21       	and	r25, r15
    3e36:	a0 23       	and	r26, r16
    3e38:	b1 23       	and	r27, r17
    3e3a:	00 97       	sbiw	r24, 0x00	; 0
    3e3c:	a1 05       	cpc	r26, r1
    3e3e:	b1 05       	cpc	r27, r1
    3e40:	21 f0       	breq	.+8      	; 0x3e4a <__pack_f+0xbe>
    3e42:	81 e0       	ldi	r24, 0x01	; 1
    3e44:	90 e0       	ldi	r25, 0x00	; 0
    3e46:	a0 e0       	ldi	r26, 0x00	; 0
    3e48:	b0 e0       	ldi	r27, 0x00	; 0
    3e4a:	9a 01       	movw	r18, r20
    3e4c:	ab 01       	movw	r20, r22
    3e4e:	28 2b       	or	r18, r24
    3e50:	39 2b       	or	r19, r25
    3e52:	4a 2b       	or	r20, r26
    3e54:	5b 2b       	or	r21, r27
    3e56:	da 01       	movw	r26, r20
    3e58:	c9 01       	movw	r24, r18
    3e5a:	8f 77       	andi	r24, 0x7F	; 127
    3e5c:	90 70       	andi	r25, 0x00	; 0
    3e5e:	a0 70       	andi	r26, 0x00	; 0
    3e60:	b0 70       	andi	r27, 0x00	; 0
    3e62:	80 34       	cpi	r24, 0x40	; 64
    3e64:	91 05       	cpc	r25, r1
    3e66:	a1 05       	cpc	r26, r1
    3e68:	b1 05       	cpc	r27, r1
    3e6a:	39 f4       	brne	.+14     	; 0x3e7a <__pack_f+0xee>
    3e6c:	27 ff       	sbrs	r18, 7
    3e6e:	09 c0       	rjmp	.+18     	; 0x3e82 <__pack_f+0xf6>
    3e70:	20 5c       	subi	r18, 0xC0	; 192
    3e72:	3f 4f       	sbci	r19, 0xFF	; 255
    3e74:	4f 4f       	sbci	r20, 0xFF	; 255
    3e76:	5f 4f       	sbci	r21, 0xFF	; 255
    3e78:	04 c0       	rjmp	.+8      	; 0x3e82 <__pack_f+0xf6>
    3e7a:	21 5c       	subi	r18, 0xC1	; 193
    3e7c:	3f 4f       	sbci	r19, 0xFF	; 255
    3e7e:	4f 4f       	sbci	r20, 0xFF	; 255
    3e80:	5f 4f       	sbci	r21, 0xFF	; 255
    3e82:	e0 e0       	ldi	r30, 0x00	; 0
    3e84:	f0 e0       	ldi	r31, 0x00	; 0
    3e86:	20 30       	cpi	r18, 0x00	; 0
    3e88:	a0 e0       	ldi	r26, 0x00	; 0
    3e8a:	3a 07       	cpc	r19, r26
    3e8c:	a0 e0       	ldi	r26, 0x00	; 0
    3e8e:	4a 07       	cpc	r20, r26
    3e90:	a0 e4       	ldi	r26, 0x40	; 64
    3e92:	5a 07       	cpc	r21, r26
    3e94:	10 f0       	brcs	.+4      	; 0x3e9a <__pack_f+0x10e>
    3e96:	e1 e0       	ldi	r30, 0x01	; 1
    3e98:	f0 e0       	ldi	r31, 0x00	; 0
    3e9a:	79 01       	movw	r14, r18
    3e9c:	8a 01       	movw	r16, r20
    3e9e:	27 c0       	rjmp	.+78     	; 0x3eee <__pack_f+0x162>
    3ea0:	60 38       	cpi	r22, 0x80	; 128
    3ea2:	71 05       	cpc	r23, r1
    3ea4:	64 f5       	brge	.+88     	; 0x3efe <__pack_f+0x172>
    3ea6:	fb 01       	movw	r30, r22
    3ea8:	e1 58       	subi	r30, 0x81	; 129
    3eaa:	ff 4f       	sbci	r31, 0xFF	; 255
    3eac:	d8 01       	movw	r26, r16
    3eae:	c7 01       	movw	r24, r14
    3eb0:	8f 77       	andi	r24, 0x7F	; 127
    3eb2:	90 70       	andi	r25, 0x00	; 0
    3eb4:	a0 70       	andi	r26, 0x00	; 0
    3eb6:	b0 70       	andi	r27, 0x00	; 0
    3eb8:	80 34       	cpi	r24, 0x40	; 64
    3eba:	91 05       	cpc	r25, r1
    3ebc:	a1 05       	cpc	r26, r1
    3ebe:	b1 05       	cpc	r27, r1
    3ec0:	39 f4       	brne	.+14     	; 0x3ed0 <__pack_f+0x144>
    3ec2:	e7 fe       	sbrs	r14, 7
    3ec4:	0d c0       	rjmp	.+26     	; 0x3ee0 <__pack_f+0x154>
    3ec6:	80 e4       	ldi	r24, 0x40	; 64
    3ec8:	90 e0       	ldi	r25, 0x00	; 0
    3eca:	a0 e0       	ldi	r26, 0x00	; 0
    3ecc:	b0 e0       	ldi	r27, 0x00	; 0
    3ece:	04 c0       	rjmp	.+8      	; 0x3ed8 <__pack_f+0x14c>
    3ed0:	8f e3       	ldi	r24, 0x3F	; 63
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	a0 e0       	ldi	r26, 0x00	; 0
    3ed6:	b0 e0       	ldi	r27, 0x00	; 0
    3ed8:	e8 0e       	add	r14, r24
    3eda:	f9 1e       	adc	r15, r25
    3edc:	0a 1f       	adc	r16, r26
    3ede:	1b 1f       	adc	r17, r27
    3ee0:	17 ff       	sbrs	r17, 7
    3ee2:	05 c0       	rjmp	.+10     	; 0x3eee <__pack_f+0x162>
    3ee4:	16 95       	lsr	r17
    3ee6:	07 95       	ror	r16
    3ee8:	f7 94       	ror	r15
    3eea:	e7 94       	ror	r14
    3eec:	31 96       	adiw	r30, 0x01	; 1
    3eee:	87 e0       	ldi	r24, 0x07	; 7
    3ef0:	16 95       	lsr	r17
    3ef2:	07 95       	ror	r16
    3ef4:	f7 94       	ror	r15
    3ef6:	e7 94       	ror	r14
    3ef8:	8a 95       	dec	r24
    3efa:	d1 f7       	brne	.-12     	; 0x3ef0 <__pack_f+0x164>
    3efc:	05 c0       	rjmp	.+10     	; 0x3f08 <__pack_f+0x17c>
    3efe:	ee 24       	eor	r14, r14
    3f00:	ff 24       	eor	r15, r15
    3f02:	87 01       	movw	r16, r14
    3f04:	ef ef       	ldi	r30, 0xFF	; 255
    3f06:	f0 e0       	ldi	r31, 0x00	; 0
    3f08:	6e 2f       	mov	r22, r30
    3f0a:	67 95       	ror	r22
    3f0c:	66 27       	eor	r22, r22
    3f0e:	67 95       	ror	r22
    3f10:	90 2f       	mov	r25, r16
    3f12:	9f 77       	andi	r25, 0x7F	; 127
    3f14:	d7 94       	ror	r13
    3f16:	dd 24       	eor	r13, r13
    3f18:	d7 94       	ror	r13
    3f1a:	8e 2f       	mov	r24, r30
    3f1c:	86 95       	lsr	r24
    3f1e:	49 2f       	mov	r20, r25
    3f20:	46 2b       	or	r20, r22
    3f22:	58 2f       	mov	r21, r24
    3f24:	5d 29       	or	r21, r13
    3f26:	b7 01       	movw	r22, r14
    3f28:	ca 01       	movw	r24, r20
    3f2a:	1f 91       	pop	r17
    3f2c:	0f 91       	pop	r16
    3f2e:	ff 90       	pop	r15
    3f30:	ef 90       	pop	r14
    3f32:	df 90       	pop	r13
    3f34:	08 95       	ret

00003f36 <__unpack_f>:
    3f36:	fc 01       	movw	r30, r24
    3f38:	db 01       	movw	r26, r22
    3f3a:	40 81       	ld	r20, Z
    3f3c:	51 81       	ldd	r21, Z+1	; 0x01
    3f3e:	22 81       	ldd	r18, Z+2	; 0x02
    3f40:	62 2f       	mov	r22, r18
    3f42:	6f 77       	andi	r22, 0x7F	; 127
    3f44:	70 e0       	ldi	r23, 0x00	; 0
    3f46:	22 1f       	adc	r18, r18
    3f48:	22 27       	eor	r18, r18
    3f4a:	22 1f       	adc	r18, r18
    3f4c:	93 81       	ldd	r25, Z+3	; 0x03
    3f4e:	89 2f       	mov	r24, r25
    3f50:	88 0f       	add	r24, r24
    3f52:	82 2b       	or	r24, r18
    3f54:	28 2f       	mov	r18, r24
    3f56:	30 e0       	ldi	r19, 0x00	; 0
    3f58:	99 1f       	adc	r25, r25
    3f5a:	99 27       	eor	r25, r25
    3f5c:	99 1f       	adc	r25, r25
    3f5e:	11 96       	adiw	r26, 0x01	; 1
    3f60:	9c 93       	st	X, r25
    3f62:	11 97       	sbiw	r26, 0x01	; 1
    3f64:	21 15       	cp	r18, r1
    3f66:	31 05       	cpc	r19, r1
    3f68:	a9 f5       	brne	.+106    	; 0x3fd4 <__unpack_f+0x9e>
    3f6a:	41 15       	cp	r20, r1
    3f6c:	51 05       	cpc	r21, r1
    3f6e:	61 05       	cpc	r22, r1
    3f70:	71 05       	cpc	r23, r1
    3f72:	11 f4       	brne	.+4      	; 0x3f78 <__unpack_f+0x42>
    3f74:	82 e0       	ldi	r24, 0x02	; 2
    3f76:	37 c0       	rjmp	.+110    	; 0x3fe6 <__unpack_f+0xb0>
    3f78:	82 e8       	ldi	r24, 0x82	; 130
    3f7a:	9f ef       	ldi	r25, 0xFF	; 255
    3f7c:	13 96       	adiw	r26, 0x03	; 3
    3f7e:	9c 93       	st	X, r25
    3f80:	8e 93       	st	-X, r24
    3f82:	12 97       	sbiw	r26, 0x02	; 2
    3f84:	9a 01       	movw	r18, r20
    3f86:	ab 01       	movw	r20, r22
    3f88:	67 e0       	ldi	r22, 0x07	; 7
    3f8a:	22 0f       	add	r18, r18
    3f8c:	33 1f       	adc	r19, r19
    3f8e:	44 1f       	adc	r20, r20
    3f90:	55 1f       	adc	r21, r21
    3f92:	6a 95       	dec	r22
    3f94:	d1 f7       	brne	.-12     	; 0x3f8a <__unpack_f+0x54>
    3f96:	83 e0       	ldi	r24, 0x03	; 3
    3f98:	8c 93       	st	X, r24
    3f9a:	0d c0       	rjmp	.+26     	; 0x3fb6 <__unpack_f+0x80>
    3f9c:	22 0f       	add	r18, r18
    3f9e:	33 1f       	adc	r19, r19
    3fa0:	44 1f       	adc	r20, r20
    3fa2:	55 1f       	adc	r21, r21
    3fa4:	12 96       	adiw	r26, 0x02	; 2
    3fa6:	8d 91       	ld	r24, X+
    3fa8:	9c 91       	ld	r25, X
    3faa:	13 97       	sbiw	r26, 0x03	; 3
    3fac:	01 97       	sbiw	r24, 0x01	; 1
    3fae:	13 96       	adiw	r26, 0x03	; 3
    3fb0:	9c 93       	st	X, r25
    3fb2:	8e 93       	st	-X, r24
    3fb4:	12 97       	sbiw	r26, 0x02	; 2
    3fb6:	20 30       	cpi	r18, 0x00	; 0
    3fb8:	80 e0       	ldi	r24, 0x00	; 0
    3fba:	38 07       	cpc	r19, r24
    3fbc:	80 e0       	ldi	r24, 0x00	; 0
    3fbe:	48 07       	cpc	r20, r24
    3fc0:	80 e4       	ldi	r24, 0x40	; 64
    3fc2:	58 07       	cpc	r21, r24
    3fc4:	58 f3       	brcs	.-42     	; 0x3f9c <__unpack_f+0x66>
    3fc6:	14 96       	adiw	r26, 0x04	; 4
    3fc8:	2d 93       	st	X+, r18
    3fca:	3d 93       	st	X+, r19
    3fcc:	4d 93       	st	X+, r20
    3fce:	5c 93       	st	X, r21
    3fd0:	17 97       	sbiw	r26, 0x07	; 7
    3fd2:	08 95       	ret
    3fd4:	2f 3f       	cpi	r18, 0xFF	; 255
    3fd6:	31 05       	cpc	r19, r1
    3fd8:	79 f4       	brne	.+30     	; 0x3ff8 <__unpack_f+0xc2>
    3fda:	41 15       	cp	r20, r1
    3fdc:	51 05       	cpc	r21, r1
    3fde:	61 05       	cpc	r22, r1
    3fe0:	71 05       	cpc	r23, r1
    3fe2:	19 f4       	brne	.+6      	; 0x3fea <__unpack_f+0xb4>
    3fe4:	84 e0       	ldi	r24, 0x04	; 4
    3fe6:	8c 93       	st	X, r24
    3fe8:	08 95       	ret
    3fea:	64 ff       	sbrs	r22, 4
    3fec:	03 c0       	rjmp	.+6      	; 0x3ff4 <__unpack_f+0xbe>
    3fee:	81 e0       	ldi	r24, 0x01	; 1
    3ff0:	8c 93       	st	X, r24
    3ff2:	12 c0       	rjmp	.+36     	; 0x4018 <__unpack_f+0xe2>
    3ff4:	1c 92       	st	X, r1
    3ff6:	10 c0       	rjmp	.+32     	; 0x4018 <__unpack_f+0xe2>
    3ff8:	2f 57       	subi	r18, 0x7F	; 127
    3ffa:	30 40       	sbci	r19, 0x00	; 0
    3ffc:	13 96       	adiw	r26, 0x03	; 3
    3ffe:	3c 93       	st	X, r19
    4000:	2e 93       	st	-X, r18
    4002:	12 97       	sbiw	r26, 0x02	; 2
    4004:	83 e0       	ldi	r24, 0x03	; 3
    4006:	8c 93       	st	X, r24
    4008:	87 e0       	ldi	r24, 0x07	; 7
    400a:	44 0f       	add	r20, r20
    400c:	55 1f       	adc	r21, r21
    400e:	66 1f       	adc	r22, r22
    4010:	77 1f       	adc	r23, r23
    4012:	8a 95       	dec	r24
    4014:	d1 f7       	brne	.-12     	; 0x400a <__unpack_f+0xd4>
    4016:	70 64       	ori	r23, 0x40	; 64
    4018:	14 96       	adiw	r26, 0x04	; 4
    401a:	4d 93       	st	X+, r20
    401c:	5d 93       	st	X+, r21
    401e:	6d 93       	st	X+, r22
    4020:	7c 93       	st	X, r23
    4022:	17 97       	sbiw	r26, 0x07	; 7
    4024:	08 95       	ret

00004026 <__fpcmp_parts_f>:
    4026:	1f 93       	push	r17
    4028:	dc 01       	movw	r26, r24
    402a:	fb 01       	movw	r30, r22
    402c:	9c 91       	ld	r25, X
    402e:	92 30       	cpi	r25, 0x02	; 2
    4030:	08 f4       	brcc	.+2      	; 0x4034 <__fpcmp_parts_f+0xe>
    4032:	47 c0       	rjmp	.+142    	; 0x40c2 <__fpcmp_parts_f+0x9c>
    4034:	80 81       	ld	r24, Z
    4036:	82 30       	cpi	r24, 0x02	; 2
    4038:	08 f4       	brcc	.+2      	; 0x403c <__fpcmp_parts_f+0x16>
    403a:	43 c0       	rjmp	.+134    	; 0x40c2 <__fpcmp_parts_f+0x9c>
    403c:	94 30       	cpi	r25, 0x04	; 4
    403e:	51 f4       	brne	.+20     	; 0x4054 <__fpcmp_parts_f+0x2e>
    4040:	11 96       	adiw	r26, 0x01	; 1
    4042:	1c 91       	ld	r17, X
    4044:	84 30       	cpi	r24, 0x04	; 4
    4046:	99 f5       	brne	.+102    	; 0x40ae <__fpcmp_parts_f+0x88>
    4048:	81 81       	ldd	r24, Z+1	; 0x01
    404a:	68 2f       	mov	r22, r24
    404c:	70 e0       	ldi	r23, 0x00	; 0
    404e:	61 1b       	sub	r22, r17
    4050:	71 09       	sbc	r23, r1
    4052:	3f c0       	rjmp	.+126    	; 0x40d2 <__fpcmp_parts_f+0xac>
    4054:	84 30       	cpi	r24, 0x04	; 4
    4056:	21 f0       	breq	.+8      	; 0x4060 <__fpcmp_parts_f+0x3a>
    4058:	92 30       	cpi	r25, 0x02	; 2
    405a:	31 f4       	brne	.+12     	; 0x4068 <__fpcmp_parts_f+0x42>
    405c:	82 30       	cpi	r24, 0x02	; 2
    405e:	b9 f1       	breq	.+110    	; 0x40ce <__fpcmp_parts_f+0xa8>
    4060:	81 81       	ldd	r24, Z+1	; 0x01
    4062:	88 23       	and	r24, r24
    4064:	89 f1       	breq	.+98     	; 0x40c8 <__fpcmp_parts_f+0xa2>
    4066:	2d c0       	rjmp	.+90     	; 0x40c2 <__fpcmp_parts_f+0x9c>
    4068:	11 96       	adiw	r26, 0x01	; 1
    406a:	1c 91       	ld	r17, X
    406c:	11 97       	sbiw	r26, 0x01	; 1
    406e:	82 30       	cpi	r24, 0x02	; 2
    4070:	f1 f0       	breq	.+60     	; 0x40ae <__fpcmp_parts_f+0x88>
    4072:	81 81       	ldd	r24, Z+1	; 0x01
    4074:	18 17       	cp	r17, r24
    4076:	d9 f4       	brne	.+54     	; 0x40ae <__fpcmp_parts_f+0x88>
    4078:	12 96       	adiw	r26, 0x02	; 2
    407a:	2d 91       	ld	r18, X+
    407c:	3c 91       	ld	r19, X
    407e:	13 97       	sbiw	r26, 0x03	; 3
    4080:	82 81       	ldd	r24, Z+2	; 0x02
    4082:	93 81       	ldd	r25, Z+3	; 0x03
    4084:	82 17       	cp	r24, r18
    4086:	93 07       	cpc	r25, r19
    4088:	94 f0       	brlt	.+36     	; 0x40ae <__fpcmp_parts_f+0x88>
    408a:	28 17       	cp	r18, r24
    408c:	39 07       	cpc	r19, r25
    408e:	bc f0       	brlt	.+46     	; 0x40be <__fpcmp_parts_f+0x98>
    4090:	14 96       	adiw	r26, 0x04	; 4
    4092:	8d 91       	ld	r24, X+
    4094:	9d 91       	ld	r25, X+
    4096:	0d 90       	ld	r0, X+
    4098:	bc 91       	ld	r27, X
    409a:	a0 2d       	mov	r26, r0
    409c:	24 81       	ldd	r18, Z+4	; 0x04
    409e:	35 81       	ldd	r19, Z+5	; 0x05
    40a0:	46 81       	ldd	r20, Z+6	; 0x06
    40a2:	57 81       	ldd	r21, Z+7	; 0x07
    40a4:	28 17       	cp	r18, r24
    40a6:	39 07       	cpc	r19, r25
    40a8:	4a 07       	cpc	r20, r26
    40aa:	5b 07       	cpc	r21, r27
    40ac:	18 f4       	brcc	.+6      	; 0x40b4 <__fpcmp_parts_f+0x8e>
    40ae:	11 23       	and	r17, r17
    40b0:	41 f0       	breq	.+16     	; 0x40c2 <__fpcmp_parts_f+0x9c>
    40b2:	0a c0       	rjmp	.+20     	; 0x40c8 <__fpcmp_parts_f+0xa2>
    40b4:	82 17       	cp	r24, r18
    40b6:	93 07       	cpc	r25, r19
    40b8:	a4 07       	cpc	r26, r20
    40ba:	b5 07       	cpc	r27, r21
    40bc:	40 f4       	brcc	.+16     	; 0x40ce <__fpcmp_parts_f+0xa8>
    40be:	11 23       	and	r17, r17
    40c0:	19 f0       	breq	.+6      	; 0x40c8 <__fpcmp_parts_f+0xa2>
    40c2:	61 e0       	ldi	r22, 0x01	; 1
    40c4:	70 e0       	ldi	r23, 0x00	; 0
    40c6:	05 c0       	rjmp	.+10     	; 0x40d2 <__fpcmp_parts_f+0xac>
    40c8:	6f ef       	ldi	r22, 0xFF	; 255
    40ca:	7f ef       	ldi	r23, 0xFF	; 255
    40cc:	02 c0       	rjmp	.+4      	; 0x40d2 <__fpcmp_parts_f+0xac>
    40ce:	60 e0       	ldi	r22, 0x00	; 0
    40d0:	70 e0       	ldi	r23, 0x00	; 0
    40d2:	cb 01       	movw	r24, r22
    40d4:	1f 91       	pop	r17
    40d6:	08 95       	ret

000040d8 <itoa>:
    40d8:	fb 01       	movw	r30, r22
    40da:	9f 01       	movw	r18, r30
    40dc:	e8 94       	clt
    40de:	42 30       	cpi	r20, 0x02	; 2
    40e0:	c4 f0       	brlt	.+48     	; 0x4112 <itoa+0x3a>
    40e2:	45 32       	cpi	r20, 0x25	; 37
    40e4:	b4 f4       	brge	.+44     	; 0x4112 <itoa+0x3a>
    40e6:	4a 30       	cpi	r20, 0x0A	; 10
    40e8:	29 f4       	brne	.+10     	; 0x40f4 <itoa+0x1c>
    40ea:	97 fb       	bst	r25, 7
    40ec:	1e f4       	brtc	.+6      	; 0x40f4 <itoa+0x1c>
    40ee:	90 95       	com	r25
    40f0:	81 95       	neg	r24
    40f2:	9f 4f       	sbci	r25, 0xFF	; 255
    40f4:	64 2f       	mov	r22, r20
    40f6:	77 27       	eor	r23, r23
    40f8:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <__udivmodhi4>
    40fc:	80 5d       	subi	r24, 0xD0	; 208
    40fe:	8a 33       	cpi	r24, 0x3A	; 58
    4100:	0c f0       	brlt	.+2      	; 0x4104 <itoa+0x2c>
    4102:	89 5d       	subi	r24, 0xD9	; 217
    4104:	81 93       	st	Z+, r24
    4106:	cb 01       	movw	r24, r22
    4108:	00 97       	sbiw	r24, 0x00	; 0
    410a:	a1 f7       	brne	.-24     	; 0x40f4 <itoa+0x1c>
    410c:	16 f4       	brtc	.+4      	; 0x4112 <itoa+0x3a>
    410e:	5d e2       	ldi	r21, 0x2D	; 45
    4110:	51 93       	st	Z+, r21
    4112:	10 82       	st	Z, r1
    4114:	c9 01       	movw	r24, r18
    4116:	0c 94 8d 20 	jmp	0x411a	; 0x411a <strrev>

0000411a <strrev>:
    411a:	dc 01       	movw	r26, r24
    411c:	fc 01       	movw	r30, r24
    411e:	67 2f       	mov	r22, r23
    4120:	71 91       	ld	r23, Z+
    4122:	77 23       	and	r23, r23
    4124:	e1 f7       	brne	.-8      	; 0x411e <strrev+0x4>
    4126:	32 97       	sbiw	r30, 0x02	; 2
    4128:	04 c0       	rjmp	.+8      	; 0x4132 <strrev+0x18>
    412a:	7c 91       	ld	r23, X
    412c:	6d 93       	st	X+, r22
    412e:	70 83       	st	Z, r23
    4130:	62 91       	ld	r22, -Z
    4132:	ae 17       	cp	r26, r30
    4134:	bf 07       	cpc	r27, r31
    4136:	c8 f3       	brcs	.-14     	; 0x412a <strrev+0x10>
    4138:	08 95       	ret

0000413a <__prologue_saves__>:
    413a:	2f 92       	push	r2
    413c:	3f 92       	push	r3
    413e:	4f 92       	push	r4
    4140:	5f 92       	push	r5
    4142:	6f 92       	push	r6
    4144:	7f 92       	push	r7
    4146:	8f 92       	push	r8
    4148:	9f 92       	push	r9
    414a:	af 92       	push	r10
    414c:	bf 92       	push	r11
    414e:	cf 92       	push	r12
    4150:	df 92       	push	r13
    4152:	ef 92       	push	r14
    4154:	ff 92       	push	r15
    4156:	0f 93       	push	r16
    4158:	1f 93       	push	r17
    415a:	cf 93       	push	r28
    415c:	df 93       	push	r29
    415e:	cd b7       	in	r28, 0x3d	; 61
    4160:	de b7       	in	r29, 0x3e	; 62
    4162:	ca 1b       	sub	r28, r26
    4164:	db 0b       	sbc	r29, r27
    4166:	0f b6       	in	r0, 0x3f	; 63
    4168:	f8 94       	cli
    416a:	de bf       	out	0x3e, r29	; 62
    416c:	0f be       	out	0x3f, r0	; 63
    416e:	cd bf       	out	0x3d, r28	; 61
    4170:	09 94       	ijmp

00004172 <__epilogue_restores__>:
    4172:	2a 88       	ldd	r2, Y+18	; 0x12
    4174:	39 88       	ldd	r3, Y+17	; 0x11
    4176:	48 88       	ldd	r4, Y+16	; 0x10
    4178:	5f 84       	ldd	r5, Y+15	; 0x0f
    417a:	6e 84       	ldd	r6, Y+14	; 0x0e
    417c:	7d 84       	ldd	r7, Y+13	; 0x0d
    417e:	8c 84       	ldd	r8, Y+12	; 0x0c
    4180:	9b 84       	ldd	r9, Y+11	; 0x0b
    4182:	aa 84       	ldd	r10, Y+10	; 0x0a
    4184:	b9 84       	ldd	r11, Y+9	; 0x09
    4186:	c8 84       	ldd	r12, Y+8	; 0x08
    4188:	df 80       	ldd	r13, Y+7	; 0x07
    418a:	ee 80       	ldd	r14, Y+6	; 0x06
    418c:	fd 80       	ldd	r15, Y+5	; 0x05
    418e:	0c 81       	ldd	r16, Y+4	; 0x04
    4190:	1b 81       	ldd	r17, Y+3	; 0x03
    4192:	aa 81       	ldd	r26, Y+2	; 0x02
    4194:	b9 81       	ldd	r27, Y+1	; 0x01
    4196:	ce 0f       	add	r28, r30
    4198:	d1 1d       	adc	r29, r1
    419a:	0f b6       	in	r0, 0x3f	; 63
    419c:	f8 94       	cli
    419e:	de bf       	out	0x3e, r29	; 62
    41a0:	0f be       	out	0x3f, r0	; 63
    41a2:	cd bf       	out	0x3d, r28	; 61
    41a4:	ed 01       	movw	r28, r26
    41a6:	08 95       	ret

000041a8 <__udivmodhi4>:
    41a8:	aa 1b       	sub	r26, r26
    41aa:	bb 1b       	sub	r27, r27
    41ac:	51 e1       	ldi	r21, 0x11	; 17
    41ae:	07 c0       	rjmp	.+14     	; 0x41be <__udivmodhi4_ep>

000041b0 <__udivmodhi4_loop>:
    41b0:	aa 1f       	adc	r26, r26
    41b2:	bb 1f       	adc	r27, r27
    41b4:	a6 17       	cp	r26, r22
    41b6:	b7 07       	cpc	r27, r23
    41b8:	10 f0       	brcs	.+4      	; 0x41be <__udivmodhi4_ep>
    41ba:	a6 1b       	sub	r26, r22
    41bc:	b7 0b       	sbc	r27, r23

000041be <__udivmodhi4_ep>:
    41be:	88 1f       	adc	r24, r24
    41c0:	99 1f       	adc	r25, r25
    41c2:	5a 95       	dec	r21
    41c4:	a9 f7       	brne	.-22     	; 0x41b0 <__udivmodhi4_loop>
    41c6:	80 95       	com	r24
    41c8:	90 95       	com	r25
    41ca:	bc 01       	movw	r22, r24
    41cc:	cd 01       	movw	r24, r26
    41ce:	08 95       	ret

000041d0 <_exit>:
    41d0:	f8 94       	cli

000041d2 <__stop_program>:
    41d2:	ff cf       	rjmp	.-2      	; 0x41d2 <__stop_program>
